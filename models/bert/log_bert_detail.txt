XCCL /work/xpu/virtualenvs/paddle_py310_yiqun/lib/python3.10/site-packages/paddle/fluid/../libs/libbkcl.so loaded
[16:35:25][INFO][BKCL][globals.cpp:95] set BKCL timeout to 600 seconds
[16:35:25][INFO][BKCL][globals.cpp:96] set BKCL RING BUFFER SIZE to 1048576
XPURT /work/xpu/virtualenvs/paddle_py310_yiqun/lib/python3.10/site-packages/paddle/fluid/../libs/libxpurt.so.1 loaded
Hint: Your machine support AVX, but the installed paddlepaddle doesn't have avx core. Hence, no-avx core with worse performance will be imported.
If you like, you could reinstall paddlepaddle by 'python -m pip install --force-reinstall paddlepaddle-gpu[==version]' to get better performance.
/work/xpu/virtualenvs/paddle_py310_yiqun/lib/python3.10/site-packages/_distutils_hack/__init__.py:26: UserWarning: Setuptools is replacing distutils.
  warnings.warn("Setuptools is replacing distutils.")
[32m[2024-06-03 16:35:28,435] [    INFO][0m - Already cached /root/.paddlenlp/models/bert-base-uncased/bert-base-uncased-vocab.txt[0m
[32m[2024-06-03 16:35:28,448] [    INFO][0m - tokenizer config file saved in /root/.paddlenlp/models/bert-base-uncased/tokenizer_config.json[0m
[32m[2024-06-03 16:35:28,449] [    INFO][0m - Special tokens file saved in /root/.paddlenlp/models/bert-base-uncased/special_tokens_map.json[0m
I0603 16:35:28.456387 76297 api.cc:34891] uniform API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:28.456647 76297 api.cc:34898] uniform kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","DataType","Scalar","Scalar","int"]}
W0603 16:35:28.456701 76297 xpu_context.cc:169] Please NOTE: xpu device: 0
autotune_file fc {} not exist
I0603 16:35:28.835268 76297 api.cc:34891] uniform API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:28.835353 76297 api.cc:34898] uniform kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","DataType","Scalar","Scalar","int"]}
I0603 16:35:28.842051 76297 api.cc:34891] uniform API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:28.842080 76297 api.cc:34898] uniform kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","DataType","Scalar","Scalar","int"]}
I0603 16:35:28.842747 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:28.842774 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:28.842967 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:28.842975 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:28.843782 76297 api.cc:34891] uniform API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:28.843796 76297 api.cc:34898] uniform kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","DataType","Scalar","Scalar","int"]}
I0603 16:35:28.852875 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:28.852892 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:28.853108 76297 api.cc:34891] uniform API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:28.853117 76297 api.cc:34898] uniform kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","DataType","Scalar","Scalar","int"]}
I0603 16:35:28.861820 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:28.861835 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:28.862023 76297 api.cc:34891] uniform API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:28.862032 76297 api.cc:34898] uniform kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","DataType","Scalar","Scalar","int"]}
I0603 16:35:28.870714 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:28.870728 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:28.870947 76297 api.cc:34891] uniform API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:28.870957 76297 api.cc:34898] uniform kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","DataType","Scalar","Scalar","int"]}
I0603 16:35:28.879674 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:28.879688 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:28.879921 76297 api.cc:34891] uniform API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:28.879931 76297 api.cc:34898] uniform kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","DataType","Scalar","Scalar","int"]}
I0603 16:35:28.920955 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:28.920976 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:28.921317 76297 api.cc:34891] uniform API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:28.921329 76297 api.cc:34898] uniform kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","DataType","Scalar","Scalar","int"]}
I0603 16:35:28.966673 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:28.966708 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:28.967100 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:28.967114 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:28.967219 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:28.967227 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:28.967427 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:28.967437 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:28.967525 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:28.967531 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:28.968259 76297 api.cc:34891] uniform API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:28.968277 76297 api.cc:34898] uniform kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","DataType","Scalar","Scalar","int"]}
I0603 16:35:28.978674 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:28.978691 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:28.978936 76297 api.cc:34891] uniform API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:28.978947 76297 api.cc:34898] uniform kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","DataType","Scalar","Scalar","int"]}
I0603 16:35:28.989331 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:28.989347 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:28.989581 76297 api.cc:34891] uniform API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:28.989591 76297 api.cc:34898] uniform kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","DataType","Scalar","Scalar","int"]}
I0603 16:35:28.999697 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:28.999711 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:28.999919 76297 api.cc:34891] uniform API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:28.999929 76297 api.cc:34898] uniform kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","DataType","Scalar","Scalar","int"]}
I0603 16:35:29.008517 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:29.008529 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:29.008731 76297 api.cc:34891] uniform API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:29.008740 76297 api.cc:34898] uniform kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","DataType","Scalar","Scalar","int"]}
I0603 16:35:29.042654 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:29.042667 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:29.042949 76297 api.cc:34891] uniform API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:29.042959 76297 api.cc:34898] uniform kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","DataType","Scalar","Scalar","int"]}
I0603 16:35:29.076754 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:29.076767 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:29.077028 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:29.077039 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:29.077124 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:29.077139 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:29.077303 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:29.077311 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:29.077391 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:29.077399 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:29.077939 76297 api.cc:34891] uniform API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:29.077952 76297 api.cc:34898] uniform kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","DataType","Scalar","Scalar","int"]}
I0603 16:35:29.086522 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:29.086535 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:29.086730 76297 api.cc:34891] uniform API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:29.086740 76297 api.cc:34898] uniform kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","DataType","Scalar","Scalar","int"]}
I0603 16:35:29.095312 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:29.095324 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:29.095499 76297 api.cc:34891] uniform API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:29.095507 76297 api.cc:34898] uniform kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","DataType","Scalar","Scalar","int"]}
I0603 16:35:29.104161 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:29.104173 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:29.104358 76297 api.cc:34891] uniform API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:29.104367 76297 api.cc:34898] uniform kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","DataType","Scalar","Scalar","int"]}
I0603 16:35:29.112944 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:29.112957 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:29.113145 76297 api.cc:34891] uniform API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:29.113154 76297 api.cc:34898] uniform kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","DataType","Scalar","Scalar","int"]}
I0603 16:35:29.146982 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:29.146996 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:29.147231 76297 api.cc:34891] uniform API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:29.147240 76297 api.cc:34898] uniform kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","DataType","Scalar","Scalar","int"]}
I0603 16:35:29.181077 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:29.181088 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:29.181282 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:29.181293 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:29.181375 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:29.181380 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:29.181541 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:29.181550 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:29.181628 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:29.181634 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:29.182080 76297 api.cc:34891] uniform API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:29.182090 76297 api.cc:34898] uniform kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","DataType","Scalar","Scalar","int"]}
I0603 16:35:29.190667 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:29.190680 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:29.190871 76297 api.cc:34891] uniform API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:29.190879 76297 api.cc:34898] uniform kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","DataType","Scalar","Scalar","int"]}
I0603 16:35:29.199442 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:29.199455 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:29.199635 76297 api.cc:34891] uniform API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:29.199642 76297 api.cc:34898] uniform kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","DataType","Scalar","Scalar","int"]}
I0603 16:35:29.208220 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:29.208232 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:29.208420 76297 api.cc:34891] uniform API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:29.208427 76297 api.cc:34898] uniform kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","DataType","Scalar","Scalar","int"]}
I0603 16:35:29.216996 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:29.217008 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:29.217188 76297 api.cc:34891] uniform API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:29.217196 76297 api.cc:34898] uniform kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","DataType","Scalar","Scalar","int"]}
I0603 16:35:29.250967 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:29.250978 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:29.251209 76297 api.cc:34891] uniform API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:29.251217 76297 api.cc:34898] uniform kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","DataType","Scalar","Scalar","int"]}
I0603 16:35:29.285065 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:29.285079 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:29.285275 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:29.285284 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:29.285369 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:29.285378 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:29.285534 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:29.285542 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:29.285616 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:29.285624 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:29.286062 76297 api.cc:34891] uniform API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:29.286072 76297 api.cc:34898] uniform kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","DataType","Scalar","Scalar","int"]}
I0603 16:35:29.294649 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:29.294662 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:29.294859 76297 api.cc:34891] uniform API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:29.294869 76297 api.cc:34898] uniform kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","DataType","Scalar","Scalar","int"]}
I0603 16:35:29.303442 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:29.303453 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:29.306206 76297 api.cc:34891] uniform API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:29.306221 76297 api.cc:34898] uniform kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","DataType","Scalar","Scalar","int"]}
I0603 16:35:29.314803 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:29.314828 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:29.315014 76297 api.cc:34891] uniform API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:29.315022 76297 api.cc:34898] uniform kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","DataType","Scalar","Scalar","int"]}
I0603 16:35:29.323582 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:29.323594 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:29.323779 76297 api.cc:34891] uniform API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:29.323787 76297 api.cc:34898] uniform kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","DataType","Scalar","Scalar","int"]}
I0603 16:35:29.357604 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:29.357617 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:29.357872 76297 api.cc:34891] uniform API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:29.357882 76297 api.cc:34898] uniform kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","DataType","Scalar","Scalar","int"]}
I0603 16:35:29.391707 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:29.391721 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:29.391927 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:29.391937 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:29.392021 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:29.392027 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:29.392186 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:29.392194 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:29.392269 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:29.392277 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:29.392722 76297 api.cc:34891] uniform API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:29.392732 76297 api.cc:34898] uniform kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","DataType","Scalar","Scalar","int"]}
I0603 16:35:29.401422 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:29.401435 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:29.401620 76297 api.cc:34891] uniform API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:29.401628 76297 api.cc:34898] uniform kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","DataType","Scalar","Scalar","int"]}
I0603 16:35:29.410228 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:29.410239 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:29.410419 76297 api.cc:34891] uniform API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:29.410429 76297 api.cc:34898] uniform kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","DataType","Scalar","Scalar","int"]}
I0603 16:35:29.419013 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:29.419026 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:29.419200 76297 api.cc:34891] uniform API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:29.419209 76297 api.cc:34898] uniform kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","DataType","Scalar","Scalar","int"]}
I0603 16:35:29.427767 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:29.427779 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:29.427994 76297 api.cc:34891] uniform API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:29.428004 76297 api.cc:34898] uniform kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","DataType","Scalar","Scalar","int"]}
I0603 16:35:29.461858 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:29.461871 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:29.462103 76297 api.cc:34891] uniform API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:29.462112 76297 api.cc:34898] uniform kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","DataType","Scalar","Scalar","int"]}
I0603 16:35:29.495960 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:29.495975 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:29.496169 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:29.496178 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:29.496261 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:29.496268 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:29.496429 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:29.496438 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:29.496512 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:29.496517 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:29.496973 76297 api.cc:34891] uniform API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:29.496984 76297 api.cc:34898] uniform kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","DataType","Scalar","Scalar","int"]}
I0603 16:35:29.505570 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:29.505584 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:29.505766 76297 api.cc:34891] uniform API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:29.505774 76297 api.cc:34898] uniform kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","DataType","Scalar","Scalar","int"]}
I0603 16:35:29.514350 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:29.514362 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:29.514541 76297 api.cc:34891] uniform API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:29.514549 76297 api.cc:34898] uniform kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","DataType","Scalar","Scalar","int"]}
I0603 16:35:29.523115 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:29.523128 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:29.523308 76297 api.cc:34891] uniform API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:29.523316 76297 api.cc:34898] uniform kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","DataType","Scalar","Scalar","int"]}
I0603 16:35:29.531874 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:29.531886 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:29.532111 76297 api.cc:34891] uniform API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:29.532121 76297 api.cc:34898] uniform kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","DataType","Scalar","Scalar","int"]}
I0603 16:35:29.565932 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:29.565945 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:29.566181 76297 api.cc:34891] uniform API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:29.566190 76297 api.cc:34898] uniform kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","DataType","Scalar","Scalar","int"]}
I0603 16:35:29.600028 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:29.600040 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:29.600232 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:29.600241 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:29.600325 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:29.600332 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:29.600492 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:29.600499 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:29.600580 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:29.600585 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:29.601027 76297 api.cc:34891] uniform API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:29.601037 76297 api.cc:34898] uniform kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","DataType","Scalar","Scalar","int"]}
I0603 16:35:29.609601 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:29.609613 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:29.609802 76297 api.cc:34891] uniform API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:29.609818 76297 api.cc:34898] uniform kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","DataType","Scalar","Scalar","int"]}
I0603 16:35:29.618383 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:29.618395 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:29.618577 76297 api.cc:34891] uniform API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:29.618585 76297 api.cc:34898] uniform kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","DataType","Scalar","Scalar","int"]}
I0603 16:35:29.627156 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:29.627169 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:29.627343 76297 api.cc:34891] uniform API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:29.627352 76297 api.cc:34898] uniform kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","DataType","Scalar","Scalar","int"]}
I0603 16:35:29.635936 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:29.635949 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:29.636134 76297 api.cc:34891] uniform API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:29.636143 76297 api.cc:34898] uniform kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","DataType","Scalar","Scalar","int"]}
I0603 16:35:29.670107 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:29.670120 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:29.670359 76297 api.cc:34891] uniform API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:29.670368 76297 api.cc:34898] uniform kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","DataType","Scalar","Scalar","int"]}
I0603 16:35:29.704218 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:29.704231 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:29.704428 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:29.704437 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:29.704524 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:29.704531 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:29.704689 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:29.704696 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:29.704772 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:29.704778 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:29.705233 76297 api.cc:34891] uniform API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:29.705245 76297 api.cc:34898] uniform kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","DataType","Scalar","Scalar","int"]}
I0603 16:35:29.713924 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:29.713937 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:29.714123 76297 api.cc:34891] uniform API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:29.714131 76297 api.cc:34898] uniform kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","DataType","Scalar","Scalar","int"]}
I0603 16:35:29.722822 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:29.722836 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:29.723021 76297 api.cc:34891] uniform API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:29.723028 76297 api.cc:34898] uniform kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","DataType","Scalar","Scalar","int"]}
I0603 16:35:29.731705 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:29.731717 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:29.731904 76297 api.cc:34891] uniform API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:29.731913 76297 api.cc:34898] uniform kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","DataType","Scalar","Scalar","int"]}
I0603 16:35:29.740568 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:29.740581 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:29.740774 76297 api.cc:34891] uniform API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:29.740783 76297 api.cc:34898] uniform kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","DataType","Scalar","Scalar","int"]}
I0603 16:35:29.775111 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:29.775132 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:29.775408 76297 api.cc:34891] uniform API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:29.775417 76297 api.cc:34898] uniform kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","DataType","Scalar","Scalar","int"]}
I0603 16:35:29.809950 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:29.809984 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:29.810307 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:29.810318 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:29.810410 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:29.810416 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:29.810588 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:29.810596 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:29.810676 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:29.810683 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:29.811165 76297 api.cc:34891] uniform API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:29.811177 76297 api.cc:34898] uniform kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","DataType","Scalar","Scalar","int"]}
I0603 16:35:29.820096 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:29.820125 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:29.820365 76297 api.cc:34891] uniform API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:29.820375 76297 api.cc:34898] uniform kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","DataType","Scalar","Scalar","int"]}
I0603 16:35:29.829281 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:29.829308 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:29.829547 76297 api.cc:34891] uniform API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:29.829557 76297 api.cc:34898] uniform kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","DataType","Scalar","Scalar","int"]}
I0603 16:35:29.838423 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:29.838446 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:29.838671 76297 api.cc:34891] uniform API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:29.838681 76297 api.cc:34898] uniform kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","DataType","Scalar","Scalar","int"]}
I0603 16:35:29.847544 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:29.847564 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:29.847788 76297 api.cc:34891] uniform API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:29.847797 76297 api.cc:34898] uniform kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","DataType","Scalar","Scalar","int"]}
I0603 16:35:29.882239 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:29.882267 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:29.882579 76297 api.cc:34891] uniform API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:29.882589 76297 api.cc:34898] uniform kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","DataType","Scalar","Scalar","int"]}
I0603 16:35:29.916921 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:29.916949 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:29.917261 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:29.917271 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:29.917358 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:29.917364 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:29.917531 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:29.917537 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:29.917616 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:29.917622 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:29.918118 76297 api.cc:34891] uniform API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:29.918131 76297 api.cc:34898] uniform kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","DataType","Scalar","Scalar","int"]}
I0603 16:35:29.926964 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:29.926980 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:29.927184 76297 api.cc:34891] uniform API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:29.927193 76297 api.cc:34898] uniform kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","DataType","Scalar","Scalar","int"]}
I0603 16:35:29.935883 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:29.935897 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:29.936084 76297 api.cc:34891] uniform API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:29.936093 76297 api.cc:34898] uniform kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","DataType","Scalar","Scalar","int"]}
I0603 16:35:29.944705 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:29.944718 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:29.944913 76297 api.cc:34891] uniform API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:29.944923 76297 api.cc:34898] uniform kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","DataType","Scalar","Scalar","int"]}
I0603 16:35:29.953505 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:29.953517 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:29.953714 76297 api.cc:34891] uniform API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:29.953723 76297 api.cc:34898] uniform kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","DataType","Scalar","Scalar","int"]}
I0603 16:35:29.987591 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:29.987604 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:29.987854 76297 api.cc:34891] uniform API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:29.987864 76297 api.cc:34898] uniform kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","DataType","Scalar","Scalar","int"]}
I0603 16:35:30.021872 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:30.021886 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:30.022104 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:30.022114 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:30.022200 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:30.022207 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:30.022372 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:30.022380 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:30.022461 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:30.022467 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:30.023002 76297 api.cc:34891] uniform API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:30.023015 76297 api.cc:34898] uniform kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","DataType","Scalar","Scalar","int"]}
I0603 16:35:30.031702 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:30.031715 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:30.031920 76297 api.cc:34891] uniform API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:30.031929 76297 api.cc:34898] uniform kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","DataType","Scalar","Scalar","int"]}
I0603 16:35:30.040618 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:30.040630 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:30.040817 76297 api.cc:34891] uniform API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:30.040825 76297 api.cc:34898] uniform kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","DataType","Scalar","Scalar","int"]}
I0603 16:35:30.049566 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:30.049580 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:30.049765 76297 api.cc:34891] uniform API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:30.049774 76297 api.cc:34898] uniform kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","DataType","Scalar","Scalar","int"]}
I0603 16:35:30.058434 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:30.058446 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:30.058642 76297 api.cc:34891] uniform API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:30.058651 76297 api.cc:34898] uniform kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","DataType","Scalar","Scalar","int"]}
I0603 16:35:30.092849 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:30.092865 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:30.093112 76297 api.cc:34891] uniform API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:30.093122 76297 api.cc:34898] uniform kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","DataType","Scalar","Scalar","int"]}
I0603 16:35:30.141412 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:30.141456 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:30.142583 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:30.142611 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:30.142920 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:30.143105 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:30.143774 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:30.143798 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:30.144304 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:30.144321 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:30.145776 76297 api.cc:34891] uniform API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:30.145800 76297 api.cc:34898] uniform kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","DataType","Scalar","Scalar","int"]}
I0603 16:35:30.169607 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:30.169643 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:30.170318 76297 api.cc:29578] gaussian API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:30.170348 76297 api.cc:29585] gaussian kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","float","float","int","DataType"]}
I0603 16:35:30.277415 76297 api.cc:29578] gaussian API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:30.277468 76297 api.cc:29585] gaussian kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","float","float","int","DataType"]}
I0603 16:35:30.278541 76297 api.cc:29578] gaussian API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:30.278568 76297 api.cc:29585] gaussian kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","float","float","int","DataType"]}
I0603 16:35:30.278939 76297 api.cc:29578] gaussian API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:30.278956 76297 api.cc:29585] gaussian kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","float","float","int","DataType"]}
I0603 16:35:30.280135 76297 api.cc:29578] gaussian API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:30.280159 76297 api.cc:29585] gaussian kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","float","float","int","DataType"]}
I0603 16:35:30.281253 76297 api.cc:29578] gaussian API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:30.281275 76297 api.cc:29585] gaussian kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","float","float","int","DataType"]}
I0603 16:35:30.282367 76297 api.cc:29578] gaussian API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:30.282388 76297 api.cc:29585] gaussian kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","float","float","int","DataType"]}
I0603 16:35:30.283530 76297 api.cc:29578] gaussian API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:30.283555 76297 api.cc:29585] gaussian kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","float","float","int","DataType"]}
I0603 16:35:30.288095 76297 api.cc:29578] gaussian API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:30.288121 76297 api.cc:29585] gaussian kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","float","float","int","DataType"]}
I0603 16:35:30.292663 76297 api.cc:29578] gaussian API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:30.292690 76297 api.cc:29585] gaussian kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","float","float","int","DataType"]}
I0603 16:35:30.293889 76297 api.cc:29578] gaussian API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:30.293912 76297 api.cc:29585] gaussian kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","float","float","int","DataType"]}
I0603 16:35:30.295152 76297 api.cc:29578] gaussian API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:30.295176 76297 api.cc:29585] gaussian kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","float","float","int","DataType"]}
I0603 16:35:30.296427 76297 api.cc:29578] gaussian API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:30.296450 76297 api.cc:29585] gaussian kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","float","float","int","DataType"]}
I0603 16:35:30.297788 76297 api.cc:29578] gaussian API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:30.297821 76297 api.cc:29585] gaussian kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","float","float","int","DataType"]}
I0603 16:35:30.302202 76297 api.cc:29578] gaussian API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:30.302224 76297 api.cc:29585] gaussian kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","float","float","int","DataType"]}
I0603 16:35:30.306386 76297 api.cc:29578] gaussian API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:30.306408 76297 api.cc:29585] gaussian kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","float","float","int","DataType"]}
I0603 16:35:30.307543 76297 api.cc:29578] gaussian API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:30.307564 76297 api.cc:29585] gaussian kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","float","float","int","DataType"]}
I0603 16:35:30.308732 76297 api.cc:29578] gaussian API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:30.308754 76297 api.cc:29585] gaussian kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","float","float","int","DataType"]}
I0603 16:35:30.309942 76297 api.cc:29578] gaussian API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:30.309962 76297 api.cc:29585] gaussian kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","float","float","int","DataType"]}
I0603 16:35:30.311121 76297 api.cc:29578] gaussian API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:30.311141 76297 api.cc:29585] gaussian kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","float","float","int","DataType"]}
I0603 16:35:30.315078 76297 api.cc:29578] gaussian API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:30.315099 76297 api.cc:29585] gaussian kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","float","float","int","DataType"]}
I0603 16:35:30.319048 76297 api.cc:29578] gaussian API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:30.319069 76297 api.cc:29585] gaussian kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","float","float","int","DataType"]}
I0603 16:35:30.320190 76297 api.cc:29578] gaussian API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:30.320210 76297 api.cc:29585] gaussian kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","float","float","int","DataType"]}
I0603 16:35:30.321241 76297 api.cc:29578] gaussian API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:30.321259 76297 api.cc:29585] gaussian kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","float","float","int","DataType"]}
I0603 16:35:30.322288 76297 api.cc:29578] gaussian API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:30.322304 76297 api.cc:29585] gaussian kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","float","float","int","DataType"]}
I0603 16:35:30.323329 76297 api.cc:29578] gaussian API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:30.323346 76297 api.cc:29585] gaussian kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","float","float","int","DataType"]}
I0603 16:35:30.326962 76297 api.cc:29578] gaussian API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:30.326982 76297 api.cc:29585] gaussian kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","float","float","int","DataType"]}
I0603 16:35:30.330643 76297 api.cc:29578] gaussian API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:30.330662 76297 api.cc:29585] gaussian kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","float","float","int","DataType"]}
I0603 16:35:30.331703 76297 api.cc:29578] gaussian API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:30.331722 76297 api.cc:29585] gaussian kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","float","float","int","DataType"]}
I0603 16:35:30.332688 76297 api.cc:29578] gaussian API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:30.332705 76297 api.cc:29585] gaussian kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","float","float","int","DataType"]}
I0603 16:35:30.333668 76297 api.cc:29578] gaussian API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:30.333684 76297 api.cc:29585] gaussian kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","float","float","int","DataType"]}
I0603 16:35:30.334659 76297 api.cc:29578] gaussian API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:30.334674 76297 api.cc:29585] gaussian kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","float","float","int","DataType"]}
I0603 16:35:30.338215 76297 api.cc:29578] gaussian API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:30.338232 76297 api.cc:29585] gaussian kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","float","float","int","DataType"]}
I0603 16:35:30.341727 76297 api.cc:29578] gaussian API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:30.341742 76297 api.cc:29585] gaussian kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","float","float","int","DataType"]}
I0603 16:35:30.342689 76297 api.cc:29578] gaussian API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:30.342705 76297 api.cc:29585] gaussian kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","float","float","int","DataType"]}
I0603 16:35:30.343644 76297 api.cc:29578] gaussian API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:30.343659 76297 api.cc:29585] gaussian kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","float","float","int","DataType"]}
I0603 16:35:30.344592 76297 api.cc:29578] gaussian API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:30.344609 76297 api.cc:29585] gaussian kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","float","float","int","DataType"]}
I0603 16:35:30.345551 76297 api.cc:29578] gaussian API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:30.345566 76297 api.cc:29585] gaussian kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","float","float","int","DataType"]}
I0603 16:35:30.348894 76297 api.cc:29578] gaussian API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:30.348910 76297 api.cc:29585] gaussian kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","float","float","int","DataType"]}
I0603 16:35:30.352327 76297 api.cc:29578] gaussian API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:30.352344 76297 api.cc:29585] gaussian kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","float","float","int","DataType"]}
I0603 16:35:30.353289 76297 api.cc:29578] gaussian API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:30.353304 76297 api.cc:29585] gaussian kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","float","float","int","DataType"]}
I0603 16:35:30.354257 76297 api.cc:29578] gaussian API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:30.354271 76297 api.cc:29585] gaussian kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","float","float","int","DataType"]}
I0603 16:35:30.355187 76297 api.cc:29578] gaussian API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:30.355201 76297 api.cc:29585] gaussian kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","float","float","int","DataType"]}
I0603 16:35:30.356132 76297 api.cc:29578] gaussian API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:30.356145 76297 api.cc:29585] gaussian kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","float","float","int","DataType"]}
I0603 16:35:30.359357 76297 api.cc:29578] gaussian API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:30.359372 76297 api.cc:29585] gaussian kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","float","float","int","DataType"]}
I0603 16:35:30.362588 76297 api.cc:29578] gaussian API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:30.362603 76297 api.cc:29585] gaussian kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","float","float","int","DataType"]}
I0603 16:35:30.363507 76297 api.cc:29578] gaussian API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:30.363520 76297 api.cc:29585] gaussian kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","float","float","int","DataType"]}
I0603 16:35:30.364408 76297 api.cc:29578] gaussian API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:30.364421 76297 api.cc:29585] gaussian kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","float","float","int","DataType"]}
I0603 16:35:30.365332 76297 api.cc:29578] gaussian API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:30.365345 76297 api.cc:29585] gaussian kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","float","float","int","DataType"]}
I0603 16:35:30.366227 76297 api.cc:29578] gaussian API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:30.366241 76297 api.cc:29585] gaussian kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","float","float","int","DataType"]}
I0603 16:35:30.369400 76297 api.cc:29578] gaussian API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:30.369414 76297 api.cc:29585] gaussian kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","float","float","int","DataType"]}
I0603 16:35:30.372587 76297 api.cc:29578] gaussian API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:30.372602 76297 api.cc:29585] gaussian kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","float","float","int","DataType"]}
I0603 16:35:30.373481 76297 api.cc:29578] gaussian API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:30.373495 76297 api.cc:29585] gaussian kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","float","float","int","DataType"]}
I0603 16:35:30.374389 76297 api.cc:29578] gaussian API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:30.374403 76297 api.cc:29585] gaussian kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","float","float","int","DataType"]}
I0603 16:35:30.375265 76297 api.cc:29578] gaussian API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:30.375278 76297 api.cc:29585] gaussian kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","float","float","int","DataType"]}
I0603 16:35:30.376194 76297 api.cc:29578] gaussian API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:30.376207 76297 api.cc:29585] gaussian kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","float","float","int","DataType"]}
I0603 16:35:30.379317 76297 api.cc:29578] gaussian API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:30.379331 76297 api.cc:29585] gaussian kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","float","float","int","DataType"]}
I0603 16:35:30.382464 76297 api.cc:29578] gaussian API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:30.382477 76297 api.cc:29585] gaussian kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","float","float","int","DataType"]}
I0603 16:35:30.383354 76297 api.cc:29578] gaussian API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:30.383368 76297 api.cc:29585] gaussian kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","float","float","int","DataType"]}
I0603 16:35:30.384230 76297 api.cc:29578] gaussian API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:30.384243 76297 api.cc:29585] gaussian kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","float","float","int","DataType"]}
I0603 16:35:30.385120 76297 api.cc:29578] gaussian API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:30.385133 76297 api.cc:29585] gaussian kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","float","float","int","DataType"]}
I0603 16:35:30.386018 76297 api.cc:29578] gaussian API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:30.386030 76297 api.cc:29585] gaussian kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","float","float","int","DataType"]}
I0603 16:35:30.389153 76297 api.cc:29578] gaussian API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:30.389168 76297 api.cc:29585] gaussian kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","float","float","int","DataType"]}
I0603 16:35:30.392308 76297 api.cc:29578] gaussian API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:30.392323 76297 api.cc:29585] gaussian kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","float","float","int","DataType"]}
I0603 16:35:30.393198 76297 api.cc:29578] gaussian API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:30.393213 76297 api.cc:29585] gaussian kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","float","float","int","DataType"]}
I0603 16:35:30.394078 76297 api.cc:29578] gaussian API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:30.394091 76297 api.cc:29585] gaussian kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","float","float","int","DataType"]}
I0603 16:35:30.394954 76297 api.cc:29578] gaussian API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:30.394966 76297 api.cc:29585] gaussian kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","float","float","int","DataType"]}
I0603 16:35:30.395857 76297 api.cc:29578] gaussian API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:30.395870 76297 api.cc:29585] gaussian kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","float","float","int","DataType"]}
I0603 16:35:30.399024 76297 api.cc:29578] gaussian API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:30.399039 76297 api.cc:29585] gaussian kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","float","float","int","DataType"]}
I0603 16:35:30.402230 76297 api.cc:29578] gaussian API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:30.402243 76297 api.cc:29585] gaussian kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","float","float","int","DataType"]}
I0603 16:35:30.403142 76297 api.cc:29578] gaussian API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:30.403155 76297 api.cc:29585] gaussian kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","float","float","int","DataType"]}
I0603 16:35:30.404057 76297 api.cc:29578] gaussian API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:30.404070 76297 api.cc:29585] gaussian kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","float","float","int","DataType"]}
I0603 16:35:30.404946 76297 api.cc:29578] gaussian API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:30.404959 76297 api.cc:29585] gaussian kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","float","float","int","DataType"]}
I0603 16:35:30.405865 76297 api.cc:29578] gaussian API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:30.405879 76297 api.cc:29585] gaussian kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","float","float","int","DataType"]}
I0603 16:35:30.408987 76297 api.cc:29578] gaussian API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:30.409001 76297 api.cc:29585] gaussian kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","float","float","int","DataType"]}
I0603 16:35:30.412088 76297 api.cc:29578] gaussian API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:30.412102 76297 api.cc:29585] gaussian kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","float","float","int","DataType"]}
I0603 16:35:30.413415 76297 api.cc:34891] uniform API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:30.413434 76297 api.cc:34898] uniform kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","DataType","Scalar","Scalar","int"]}
I0603 16:35:30.423734 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:30.423751 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:30.424083 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:30.424096 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:30.424201 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:30.424208 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:30.424422 76297 api.cc:34891] uniform API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:30.424432 76297 api.cc:34898] uniform kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","DataType","Scalar","Scalar","int"]}
I0603 16:35:30.800329 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:30.800369 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:30.800680 76297 api.cc:34891] uniform API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:30.800691 76297 api.cc:34898] uniform kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","DataType","Scalar","Scalar","int"]}
I0603 16:35:30.800827 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:30.800837 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:30.801292 76297 api.cc:29578] gaussian API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:30.801303 76297 api.cc:29585] gaussian kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","float","float","int","DataType"]}
I0603 16:35:30.802335 76297 api.cc:29578] gaussian API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:30.802351 76297 api.cc:29585] gaussian kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","float","float","int","DataType"]}
I0603 16:35:31.373127 76297 api.cc:28997] full_like API kernel key: [XPU, NCHW, int64]
I0603 16:35:31.373162 76297 api.cc:29004] full_like kernel: {"input":["Undefined, NCHW, int64"],"output":["XPU, NCHW, int64"],"attribute":["Scalar","DataType"]}
I0603 16:35:31.373260 76297 api.cc:26615] cumsum API kernel key: [XPU, NCHW, int64]
I0603 16:35:31.373267 76297 api.cc:26622] cumsum kernel: {"input":["XPU, NCHW, int64"],"output":["XPU, NCHW, int64"],"attribute":["Scalar","bool","bool","bool"]}
I0603 16:35:31.373425 76297 api.cc:33948] subtract API kernel key: [XPU, NCHW, int64]
I0603 16:35:31.373433 76297 api.cc:33955] subtract kernel: {"input":["XPU, NCHW, int64","XPU, NCHW, int64"],"output":["XPU, NCHW, int64"],"attribute":[]}
I0603 16:35:31.373627 76297 api.cc:27476] embedding API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.373636 76297 api.cc:27483] embedding kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["int64_t"]}
I0603 16:35:31.374864 76297 api.cc:27476] embedding API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.374871 76297 api.cc:27483] embedding kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["int64_t"]}
I0603 16:35:31.375945 76297 api.cc:27476] embedding API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.375952 76297 api.cc:27483] embedding kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["int64_t"]}
I0603 16:35:31.377689 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.377699 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.380815 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.380822 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.381419 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.381428 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:31.381589 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.381597 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:31.385571 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.385584 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.386425 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.386432 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.387473 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.387481 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:31.387486 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:31.387594 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.387602 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:31.387717 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.387725 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.387768 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.387773 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.387815 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.387820 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.387850 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.387868 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.388136 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.388142 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:31.388145 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:31.388330 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.388335 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:31.388437 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.388442 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:31.388444 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:31.388630 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.388635 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:31.388778 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.388784 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:31.389180 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.389186 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.389317 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.389322 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.389508 76297 api.cc:33484] softmax API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.389514 76297 api.cc:33491] softmax kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["int"]}
I0603 16:35:31.389598 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.389604 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:31.390446 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.390451 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.390789 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.390794 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:31.390851 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.390856 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:31.390859 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:31.391487 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.391494 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.391533 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.391538 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.391592 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.391598 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:31.392135 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.392140 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.392298 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.392304 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:31.393324 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.393329 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.394068 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.394074 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.394184 76297 api.cc:9228] gelu API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.394191 76297 api.cc:9235] gelu kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool"]}
I0603 16:35:31.394739 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.394745 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.396585 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.396592 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.396657 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.396663 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:31.397773 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.397778 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.397958 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.397964 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:31.398463 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.398469 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.398511 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.398516 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.398945 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.398952 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:31.398955 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:31.399025 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.399030 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:31.399123 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.399128 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.399168 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.399171 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.399210 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.399215 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.399246 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.399251 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.399296 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.399302 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:31.399305 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:31.399384 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.399389 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:31.399538 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.399542 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:31.399545 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:31.399609 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.399614 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:31.399761 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.399766 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:31.399859 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.399864 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.399946 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.399952 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.400043 76297 api.cc:33484] softmax API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.400048 76297 api.cc:33491] softmax kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["int"]}
I0603 16:35:31.400125 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.400130 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:31.401937 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.401942 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.401964 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.401968 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:31.401993 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.402024 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:31.402026 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:31.402045 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.402048 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.402082 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.402086 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.402119 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.402125 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:31.402874 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.402879 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.402915 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.402920 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:31.402957 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.402961 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.402993 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.402998 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.403021 76297 api.cc:9228] gelu API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.403028 76297 api.cc:9235] gelu kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool"]}
I0603 16:35:31.403096 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.403101 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.403132 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.403136 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.403162 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.403167 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:31.406942 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.406948 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.406982 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.407009 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:31.407071 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.407076 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.407110 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.407114 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.407145 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.407150 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:31.407152 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:31.407161 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.407164 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:31.407189 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.407196 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.407227 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.407243 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.407269 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.407274 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.407302 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.407306 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.407330 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.407334 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:31.407337 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:31.407344 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.407347 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:31.407367 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.407370 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:31.407373 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:31.407379 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.407382 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:31.407402 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.407405 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:31.407423 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.407426 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.407452 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.407456 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.407477 76297 api.cc:33484] softmax API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.407482 76297 api.cc:33491] softmax kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["int"]}
I0603 16:35:31.407509 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.407513 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:31.411023 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.411028 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.411048 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.411051 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:31.411074 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.411079 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:31.411082 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:31.411098 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.411101 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.411135 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.411139 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.411175 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.411180 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:31.412214 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.412218 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.412252 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.412271 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:31.412307 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.412312 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.412343 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.412348 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.412367 76297 api.cc:9228] gelu API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.412372 76297 api.cc:9235] gelu kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool"]}
I0603 16:35:31.412441 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.412444 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.412475 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.412492 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.412518 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.412524 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:31.416239 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.416244 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.416278 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.416299 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:31.416359 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.416365 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.416399 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.416419 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.416447 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.416452 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:31.416455 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:31.416464 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.416467 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:31.416492 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.416522 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.416553 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.416558 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.416584 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.416589 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.416617 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.416622 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.416646 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.416649 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:31.416652 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:31.416661 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.416662 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:31.416682 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.416688 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:31.416692 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:31.416698 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.416702 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:31.416720 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.416723 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:31.416740 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.416745 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.416769 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.416774 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.416798 76297 api.cc:33484] softmax API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.416803 76297 api.cc:33491] softmax kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["int"]}
I0603 16:35:31.416841 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.416843 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:31.420274 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.420279 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.420298 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.420301 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:31.420323 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.420326 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:31.420329 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:31.420346 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.420348 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.420382 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.420409 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.420442 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.420464 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:31.421456 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.421461 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.421497 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.421502 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:31.421540 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.421545 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.421576 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.421581 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.421602 76297 api.cc:9228] gelu API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.421607 76297 api.cc:9235] gelu kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool"]}
I0603 16:35:31.421674 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.421679 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.421710 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.421715 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.421741 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.421746 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:31.425513 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.425518 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.425550 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.425555 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:31.425619 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.425657 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.425691 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.425696 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.425724 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.425729 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:31.425731 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:31.425741 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.425745 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:31.425769 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.425774 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.425817 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.425839 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.425865 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.425869 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.425899 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.425904 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.425927 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.425931 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:31.425935 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:31.425942 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.425945 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:31.425964 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.425967 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:31.425971 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:31.425976 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.425979 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:31.425998 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.426002 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:31.426019 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.426024 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.426048 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.426054 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.426079 76297 api.cc:33484] softmax API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.426083 76297 api.cc:33491] softmax kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["int"]}
I0603 16:35:31.426102 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.426107 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:31.429553 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.429558 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.429579 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.429584 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:31.429607 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.429612 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:31.429615 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:31.429632 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.429636 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.429669 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.429674 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.429708 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.429713 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:31.430737 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.430742 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.430776 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.430804 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:31.430850 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.430855 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.430887 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.430891 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.430913 76297 api.cc:9228] gelu API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.430918 76297 api.cc:9235] gelu kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool"]}
I0603 16:35:31.430989 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.430992 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.431023 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.431027 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.431056 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.431061 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:31.434767 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.434772 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.434815 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.434835 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:31.434895 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.434900 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.434934 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.434938 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.434968 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.434973 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:31.434976 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:31.434986 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.434989 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:31.435015 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.435020 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.435051 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.435067 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.435094 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.435098 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.435128 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.435133 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.435156 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.435160 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:31.435163 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:31.435171 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.435174 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:31.435194 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.435195 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:31.435199 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:31.435205 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.435207 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:31.435226 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.435230 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:31.435246 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.435250 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.435276 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.435279 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.435300 76297 api.cc:33484] softmax API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.435305 76297 api.cc:33491] softmax kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["int"]}
I0603 16:35:31.435330 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.435335 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:31.438794 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.438799 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.438833 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.438864 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:31.438887 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.438890 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:31.438894 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:31.438910 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.438912 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.438944 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.438949 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.438983 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.438992 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:31.439980 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.439987 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.440021 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.440027 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:31.440062 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.440068 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.440100 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.440104 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.440124 76297 api.cc:9228] gelu API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.440129 76297 api.cc:9235] gelu kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool"]}
I0603 16:35:31.440198 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.440203 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.440234 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.440238 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.440265 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.440271 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:31.444067 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.444072 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.444106 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.444113 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:31.444171 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.444177 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.444212 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.444217 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.444243 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.444248 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:31.444252 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:31.444262 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.444263 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:31.444290 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.444295 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.444325 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.444330 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.444356 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.444360 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.444391 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.444394 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.444417 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.444422 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:31.444425 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:31.444433 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.444437 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:31.444455 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.444458 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:31.444461 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:31.444468 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.444470 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:31.444489 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.444491 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:31.444509 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.444514 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.444537 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.444542 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.444563 76297 api.cc:33484] softmax API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.444567 76297 api.cc:33491] softmax kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["int"]}
I0603 16:35:31.444587 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.444592 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:31.448107 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.448112 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.448132 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.448168 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:31.448190 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.448195 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:31.448199 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:31.448215 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.448217 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.448248 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.448253 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.448287 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.448292 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:31.449297 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.449302 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.449335 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.449342 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:31.449378 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.449381 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.449414 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.449419 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.449440 76297 api.cc:9228] gelu API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.449445 76297 api.cc:9235] gelu kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool"]}
I0603 16:35:31.449513 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.449518 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.449548 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.449553 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.449579 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.449584 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:31.453357 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.453363 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.453397 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.453433 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:31.453488 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.453522 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.453558 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.453562 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.453589 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.453624 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:31.453627 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:31.453636 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.453639 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:31.453665 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.453670 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.453701 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.453723 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.453749 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.453752 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.453781 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.453784 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.453824 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.453830 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:31.453835 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:31.453843 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.453845 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:31.453866 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.453868 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:31.453871 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:31.453878 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.453881 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:31.453899 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.453902 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:31.453927 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.453929 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.453954 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.453959 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.453982 76297 api.cc:33484] softmax API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.453987 76297 api.cc:33491] softmax kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["int"]}
I0603 16:35:31.454007 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.454011 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:31.457402 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.457407 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.457428 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.457461 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:31.457484 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.457512 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:31.457515 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:31.457531 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.457535 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.457566 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.457571 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.457604 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.457609 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:31.458587 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.458591 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.458624 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.458631 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:31.458667 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.458671 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.458705 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.458710 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.458731 76297 api.cc:9228] gelu API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.458736 76297 api.cc:9235] gelu kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool"]}
I0603 16:35:31.458803 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.458828 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.458860 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.458865 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.458892 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.458897 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:31.462628 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.462633 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.462666 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.462671 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:31.462728 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.462733 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.462764 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.462769 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.462796 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.462801 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:31.462821 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:31.462831 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.462834 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:31.462860 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.462865 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.462895 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.462900 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.462926 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.462931 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.462960 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.462963 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.462987 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.462992 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:31.462996 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:31.463002 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.463004 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:31.463022 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.463027 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:31.463030 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:31.463037 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.463040 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:31.463059 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.463061 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:31.463078 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.463083 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.463107 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.463111 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.463132 76297 api.cc:33484] softmax API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.463137 76297 api.cc:33491] softmax kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["int"]}
I0603 16:35:31.463158 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.463163 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:31.466667 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.466672 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.466691 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.466694 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:31.466715 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.466718 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:31.466722 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:31.466737 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.466739 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.466770 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.466773 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.466814 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.466836 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:31.467849 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.467854 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.467886 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.467908 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:31.467943 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.467962 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.467994 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.467999 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.468020 76297 api.cc:9228] gelu API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.468025 76297 api.cc:9235] gelu kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool"]}
I0603 16:35:31.468092 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.468096 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.468125 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.468130 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.468156 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.468161 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:31.471874 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.471880 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.471913 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.471918 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:31.471975 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.472016 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.472051 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.472054 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.472081 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.472085 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:31.472088 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:31.472097 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.472100 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:31.472123 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.472126 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.472155 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.472158 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.472182 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.472187 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.472215 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.472231 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.472252 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.472257 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:31.472260 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:31.472268 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.472270 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:31.472290 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.472292 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:31.472295 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:31.472301 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.472303 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:31.472322 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.472324 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:31.472342 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.472344 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.472368 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.472373 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.472393 76297 api.cc:33484] softmax API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.472397 76297 api.cc:33491] softmax kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["int"]}
I0603 16:35:31.472419 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.472422 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:31.475900 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.475906 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.475925 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.475930 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:31.475951 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.475956 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:31.475960 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:31.475975 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.475978 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.476009 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.476014 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.476047 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.476051 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:31.477082 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.477087 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.477118 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.477137 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:31.477173 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.477197 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.477229 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.477234 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.477255 76297 api.cc:9228] gelu API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.477260 76297 api.cc:9235] gelu kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool"]}
I0603 16:35:31.477327 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.477332 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.477361 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.477377 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.477403 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.477408 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:31.481109 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.481114 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.481146 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.481170 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:31.481226 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.481231 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.481263 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.481268 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.481294 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.481299 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:31.481302 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:31.481312 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.481315 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:31.481339 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.481343 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.481374 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.481379 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.481405 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.481408 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.481437 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.481441 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.481463 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.481468 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:31.481472 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:31.481479 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.481482 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:31.481499 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.481506 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:31.481509 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:31.481515 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.481518 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:31.481536 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.481539 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:31.481555 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.481561 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.481585 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.481590 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.481611 76297 api.cc:33484] softmax API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.481616 76297 api.cc:33491] softmax kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["int"]}
I0603 16:35:31.481635 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.481640 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:31.485153 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.485158 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.485179 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.485184 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:31.485205 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.485229 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:31.485232 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:31.485249 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.485252 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.485285 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.485291 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.485321 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.485327 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:31.486340 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.486346 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.486380 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.486385 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:31.486423 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.486428 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.486459 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.486464 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.486485 76297 api.cc:9228] gelu API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.486490 76297 api.cc:9235] gelu kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool"]}
I0603 16:35:31.486557 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.486562 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.486591 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.486595 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.486622 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.486627 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:31.490386 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.490391 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.490423 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.490451 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:31.490509 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.490514 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.490547 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.490552 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.490579 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.490584 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:31.490587 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:31.490597 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.490600 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:31.490625 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.490629 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.490660 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.490679 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.490705 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.490710 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.490739 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.490743 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.490765 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.490770 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:31.490773 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:31.490780 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.490783 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:31.490801 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.490803 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:31.490820 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:31.490826 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.490829 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:31.490847 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.490850 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:31.490867 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.490873 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.490898 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.490903 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.490923 76297 api.cc:33484] softmax API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.490928 76297 api.cc:33491] softmax kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["int"]}
I0603 16:35:31.490952 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.490957 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:31.494436 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.494441 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.494462 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.494465 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:31.494488 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.494491 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:31.494494 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:31.494510 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.494513 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.494545 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.494550 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.494583 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.494587 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:31.495621 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.495626 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.495659 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.495666 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:31.495702 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.495704 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.495736 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.495738 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.495761 76297 api.cc:9228] gelu API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.495765 76297 api.cc:9235] gelu kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool"]}
I0603 16:35:31.495842 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.495846 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.495877 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.495899 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.495926 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.495931 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:31.499660 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.499665 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.499698 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.499704 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:31.499826 76297 api.cc:33407] slice API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.499833 76297 api.cc:33414] slice kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int64_t>","IntArray","IntArray","vector<int64_t>","vector<int64_t>"]}
I0603 16:35:31.499902 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.499908 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.500016 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.500023 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.500088 76297 api.cc:22807] tanh API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.500095 76297 api.cc:22814] tanh kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":[]}
I0603 16:35:31.500169 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.500174 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:31.500180 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:31.500201 76297 api.cc:29470] gather API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.500206 76297 api.cc:29477] gather kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar"]}
I0603 16:35:31.500257 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.500262 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.500905 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.500910 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.500937 76297 api.cc:9228] gelu API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.500942 76297 api.cc:9235] gelu kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool"]}
I0603 16:35:31.500975 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.500980 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:31.501029 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.501034 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:31.501067 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.501072 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.501421 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.501427 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.501463 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.501468 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.501560 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.501565 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.501731 76297 api.cc:28638] full API kernel key: [XPU, Undefined(AnyLayout), int64]
I0603 16:35:31.501739 76297 api.cc:28645] full kernel: {"input":[],"output":["XPU, NCHW, int64"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.501766 76297 api.cc:31621] not_equal API kernel key: [XPU, NCHW, int64]
I0603 16:35:31.501773 76297 api.cc:31628] not_equal kernel: {"input":["XPU, NCHW, int64","XPU, NCHW, int64"],"output":["XPU, NCHW, bool"],"attribute":[]}
I0603 16:35:31.501857 76297 api.cc:26250] cast API kernel key: [XPU, NCHW, bool]
I0603 16:35:31.501863 76297 api.cc:26257] cast kernel: {"input":["XPU, NCHW, bool"],"output":["XPU, NCHW, Undefined"],"attribute":["DataType"]}
I0603 16:35:31.501904 76297 api.cc:31270] multiply API kernel key: [XPU, NCHW, int64]
I0603 16:35:31.501910 76297 api.cc:31277] multiply kernel: {"input":["XPU, NCHW, int64","XPU, NCHW, int64"],"output":["XPU, NCHW, int64"],"attribute":[]}
I0603 16:35:31.501993 76297 api.cc:5746] cross_entropy_with_softmax API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.501999 76297 api.cc:5753] cross_entropy_with_softmax kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["bool","bool","bool","int","int"]}
I0603 16:35:31.502151 76297 api.cc:27087] divide API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.502157 76297 api.cc:27094] divide kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.502209 76297 api.cc:28638] full API kernel key: [XPU, Undefined(AnyLayout), int64]
I0603 16:35:31.502214 76297 api.cc:28645] full kernel: {"input":[],"output":["XPU, NCHW, int64"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.502230 76297 api.cc:31621] not_equal API kernel key: [XPU, NCHW, int64]
I0603 16:35:31.502235 76297 api.cc:31628] not_equal kernel: {"input":["XPU, NCHW, int64","XPU, NCHW, int64"],"output":["XPU, NCHW, bool"],"attribute":[]}
I0603 16:35:31.502257 76297 api.cc:26250] cast API kernel key: [XPU, NCHW, bool]
I0603 16:35:31.502262 76297 api.cc:26257] cast kernel: {"input":["XPU, NCHW, bool"],"output":["XPU, NCHW, Undefined"],"attribute":["DataType"]}
I0603 16:35:31.502277 76297 api.cc:31270] multiply API kernel key: [XPU, NCHW, int64]
I0603 16:35:31.502282 76297 api.cc:31277] multiply kernel: {"input":["XPU, NCHW, int64","XPU, NCHW, int64"],"output":["XPU, NCHW, int64"],"attribute":[]}
I0603 16:35:31.502317 76297 api.cc:5746] cross_entropy_with_softmax API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.502322 76297 api.cc:5753] cross_entropy_with_softmax kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["bool","bool","bool","int","int"]}
I0603 16:35:31.502388 76297 api.cc:34100] sum API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.502394 76297 api.cc:34107] sum kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, Undefined"],"attribute":["IntArray","DataType","bool"]}
I0603 16:35:31.502463 76297 api.cc:30971] mean API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.502470 76297 api.cc:30978] mean kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["IntArray","bool"]}
I0603 16:35:31.502496 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.502501 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.502627 76297 api.cc:28638] full API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:31.502635 76297 api.cc:28645] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.512439 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.512454 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:31.513166 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.513175 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:31.513854 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.513862 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:31.514551 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.514559 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:31.515265 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.515273 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:31.515971 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.515980 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:31.516664 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.516670 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:31.517383 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.517390 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:31.518090 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.518097 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:31.518798 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.518810 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:31.519484 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.519490 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:31.520203 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.520210 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:31.522084 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.522100 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.522295 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.522305 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.522368 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.522374 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.522447 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.522454 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.522507 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.522513 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.522580 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.522586 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.522636 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.522641 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.522692 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.522697 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.522747 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.522753 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.522820 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.522827 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.522876 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.522882 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.522934 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.522940 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.522989 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.522994 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.523057 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.523062 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.523113 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.523118 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.523167 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.523173 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.523224 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.523231 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.523290 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.523295 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.523346 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.523352 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.523402 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.523408 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.523459 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.523464 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.523528 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.523535 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.523590 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.523595 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.523646 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.523653 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.523702 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.523707 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.523769 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.523775 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.523835 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.523841 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.523896 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.523901 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.523957 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.523962 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.524024 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.524029 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.524080 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.524085 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.524135 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.524140 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.524189 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.524195 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.524255 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.524260 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.524309 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.524314 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.524363 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.524369 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.524415 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.524420 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.524479 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.524485 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.524533 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.524538 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.524588 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.524593 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.524642 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.524647 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.524705 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.524711 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.524758 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.524765 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.524824 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.524830 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.524880 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.524886 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.524945 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.524951 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.525000 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.525007 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.525055 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.525061 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.525107 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.525113 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.525173 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.525179 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.525228 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.525233 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.525285 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.525291 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.525338 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.525344 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.525406 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.525411 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.525463 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.525470 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.525521 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.525525 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.525574 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.525579 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.525640 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.525645 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.525693 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.525699 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.525748 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.525753 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.525800 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.525810 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.525872 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.525878 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.525928 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.525933 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.525985 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.525990 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.526041 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.526046 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.526105 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.526110 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.526160 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.526165 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.526213 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.526219 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.526265 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.526271 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.526331 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.526337 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.526384 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.526391 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.526439 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.526444 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.526494 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.526499 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.526556 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.526562 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.526609 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.526614 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.526661 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.526666 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.526715 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.526719 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.526788 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.526793 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.526847 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.526852 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.526903 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.526908 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.526957 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.526961 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.527022 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.527029 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.527076 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.527082 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.527130 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.527135 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.527182 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.527189 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.527249 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.527254 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.527304 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.527310 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.527362 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.527369 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.527419 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.527424 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.527484 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.527490 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.527539 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.527544 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.527593 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.527598 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.527648 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.527653 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.527714 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.527719 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.527766 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.527772 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.527827 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.527832 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.527884 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.527889 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.527948 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.527954 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.528002 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.528007 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.528060 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.528065 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.528115 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.528120 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.528178 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.528184 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.528234 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.528239 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.528288 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.528293 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.528345 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.528350 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.528412 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.528417 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.528466 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.528471 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.528522 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.528527 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.528581 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.528586 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.528650 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.528656 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.528705 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.528710 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.528760 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.528765 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.528859 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.528867 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.528939 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.528944 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.528993 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.528999 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.529048 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.529054 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.529101 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.529107 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.529166 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.529172 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.529223 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.529228 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.529281 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.529286 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.529335 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.529341 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.529399 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.529404 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.529453 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.529459 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.529508 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.529515 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.529565 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.529570 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.529629 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.529634 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.529685 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.529690 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.529739 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.529744 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.529793 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.529798 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.529866 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.529872 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.529925 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.529932 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.529980 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.529985 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.530033 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.530040 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.530099 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.530105 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.530153 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.530159 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.530206 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.530212 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.530261 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.530267 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.530326 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.530331 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.530380 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.530385 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.530432 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.530438 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.530486 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.530491 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.530550 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.530556 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.530603 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.530608 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.530658 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.530663 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.530711 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.530716 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.530776 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.530781 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.530839 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.530844 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.530894 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.530900 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.530951 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.530956 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.531018 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.531023 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.531071 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.531077 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.531126 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.531131 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.531178 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.531184 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.531244 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.531250 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.531296 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.531302 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.531350 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.531355 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.531404 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.531409 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.531466 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.531471 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.531518 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.531523 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.531572 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.531579 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.531626 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.531632 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.531690 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.531697 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.531745 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.531750 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.531801 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.531811 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.531864 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.531869 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.531931 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.531936 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.531986 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.531991 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.532042 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.532047 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.532095 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.532101 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.532162 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.532168 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.532220 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.532227 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.532280 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.532286 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.532335 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.532341 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.532402 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.532408 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.532459 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.532464 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.532511 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.532516 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.532563 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.532569 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.532627 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.532634 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.532682 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.532687 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.532735 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.532740 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.532791 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.532796 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.532863 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.532871 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.532918 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.532924 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.532974 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.532979 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.533027 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.533032 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.533090 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.533097 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.533143 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.533149 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.533196 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.533202 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.533252 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.533257 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.533318 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.533324 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.533371 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.533377 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.533425 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.533430 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.533478 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.533483 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.533542 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.533547 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.533594 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.533599 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.533649 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.533654 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.533701 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.533706 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.533766 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.533771 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.533828 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.533834 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.533887 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.533893 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.533943 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.533948 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.534009 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.534015 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.534065 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.534070 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.534121 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.534126 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.534174 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.534179 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.534238 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.534245 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.534292 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.534298 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.534348 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.534353 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.534400 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.534406 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.534466 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.534471 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.534520 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.534525 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.534574 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.534579 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.534627 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.534632 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.534693 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.534698 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.534749 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.534755 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.534803 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.534813 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.534862 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.534868 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.534930 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.534936 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.534986 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.534991 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.535040 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.535046 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.535094 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.535099 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.535158 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.535163 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.535212 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.535218 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.535266 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.535271 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.535319 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.535324 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.535383 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.535388 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.535437 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.535442 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.535491 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.535497 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.535544 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.535550 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.535609 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.535614 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.535662 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.535668 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.535717 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.535722 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.535774 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.535779 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.535845 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.535851 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.535899 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.535904 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.535953 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.535959 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.536007 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.536013 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.536077 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.536082 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.536131 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.536137 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.536185 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.536191 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.536242 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.536248 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.536310 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.536316 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.536365 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.536370 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.536418 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.536423 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.536471 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.536476 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.536535 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.536540 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.536589 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.536595 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.536644 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.536649 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.536696 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.536701 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.536760 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.536765 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.536823 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.536828 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.536880 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.536885 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.536935 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.536940 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.537000 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.537006 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.537055 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.537060 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.537108 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.537114 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.537164 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.537169 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.537227 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.537233 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.537283 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.537288 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.537339 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.537344 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.537395 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.537400 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.537460 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.537467 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.537515 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.537521 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.537571 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.537576 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.537624 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.537629 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.537694 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.537699 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.537747 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.537752 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.537799 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.537809 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.537863 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.537869 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.537930 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.537935 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.537987 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.537992 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.538041 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.538048 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.538094 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.538100 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.538159 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.538165 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.538214 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.538219 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.538266 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.538271 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.538323 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.538328 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.538390 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.538396 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.538444 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.538450 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.538498 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.538504 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.538552 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.538558 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.538617 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.538622 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.538668 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.538673 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.538720 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.538726 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.538775 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.538781 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.538864 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.538872 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.538923 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.538929 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.538980 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.538985 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.539036 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.539041 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.539103 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.539108 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.539156 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.539161 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.539209 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.539214 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.539261 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.539268 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.539327 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.539333 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.539381 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.539387 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.539435 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.539440 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.539490 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.539495 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.539554 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.539559 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.539609 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.539615 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.539664 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.539669 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.539717 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.539722 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.539780 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.539786 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.539839 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.539844 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.539894 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.539898 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.539945 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.539950 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.540011 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.540017 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.540066 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.540072 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.540120 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.540125 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.540172 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.540177 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.540241 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.540246 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.540298 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.540303 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.540354 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.540359 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.540409 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.540416 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.540474 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.540480 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.540529 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.540534 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.540583 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.540588 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.540638 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.540643 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.540705 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.540710 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.540761 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.540766 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.540820 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.540827 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.540875 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.540881 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.540941 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.540947 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.540997 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.541002 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.541051 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.541057 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.541107 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.541112 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.541170 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.541177 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.541224 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.541229 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.541276 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.541281 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.541333 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.541338 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.541397 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.541404 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.541452 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.541458 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.541507 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.541512 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.541559 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.541564 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.541627 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.541633 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.541680 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.541687 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.541734 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.541739 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.541787 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.541793 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.541857 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.541862 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.541913 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.541918 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.541968 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.541975 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.542023 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.542028 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.542088 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.542093 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.542143 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.542148 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.542200 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.542205 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.542256 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.542261 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.542323 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.542330 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.542376 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.542382 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.542429 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.542434 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.542482 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.542488 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.542549 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.542555 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.542606 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.542611 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.542661 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.542666 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.542722 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.542727 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.542788 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.542793 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.542846 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.542852 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.542906 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.542912 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.542963 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.542968 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.543028 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.543035 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.543082 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.543087 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.543138 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.543143 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.543195 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.543200 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.543260 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.543267 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.543314 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.543319 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.543368 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.543375 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.543424 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.543429 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.543488 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.543494 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.543541 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.543547 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.543596 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.543601 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.543648 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.543654 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.543713 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.543720 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.543766 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.543772 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.543830 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.543836 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.543893 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.543900 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.543962 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.543967 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.544016 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.544021 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.544070 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.544075 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.544127 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.544133 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.544193 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.544198 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.544245 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.544250 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.544301 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.544306 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.544355 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.544360 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.544421 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.544427 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.544478 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.544483 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.544533 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.544539 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.544586 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.544592 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.544651 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.544656 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.544705 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.544710 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.544759 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.544763 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.544817 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.544822 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.544883 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.544889 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.544939 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.544943 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.544993 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.544999 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.545046 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.545053 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.545114 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.545120 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.545167 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.545173 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.545222 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.545228 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.545277 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.545282 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.545341 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.545347 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.545397 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.545403 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.545454 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.545459 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.545507 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.545512 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.545572 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.545578 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.545630 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.545635 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.545684 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.545691 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.545739 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.545745 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.545811 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.545816 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.545866 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.545869 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.545919 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.545925 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.545974 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.545979 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.546039 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.546044 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.546093 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.546098 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.546147 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.546152 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.546203 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.546208 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.546265 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.546272 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.546321 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.546326 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.546377 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.546382 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.546430 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.546435 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.546494 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.546500 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.546550 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.546556 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.546604 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.546610 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.546661 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.546667 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.546727 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.546732 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.546782 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.546787 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.546842 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.546847 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.546898 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.546903 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.546960 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.546967 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.547019 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.547024 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.547075 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.547080 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.547128 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.547133 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.547194 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.547199 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.547250 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.547256 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.547307 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.547312 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.547360 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.547366 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.547426 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.547431 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.547482 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.547487 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.547536 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.547542 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.547590 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.547595 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.547657 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.547662 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.547714 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.547719 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.547770 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.547775 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.547835 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.547842 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.547904 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.547909 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.547957 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.547963 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.548012 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.548017 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.548065 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.548071 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.548131 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.548136 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.548185 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.548192 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.548239 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.548244 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.548295 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.548300 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.548367 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.548373 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.548422 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.548427 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.548478 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.548483 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.548534 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.548539 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.548599 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.548604 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.548650 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.548656 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.548705 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.548710 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.548759 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.548765 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.548835 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.548841 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.548890 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.548897 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.548944 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.548950 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.549000 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.549005 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.549065 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.549072 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.549119 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.549124 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.549175 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.549180 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.549229 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.549234 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.549293 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.549299 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.549352 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.549357 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.549407 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.549412 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.549460 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.549466 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.549527 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.549532 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.549582 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.549587 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.549640 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.549645 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.549695 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.549700 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.549760 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.549767 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.549819 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.549824 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.549873 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.549880 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.549927 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.549932 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.549993 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.549999 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.550048 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.550053 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.550104 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.550109 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.550160 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.550165 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.550225 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.550230 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.550276 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.550282 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.550329 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.550334 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.550381 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.550386 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.550444 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.550451 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.550498 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.550503 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.550552 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.550557 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.550606 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.550611 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.550669 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.550675 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.550724 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.550729 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.550776 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.550781 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.550834 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.550839 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.550897 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.550904 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.550952 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.550958 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.551007 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.551012 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.551064 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.551069 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.551128 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.551133 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.551183 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.551189 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.551237 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.551244 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.551293 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.551299 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.551357 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.551363 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.551411 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.551417 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.551466 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.551472 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.551522 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.551528 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.551589 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.551595 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.551651 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.551656 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.551709 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.551714 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.551764 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.551769 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.551836 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.551841 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.551891 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.551896 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.551944 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.551950 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.551999 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.552006 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.552064 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.552070 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.552119 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.552124 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.552172 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.552178 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.552229 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.552235 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.552296 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.552301 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.552350 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.552356 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.552404 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.552410 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.552459 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.552464 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.552529 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.552536 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.552584 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.552589 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.552636 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.552642 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.552690 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.552695 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.552757 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.552762 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.552815 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.552821 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.552871 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.552876 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.552925 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.552930 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.552990 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.552996 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.553046 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.553051 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.553099 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.553105 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.553153 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.553158 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.553218 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.553225 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.553273 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.553278 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.553328 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.553333 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.553382 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.553388 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.553447 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.553452 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.553499 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.553505 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.553552 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.553557 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.553606 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.553611 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.553674 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.553679 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.553727 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.553732 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.553781 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.553786 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.553848 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.553854 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.553917 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.553923 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.553970 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.553975 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.554025 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.554030 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.554080 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.554085 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.554144 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.554149 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.554198 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.554203 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.554253 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.554260 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.554307 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.554312 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.554374 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.554379 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.554430 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.554435 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.554482 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.554488 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.554538 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.554543 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.554601 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.554607 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.554657 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.554663 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.554713 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.554719 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.554770 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.554775 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.554842 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.554848 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.554896 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.554903 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.554952 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.554958 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.555008 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.555014 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.555073 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.555078 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.555130 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.555135 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.555186 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.555191 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.555240 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.555245 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.555307 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.555313 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.555362 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.555367 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.555415 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.555421 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.555470 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.555476 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.555537 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.555543 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.555591 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.555598 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.555647 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.555653 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.555703 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.555708 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.555768 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.555773 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.555827 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.555832 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.555881 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.555886 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.555935 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.555941 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.555999 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.556005 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.556054 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.556059 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.556113 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.556118 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.556175 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.556180 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.556243 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.556249 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.556299 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.556305 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.556356 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.556361 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.556411 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.556416 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.556478 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.556483 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.556531 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.556536 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.556584 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.556589 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.556638 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.556643 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.556702 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.556708 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.556756 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.556762 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.556815 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.556821 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.556869 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.556875 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.556937 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.556942 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.556991 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.556996 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.557046 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.557052 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.557101 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.557106 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.557164 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.557170 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.557217 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.557222 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.557269 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.557276 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.557322 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.557328 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.557386 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.557392 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.557440 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.557446 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.557494 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.557500 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.557551 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.557557 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.557615 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.557621 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.557672 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.557677 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.557729 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.557735 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.557785 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.557790 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.557854 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.557860 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.557912 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.557917 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.557966 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.557972 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.558022 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.558027 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.558087 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.558092 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.558145 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.558151 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.558202 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.558208 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.558257 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.558262 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.558322 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.558328 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.558379 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.558385 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.558434 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.558439 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.558490 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.558494 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.558553 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.558559 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.558609 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.558614 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.558662 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.558667 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.558717 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.558722 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.558780 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.558786 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.558852 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.558858 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.558909 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.558915 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.558965 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.558970 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.559031 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.559036 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.559084 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.559090 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.559139 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.559144 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.559197 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.559202 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.559263 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.559269 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.559317 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.559322 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.559371 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.559376 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.559427 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.559432 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.559499 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.559504 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.559554 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.559561 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.559609 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.559614 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.559664 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.559669 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.559728 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.559734 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.559782 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.559787 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.559844 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.559850 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.559899 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.559906 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.559965 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.559971 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.560019 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.560025 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.560072 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.560078 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.560125 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.560132 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.560191 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.560197 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.560247 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.560252 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.560307 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.560313 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.560364 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.560369 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.560434 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.560441 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.560490 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.560496 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.560544 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.560549 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.560599 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.560606 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.560664 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.560670 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.560719 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.560724 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.560772 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.560778 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.560833 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.560839 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.560899 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.560902 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.560951 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.560957 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.561007 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.561012 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.561061 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.561067 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.561127 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.561132 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.561182 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.561187 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.561234 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.561239 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.561288 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.561295 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.561355 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.561360 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.561409 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.561415 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.561465 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.561470 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.561518 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.561523 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.561583 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.561589 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.561640 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.561645 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.561693 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.561698 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.561753 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.561758 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.561823 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.561829 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.561880 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.561887 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.561939 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.561944 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.561997 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.562002 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.562067 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.562073 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.562122 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.562127 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.562177 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.562183 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.562232 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.562237 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.562297 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.562304 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.562350 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.562356 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.562404 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.562409 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.562458 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.562463 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.562522 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.562528 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.562580 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.562587 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.562636 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.562641 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.562692 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.562697 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.562757 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.562762 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.562813 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.562819 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.562867 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.562873 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.562922 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.562927 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.562986 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.562992 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.563041 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.563046 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.563097 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.563102 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.563149 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.563155 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.563215 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.563221 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.563273 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.563278 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.563328 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.563333 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.563382 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.563387 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.563449 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.563454 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.563504 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.563509 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.563557 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.563562 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.563613 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.563618 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.563679 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.563684 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.563732 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.563737 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.563786 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.563791 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.563859 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.563867 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.563932 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.563938 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.563988 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.563994 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.564042 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.564049 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.564097 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.564102 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.564163 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.564169 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.564216 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.564221 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.564270 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.564275 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.564325 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.564332 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.564394 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.564400 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.564450 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.564455 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.564504 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.564510 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.564558 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.564563 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.564625 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.564631 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.564680 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.564685 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.564734 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.564740 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.564790 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.564796 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.564864 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.564870 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.564921 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.564927 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.564977 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.564982 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.565032 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.565038 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.565095 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.565101 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.565147 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.565153 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.565201 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.565207 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.565253 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.565259 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.565318 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.565325 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.565373 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.565379 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.565428 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.565433 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.565483 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.565490 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.565546 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.565551 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.565598 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.565604 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.565650 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.565655 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.565701 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.565707 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.565764 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.565770 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.565822 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.565829 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.565879 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.565886 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.565933 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.565939 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.565999 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.566004 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.566051 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.566057 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.566104 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.566110 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.566159 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.566164 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.566222 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.566227 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.566277 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.566282 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.566329 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.566335 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.566385 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.566390 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.566449 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.566455 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.566504 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.566509 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.566558 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.566565 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.566612 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.566617 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.566677 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.566682 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.566731 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.566736 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.566785 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.566792 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.566846 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.566852 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.566910 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.566916 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.566965 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.566970 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.567021 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.567027 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.567077 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.567083 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.567144 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.567150 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.567198 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.567204 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.567252 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.567258 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.567309 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.567315 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.567375 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.567380 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.567430 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.567435 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.567483 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.567489 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.567538 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.567543 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.567600 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.567605 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.567653 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.567658 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.567708 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.567713 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.567759 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.567764 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.567834 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.567840 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.567895 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.567901 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.567952 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.567957 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.568007 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.568012 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.568071 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.568078 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.568125 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.568131 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.568179 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.568184 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.568233 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.568238 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.568296 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.568302 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.568351 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.568356 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.568404 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.568409 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.568461 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.568466 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.568528 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.568534 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.568583 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.568588 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.568637 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.568643 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.568691 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.568696 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.568754 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.568760 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.568819 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.568825 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.568876 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.568881 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.568931 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.568936 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.568998 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.569005 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.569054 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.569061 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.569108 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.569113 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.569162 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.569167 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.569227 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.569232 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.569280 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.569285 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.569334 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.569340 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.569388 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.569393 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.569453 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.569458 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.569504 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.569510 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.569558 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.569563 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.569613 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.569619 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.569680 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.569686 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.569736 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.569741 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.569790 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.569797 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.569876 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.569883 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.569944 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.569950 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.569998 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.570003 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.570051 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.570056 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.570106 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.570111 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.570199 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.570207 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.570292 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.570297 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.570335 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.570340 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.570382 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.570387 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.570427 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.570432 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.570472 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.570475 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.570514 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.570519 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.570556 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.570560 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.570598 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.570603 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.570641 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.570645 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.570683 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.570688 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.570724 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.570729 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.570766 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.570770 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.570812 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.570816 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.570854 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.570858 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.570896 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.570901 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.570936 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.570941 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.570979 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.570983 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.571018 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.571023 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.571059 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.571064 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.571099 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.571105 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.571143 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.571148 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.571188 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.571192 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.571228 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.571233 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.571267 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.571271 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.571312 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.571316 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.571354 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.571359 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.571396 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.571401 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.571437 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.571442 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.571477 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.571482 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.571522 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.571527 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.571565 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.571570 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.571609 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.571614 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.571652 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.571657 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.571695 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.571699 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.571738 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.571741 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.571777 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.571782 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.571828 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.571832 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.571870 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.571875 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.571911 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.571916 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.571952 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.571957 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.571996 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.572000 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.572036 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.572041 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.572081 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.572086 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.572127 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.572131 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.572168 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.572172 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.572208 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.572213 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.572252 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.572256 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.572294 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.572299 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.572335 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.572338 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.572374 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.572379 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.572414 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.572418 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.572458 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.572463 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.572501 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.572505 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.572546 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.572551 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.572589 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.572594 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.572631 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.572636 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.572671 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.572675 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.572711 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.572715 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.572753 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.572758 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.572798 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.572803 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.572849 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.572855 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.572893 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.572897 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.572933 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.572938 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.572980 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.572985 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.573024 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.573029 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.573068 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.573073 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.573109 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.573114 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.573151 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.573155 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.573191 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.573195 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.573230 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.573235 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.573271 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.573276 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.573311 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.573316 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.573354 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.573359 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.573395 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.573400 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.573439 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.573443 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.573482 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.573487 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.573524 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.573529 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.573566 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.573570 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.573611 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.573616 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.573653 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.573658 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.573697 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.573701 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.573738 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.573742 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.573782 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.573786 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.573827 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.573832 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.573868 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.573872 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.573909 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.573915 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.573949 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.573954 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.573990 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.573994 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.574035 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.574040 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.574079 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.574084 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.574122 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.574126 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.574167 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.574172 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.574209 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.574214 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.574249 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.574254 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.574290 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.574294 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.574331 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.574335 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.574373 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.574376 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.574414 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.574417 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.574455 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.574458 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.574494 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.574498 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.574537 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.574540 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.574576 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.574580 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.574615 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.574620 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.574657 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.574662 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.574697 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.574702 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.574738 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.574743 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.574779 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.574784 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.574823 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.574826 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.574862 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.574867 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.574905 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.574909 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.574949 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.574952 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.574993 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.574998 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.575037 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.575042 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.575080 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.575085 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.575121 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.575126 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.575165 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.575170 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.575208 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.575213 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.575253 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.575258 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.575296 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.575300 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.575337 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.575342 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.575378 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.575382 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.575419 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.575423 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.575464 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.575469 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.575507 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.575512 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.575552 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.575556 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.575598 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.575601 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.575641 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.575645 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.575682 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.575687 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.575723 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.575727 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.575763 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.575767 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.575803 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.575826 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.575865 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.575870 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.575909 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.575914 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.575953 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.575956 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.575996 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.576000 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.576038 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.576043 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.576078 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.576083 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.576120 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.576124 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.576161 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.576166 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.576201 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.576206 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.576242 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.576247 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.576284 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.576288 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.576324 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.576328 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.576364 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.576370 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.576403 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.576408 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.576444 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.576448 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.576488 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.576493 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.576529 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.576532 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.576568 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.576573 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.576608 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.576613 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.576647 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.576653 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.576689 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.576694 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.576731 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.576735 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.576771 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.576776 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.576817 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.576821 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.576858 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.576862 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.576898 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.576903 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.576939 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.576944 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.576982 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.576987 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.577023 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.577028 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.577064 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.577067 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.577107 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.577111 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.577150 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.577154 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.577193 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.577198 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.577234 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.577239 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.577273 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.577278 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.577317 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.577322 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.577358 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.577363 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.577399 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.577404 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.577445 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.577448 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.577487 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.577492 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.577533 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.577538 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.577576 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.577581 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.577620 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.577625 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.577663 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.577667 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.577705 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.577710 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.577752 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.577756 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.577791 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.577796 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.577839 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.577844 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.577889 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.577893 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.577932 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.577937 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.577975 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.577979 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.578015 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.578020 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.578056 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.578061 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.578099 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.578104 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.578141 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.578145 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.578186 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.578191 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.578230 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.578235 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.578271 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.578276 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.578313 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.578317 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.578356 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.578361 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.578398 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.578402 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.578438 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.578441 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.578478 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.578482 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.578519 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.578523 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.578558 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.578563 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.578600 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.578605 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.578645 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.578649 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.578689 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.578693 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.578732 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.578737 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.578773 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.578778 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.578819 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.578823 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.578862 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.578867 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.578903 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.578908 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.578944 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.578948 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
[32m[2024-06-03 16:35:31,717] [    INFO][0m - global step: 1, epoch: 0, batch: 0, loss: 11.104064, avg_reader_cost: 0.02821 sec, avg_batch_cost: 0.41048 sec, avg_samples: 32.00000, ips: 77.95742 sequences/sec,  [0m
I0603 16:35:31.718017 76297 api.cc:28997] full_like API kernel key: [XPU, NCHW, int64]
I0603 16:35:31.718045 76297 api.cc:29004] full_like kernel: {"input":["Undefined, NCHW, int64"],"output":["XPU, NCHW, int64"],"attribute":["Scalar","DataType"]}
I0603 16:35:31.718303 76297 api.cc:26615] cumsum API kernel key: [XPU, NCHW, int64]
I0603 16:35:31.718310 76297 api.cc:26622] cumsum kernel: {"input":["XPU, NCHW, int64"],"output":["XPU, NCHW, int64"],"attribute":["Scalar","bool","bool","bool"]}
I0603 16:35:31.718752 76297 api.cc:33948] subtract API kernel key: [XPU, NCHW, int64]
I0603 16:35:31.718761 76297 api.cc:33955] subtract kernel: {"input":["XPU, NCHW, int64","XPU, NCHW, int64"],"output":["XPU, NCHW, int64"],"attribute":[]}
I0603 16:35:31.719450 76297 api.cc:27476] embedding API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.719458 76297 api.cc:27483] embedding kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["int64_t"]}
I0603 16:35:31.720517 76297 api.cc:27476] embedding API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.720523 76297 api.cc:27483] embedding kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["int64_t"]}
I0603 16:35:31.720880 76297 api.cc:27476] embedding API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.720887 76297 api.cc:27483] embedding kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["int64_t"]}
I0603 16:35:31.721814 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.721823 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.721977 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.721984 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.722136 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.722143 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:31.722265 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.722272 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:31.723160 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.723168 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.723233 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.723240 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.723321 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.723328 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:31.723333 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:31.723467 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.723474 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:31.723555 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.723562 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.723601 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.723608 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.723652 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.723659 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.723692 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.723697 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.723752 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.723759 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:31.723763 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:31.724335 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.724341 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:31.724395 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.724401 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:31.724406 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:31.724433 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.724438 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:31.724678 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.724685 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:31.724829 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.724834 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.724877 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.724884 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.725088 76297 api.cc:33484] softmax API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.725096 76297 api.cc:33491] softmax kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["int"]}
I0603 16:35:31.725478 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.725486 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:31.726393 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.726399 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.726426 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.726431 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:31.726462 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.726469 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:31.726473 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:31.726500 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.726505 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.726547 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.726553 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.726599 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.726605 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:31.727579 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.727586 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.727634 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.727643 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:31.727690 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.727696 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.727736 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.727741 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.727770 76297 api.cc:9228] gelu API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.727775 76297 api.cc:9235] gelu kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool"]}
I0603 16:35:31.727874 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.727881 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.727916 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.727922 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.727957 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.727962 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:31.731606 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.731612 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.731655 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.731662 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:31.731737 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.731745 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.731784 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.731789 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.731835 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.731866 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:31.731871 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:31.731885 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.731889 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:31.731920 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.731925 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.731962 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.731968 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.732000 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.732005 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.732039 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.732044 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.732072 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.732079 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:31.732082 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:31.732092 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.732095 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:31.732117 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.732123 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:31.732128 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:31.732136 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.732141 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:31.732167 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.732173 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:31.732194 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.732200 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.732232 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.732239 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.732264 76297 api.cc:33484] softmax API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.732270 76297 api.cc:33491] softmax kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["int"]}
I0603 16:35:31.732297 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.732303 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:31.735641 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.735647 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.735672 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.735706 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:31.735731 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.735761 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:31.735765 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:31.735786 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.735792 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.735842 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.735847 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.735886 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.735893 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:31.736835 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.736840 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.736882 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.736889 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:31.736933 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.736943 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.736982 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.736989 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.737015 76297 api.cc:9228] gelu API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.737021 76297 api.cc:9235] gelu kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool"]}
I0603 16:35:31.737098 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.737104 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.737138 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.737143 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.737176 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.737183 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:31.740903 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.740912 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.740962 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.740974 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:31.741055 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.741063 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.741106 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.741112 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.741148 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.741154 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:31.741159 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:31.741173 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.741178 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:31.741209 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.741216 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.741253 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.741259 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.741292 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.741297 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.741333 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.741339 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.741369 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.741374 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:31.741379 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:31.741390 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.741393 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:31.741417 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.741423 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:31.741428 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:31.741437 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.741441 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:31.741469 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.741477 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:31.741503 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.741508 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.741541 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.741547 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.741575 76297 api.cc:33484] softmax API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.741580 76297 api.cc:33491] softmax kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["int"]}
I0603 16:35:31.741607 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.741613 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:31.744958 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.744966 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.744993 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.744999 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:31.745028 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.745034 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:31.745039 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:31.745064 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.745069 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.745108 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.745114 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.745158 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.745164 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:31.746137 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.746145 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.746191 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.746197 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:31.746246 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.746258 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.746296 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.746302 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.746332 76297 api.cc:9228] gelu API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.746340 76297 api.cc:9235] gelu kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool"]}
I0603 16:35:31.746419 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.746425 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.746461 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.746467 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.746502 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.746508 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:31.750205 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.750214 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.750265 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.750276 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:31.750362 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.750370 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.750412 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.750418 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.750454 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.750460 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:31.750465 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:31.750479 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.750483 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:31.750515 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.750521 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.750559 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.750573 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.750607 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.750612 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.750646 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.750653 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.750682 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.750689 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:31.750694 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:31.750703 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.750707 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:31.750731 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.750736 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:31.750741 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:31.750751 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.750754 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:31.750780 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.750787 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:31.750834 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.750841 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.750880 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.750886 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.750914 76297 api.cc:33484] softmax API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.750921 76297 api.cc:33491] softmax kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["int"]}
I0603 16:35:31.750948 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.750954 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:31.754257 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.754266 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.754293 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.754328 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:31.754359 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.754366 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:31.754371 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:31.754400 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.754406 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.754451 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.754456 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.754501 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.754509 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:31.755442 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.755450 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.755499 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.755506 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:31.755559 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.755565 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.755609 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.755614 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.755645 76297 api.cc:9228] gelu API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.755652 76297 api.cc:9235] gelu kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool"]}
I0603 16:35:31.755733 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.755740 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.755777 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.755784 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.755843 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.755852 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:31.759500 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.759508 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.759558 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.759565 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:31.759651 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.759658 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.759701 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.759707 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.759742 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.759768 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:31.759773 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:31.759786 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.759790 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:31.759837 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.759842 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.759879 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.759886 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.759919 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.759925 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.759959 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.759965 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.759994 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.760000 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:31.760004 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:31.760015 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.760020 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:31.760042 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.760047 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:31.760052 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:31.760061 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.760064 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:31.760090 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.760097 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:31.760119 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.760124 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.760157 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.760164 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.760190 76297 api.cc:33484] softmax API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.760195 76297 api.cc:33491] softmax kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["int"]}
I0603 16:35:31.760223 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.760229 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:31.763553 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.763561 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.763586 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.763592 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:31.763620 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.763660 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:31.763664 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:31.763687 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.763692 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.763732 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.763738 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.763778 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.763785 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:31.764752 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.764760 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.764802 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.764820 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:31.764868 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.764875 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.764914 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.764920 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.764948 76297 api.cc:9228] gelu API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.764954 76297 api.cc:9235] gelu kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool"]}
I0603 16:35:31.765031 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.765036 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.765072 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.765079 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.765112 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.765120 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:31.768795 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.768801 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.768854 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.768872 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:31.768946 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.768954 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.768994 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.769001 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.769033 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.769040 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:31.769044 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:31.769057 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.769060 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:31.769090 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.769096 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.769132 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.769137 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.769169 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.769176 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.769209 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.769214 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.769243 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.769248 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:31.769253 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:31.769263 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.769265 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:31.769287 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.769294 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:31.769297 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:31.769306 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.769309 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:31.769331 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.769338 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:31.769363 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.769368 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.769400 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.769407 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.769433 76297 api.cc:33484] softmax API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.769438 76297 api.cc:33491] softmax kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["int"]}
I0603 16:35:31.769464 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.769471 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:31.772838 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.772845 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.772868 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.772871 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:31.772897 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.772903 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:31.772907 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:31.772928 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.772933 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.772974 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.772977 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.773015 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.773021 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:31.774021 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.774029 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.774070 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.774075 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:31.774120 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.774127 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.774163 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.774169 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.774196 76297 api.cc:9228] gelu API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.774202 76297 api.cc:9235] gelu kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool"]}
I0603 16:35:31.774277 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.774284 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.774317 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.774323 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.774356 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.774363 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:31.778045 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.778051 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.778091 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.778115 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:31.778185 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.778192 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.778232 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.778239 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.778271 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.778277 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:31.778282 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:31.778295 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.778298 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:31.778328 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.778345 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.778381 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.778398 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.778429 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.778434 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.778466 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.778473 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.778501 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.778506 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:31.778512 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:31.778522 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.778524 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:31.778546 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.778553 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:31.778556 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:31.778564 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.778568 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:31.778594 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.778599 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:31.778621 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.778625 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.778656 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.778662 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.778690 76297 api.cc:33484] softmax API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.778697 76297 api.cc:33491] softmax kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["int"]}
I0603 16:35:31.778723 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.778728 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:31.782079 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.782086 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.782109 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.782147 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:31.782172 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.782178 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:31.782182 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:31.782202 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.782209 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.782248 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.782253 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.782291 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.782297 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:31.783259 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.783264 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.783305 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.783311 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:31.783355 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.783371 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.783408 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.783413 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.783440 76297 api.cc:9228] gelu API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.783445 76297 api.cc:9235] gelu kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool"]}
I0603 16:35:31.783517 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.783524 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.783557 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.783562 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.783596 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.783601 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:31.787315 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.787321 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.787364 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.787384 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:31.787452 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.787458 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.787496 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.787510 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.787544 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.787549 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:31.787554 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:31.787565 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.787569 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:31.787596 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.787602 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.787636 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.787642 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.787670 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.787676 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.787707 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.787712 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.787739 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.787743 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:31.787748 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:31.787757 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.787760 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:31.787781 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.787784 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:31.787787 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:31.787796 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.787798 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:31.787837 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.787843 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:31.787864 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.787869 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.787900 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.787905 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.787931 76297 api.cc:33484] softmax API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.787936 76297 api.cc:33491] softmax kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["int"]}
I0603 16:35:31.787961 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.787966 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:31.791357 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.791363 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.791385 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.791389 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:31.791414 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.791417 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:31.791420 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:31.791440 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.791443 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.791479 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.791496 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.791532 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.791535 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:31.792546 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.792551 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.792589 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.792605 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:31.792646 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.792650 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.792685 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.792698 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.792723 76297 api.cc:9228] gelu API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.792727 76297 api.cc:9235] gelu kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool"]}
I0603 16:35:31.792798 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.792824 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.792857 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.792893 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.792923 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.792955 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:31.796595 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.796602 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.796638 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.796643 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:31.796705 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.796712 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.796751 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.796782 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.796826 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.796831 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:31.796835 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:31.796846 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.796849 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:31.796877 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.796880 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.796912 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.796926 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.796954 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.796983 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.797015 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.797019 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.797044 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.797047 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:31.797051 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:31.797060 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.797063 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:31.797083 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.797086 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:31.797089 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:31.797097 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.797101 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:31.797122 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.797124 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:31.797143 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.797173 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.797204 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.797223 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.797247 76297 api.cc:33484] softmax API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.797253 76297 api.cc:33491] softmax kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["int"]}
I0603 16:35:31.797276 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.797282 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:31.800645 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.800652 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.800673 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.800676 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:31.800700 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.800704 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:31.800707 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:31.800726 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.800729 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.800765 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.800789 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.800837 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.800843 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:31.801834 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.801841 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.801878 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.801895 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:31.801936 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.801947 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.801983 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.801996 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.802021 76297 api.cc:9228] gelu API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.802049 76297 api.cc:9235] gelu kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool"]}
I0603 16:35:31.802119 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.802124 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.802157 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.802162 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.802191 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.802196 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:31.805862 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.805869 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.805907 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.805912 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:31.805977 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.805984 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.806022 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.806027 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.806059 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.806064 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:31.806069 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:31.806080 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.806083 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:31.806111 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.806135 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.806169 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.806174 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.806203 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.806208 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.806241 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.806247 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.806272 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.806277 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:31.806280 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:31.806289 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.806293 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:31.806313 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.806319 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:31.806324 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:31.806330 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.806334 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:31.806353 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.806360 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:31.806378 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.806385 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.806414 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.806419 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.806444 76297 api.cc:33484] softmax API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.806449 76297 api.cc:33491] softmax kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["int"]}
I0603 16:35:31.806476 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.806481 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:31.809901 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.809907 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.809931 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.809934 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:31.809959 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.809963 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:31.809967 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:31.809985 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.809989 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.810024 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.810029 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.810062 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.810066 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:31.811091 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.811097 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.811136 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.811159 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:31.811199 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.811204 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.811239 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.811244 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.811269 76297 api.cc:9228] gelu API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.811275 76297 api.cc:9235] gelu kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool"]}
I0603 16:35:31.811347 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.811352 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.811384 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.811390 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.811421 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.811427 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:31.815160 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.815165 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.815203 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.815209 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:31.815274 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.815280 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.815316 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.815321 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.815353 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.815358 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:31.815363 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:31.815374 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.815377 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:31.815405 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.815410 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.815443 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.815448 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.815477 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.815482 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.815515 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.815519 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.815544 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.815550 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:31.815553 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:31.815562 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.815565 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:31.815586 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.815593 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:31.815595 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:31.815603 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.815606 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:31.815626 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.815634 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:31.815651 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.815658 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.815685 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.815691 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.815719 76297 api.cc:33484] softmax API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.815725 76297 api.cc:33491] softmax kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["int"]}
I0603 16:35:31.815749 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.815754 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:31.819209 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.819216 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.819240 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.819245 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:31.819270 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.819275 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:31.819280 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:31.819299 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.819303 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.819339 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.819342 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.819378 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.819401 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:31.820392 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.820398 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.820436 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.820463 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:31.820503 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.820509 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.820545 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.820550 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.820576 76297 api.cc:9228] gelu API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.820581 76297 api.cc:9235] gelu kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool"]}
I0603 16:35:31.820652 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.820657 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.820690 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.820695 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.820725 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.820730 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:31.824416 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.824422 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.824461 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.824467 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:31.824530 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.824537 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.824574 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.824579 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.824611 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.824631 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:31.824635 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:31.824646 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.824649 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:31.824676 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.824682 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.824714 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.824719 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.824749 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.824754 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.824785 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.824790 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.824831 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.824836 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:31.824841 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:31.824849 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.824852 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:31.824873 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.824877 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:31.824880 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:31.824888 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.824891 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:31.824911 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.824914 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:31.824934 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.824936 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.824968 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.824973 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.825001 76297 api.cc:33484] softmax API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.825004 76297 api.cc:33491] softmax kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["int"]}
I0603 16:35:31.825027 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.825030 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:31.828459 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.828465 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.828490 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.828496 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:31.828521 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.828526 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:31.828531 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:31.828550 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.828557 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.828594 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.828599 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.828637 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.828642 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:31.829651 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.829658 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.829697 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.829720 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:31.829761 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.829766 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.829803 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.829819 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.829846 76297 api.cc:9228] gelu API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.829850 76297 api.cc:9235] gelu kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool"]}
I0603 16:35:31.829922 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.829928 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.829962 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.829967 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.829999 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.830005 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:31.833700 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.833706 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.833745 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.833750 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:31.833844 76297 api.cc:33407] slice API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.833853 76297 api.cc:33414] slice kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int64_t>","IntArray","IntArray","vector<int64_t>","vector<int64_t>"]}
I0603 16:35:31.833897 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.833904 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.833943 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.833948 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.833987 76297 api.cc:22807] tanh API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.834009 76297 api.cc:22814] tanh kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":[]}
I0603 16:35:31.834055 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.834061 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:31.834065 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:31.834080 76297 api.cc:29470] gather API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.834085 76297 api.cc:29477] gather kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar"]}
I0603 16:35:31.834118 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.834123 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.834916 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.834923 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.834950 76297 api.cc:9228] gelu API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.834955 76297 api.cc:9235] gelu kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool"]}
I0603 16:35:31.834992 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.835000 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:31.835050 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.835057 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:31.835081 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.835086 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.835389 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.835395 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.835430 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.835436 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:31.835470 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.835475 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.835604 76297 api.cc:28638] full API kernel key: [XPU, Undefined(AnyLayout), int64]
I0603 16:35:31.835613 76297 api.cc:28645] full kernel: {"input":[],"output":["XPU, NCHW, int64"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.835636 76297 api.cc:31621] not_equal API kernel key: [XPU, NCHW, int64]
I0603 16:35:31.835642 76297 api.cc:31628] not_equal kernel: {"input":["XPU, NCHW, int64","XPU, NCHW, int64"],"output":["XPU, NCHW, bool"],"attribute":[]}
I0603 16:35:31.835677 76297 api.cc:26250] cast API kernel key: [XPU, NCHW, bool]
I0603 16:35:31.835683 76297 api.cc:26257] cast kernel: {"input":["XPU, NCHW, bool"],"output":["XPU, NCHW, Undefined"],"attribute":["DataType"]}
I0603 16:35:31.835707 76297 api.cc:31270] multiply API kernel key: [XPU, NCHW, int64]
I0603 16:35:31.835713 76297 api.cc:31277] multiply kernel: {"input":["XPU, NCHW, int64","XPU, NCHW, int64"],"output":["XPU, NCHW, int64"],"attribute":[]}
I0603 16:35:31.835764 76297 api.cc:5746] cross_entropy_with_softmax API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.835770 76297 api.cc:5753] cross_entropy_with_softmax kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["bool","bool","bool","int","int"]}
I0603 16:35:31.835896 76297 api.cc:27087] divide API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.835902 76297 api.cc:27094] divide kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.835933 76297 api.cc:28638] full API kernel key: [XPU, Undefined(AnyLayout), int64]
I0603 16:35:31.835938 76297 api.cc:28645] full kernel: {"input":[],"output":["XPU, NCHW, int64"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.835953 76297 api.cc:31621] not_equal API kernel key: [XPU, NCHW, int64]
I0603 16:35:31.835959 76297 api.cc:31628] not_equal kernel: {"input":["XPU, NCHW, int64","XPU, NCHW, int64"],"output":["XPU, NCHW, bool"],"attribute":[]}
I0603 16:35:31.835983 76297 api.cc:26250] cast API kernel key: [XPU, NCHW, bool]
I0603 16:35:31.835987 76297 api.cc:26257] cast kernel: {"input":["XPU, NCHW, bool"],"output":["XPU, NCHW, Undefined"],"attribute":["DataType"]}
I0603 16:35:31.836004 76297 api.cc:31270] multiply API kernel key: [XPU, NCHW, int64]
I0603 16:35:31.836009 76297 api.cc:31277] multiply kernel: {"input":["XPU, NCHW, int64","XPU, NCHW, int64"],"output":["XPU, NCHW, int64"],"attribute":[]}
I0603 16:35:31.836045 76297 api.cc:5746] cross_entropy_with_softmax API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.836050 76297 api.cc:5753] cross_entropy_with_softmax kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["bool","bool","bool","int","int"]}
I0603 16:35:31.836102 76297 api.cc:34100] sum API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.836108 76297 api.cc:34107] sum kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, Undefined"],"attribute":["IntArray","DataType","bool"]}
I0603 16:35:31.836141 76297 api.cc:30971] mean API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.836148 76297 api.cc:30978] mean kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["IntArray","bool"]}
I0603 16:35:31.836170 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.836175 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:31.836664 76297 api.cc:28638] full API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:31.836676 76297 api.cc:28645] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.840361 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.840376 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:31.841187 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.841195 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:31.841977 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.841985 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:31.842741 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.842748 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:31.843494 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.843502 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:31.844285 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.844295 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:31.845085 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.845093 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:31.845901 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.845908 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:31.846719 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.846726 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:31.847538 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.847546 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:31.848340 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.848347 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:31.849206 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.849215 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:31.850275 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.850291 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:31.850437 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.850446 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.850503 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.850509 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.850550 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.850556 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.850600 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.850605 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.850646 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.850651 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.850690 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.850695 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.850740 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.850745 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.850786 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.850791 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.850839 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.850845 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.850888 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.850893 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.850934 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.850939 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.850979 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.850984 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.851024 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.851029 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.851068 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.851073 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.851115 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.851120 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.851161 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.851166 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.851209 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.851214 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.851256 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.851261 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.851305 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.851310 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.851349 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.851354 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.851401 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.851406 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.851446 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.851451 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.851491 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.851496 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.851539 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.851544 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.851586 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.851593 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.851632 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.851637 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.851677 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.851682 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.851722 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.851727 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.851769 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.851774 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.851819 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.851824 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.851868 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.851873 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.851915 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.851920 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.851961 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.851966 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.852008 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.852015 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.852056 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.852061 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.852100 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.852105 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.852146 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.852151 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.852191 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.852196 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.852236 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.852241 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.852283 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.852288 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.852331 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.852336 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.852380 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.852384 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.852425 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.852430 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.852470 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.852475 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.852519 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.852524 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.852566 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.852571 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.852612 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.852617 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.852656 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.852661 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.852705 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.852710 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.852753 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.852758 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.852803 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.852823 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.852866 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.852871 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.852916 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.852921 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.852963 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.852968 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.853013 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.853019 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.853060 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.853065 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.853103 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.853108 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.853148 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.853153 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.853193 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.853199 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.853235 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.853240 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.853276 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.853281 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.853315 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.853320 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.853355 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.853360 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.853399 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.853402 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.853438 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.853443 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.853480 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.853485 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.853523 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.853526 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.853560 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.853565 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.853601 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.853605 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.853644 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.853649 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.853685 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.853690 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.853726 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.853730 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.853766 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.853770 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.853808 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.853816 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.853858 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.853863 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.853900 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.853905 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.853946 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.853950 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.853989 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.853994 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.854034 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.854039 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.854075 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.854080 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.854115 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.854120 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.854161 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.854166 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.854200 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.854205 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.854249 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.854254 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.854290 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.854295 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.854332 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.854336 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.854372 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.854377 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.854415 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.854420 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.854457 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.854461 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.854497 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.854502 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.854538 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.854542 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.854583 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.854588 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.854625 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.854630 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.854666 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.854671 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.854707 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.854710 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.854746 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.854751 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.854790 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.854795 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.854838 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.854843 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.854882 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.854887 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.854928 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.854933 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.854969 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.854974 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.855010 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.855015 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.855054 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.855059 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.855098 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.855101 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.855139 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.855144 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.855180 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.855185 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.855219 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.855223 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.855260 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.855265 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.855304 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.855309 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.855347 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.855351 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.855389 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.855393 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.855430 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.855434 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.855470 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.855475 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.855511 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.855516 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.855553 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.855558 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.855595 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.855600 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.855640 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.855644 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.855685 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.855690 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.855731 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.855736 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.855774 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.855779 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.855819 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.855824 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.855861 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.855866 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.855904 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.855909 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.855950 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.855955 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.855994 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.855999 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.856035 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.856040 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.856077 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.856082 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.856118 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.856123 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.856159 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.856163 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.856200 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.856204 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.856242 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.856247 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.856283 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.856287 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.856323 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.856328 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.856366 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.856370 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.856407 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.856412 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.856448 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.856453 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.856492 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.856498 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.856536 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.856540 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.856576 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.856581 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.856616 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.856621 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.856657 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.856662 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.856696 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.856700 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.856737 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.856741 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.856776 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.856781 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.856818 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.856823 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.856859 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.856864 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.856899 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.856904 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.856938 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.856943 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.856979 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.856983 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.857020 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.857025 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.857060 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.857065 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.857101 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.857106 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.857141 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.857146 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.857185 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.857190 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.857226 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.857231 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.857270 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.857275 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.857313 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.857317 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.857354 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.857358 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.857396 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.857401 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.857440 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.857445 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.857481 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.857486 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.857522 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.857527 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.857565 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.857570 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.857609 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.857612 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.857650 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.857656 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.857692 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.857697 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.857734 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.857738 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.857776 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.857781 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.857822 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.857827 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.857867 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.857872 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.857910 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.857915 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.857954 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.857959 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.857998 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.858002 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.858040 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.858045 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.858081 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.858086 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.858122 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.858127 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.858163 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.858168 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.858208 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.858212 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.858250 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.858255 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.858291 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.858295 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.858336 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.858340 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.858379 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.858383 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.858419 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.858423 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.858460 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.858464 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.858501 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.858505 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.858541 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.858546 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.858582 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.858585 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.858623 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.858628 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.858662 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.858667 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.858702 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.858706 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.858741 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.858745 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.858783 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.858788 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.858834 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.858836 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.858875 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.858879 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.858919 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.858923 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.858959 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.858963 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.858999 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.859004 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.859041 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.859045 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.859082 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.859086 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.859122 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.859126 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.859163 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.859169 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.859205 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.859210 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.859243 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.859248 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.859285 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.859289 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.859325 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.859329 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:31.859365 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:31.859370 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
[32m[2024-06-03 16:35:32,047] [    INFO][0m - global step: 2, epoch: 0, batch: 1, loss: 11.157869, avg_reader_cost: 0.00011 sec, avg_batch_cost: 0.32949 sec, avg_samples: 32.00000, ips: 97.11946 sequences/sec,  [0m
I0603 16:35:32.047837 76297 api.cc:28997] full_like API kernel key: [XPU, NCHW, int64]
I0603 16:35:32.047861 76297 api.cc:29004] full_like kernel: {"input":["Undefined, NCHW, int64"],"output":["XPU, NCHW, int64"],"attribute":["Scalar","DataType"]}
I0603 16:35:32.051666 76297 api.cc:26615] cumsum API kernel key: [XPU, NCHW, int64]
I0603 16:35:32.051672 76297 api.cc:26622] cumsum kernel: {"input":["XPU, NCHW, int64"],"output":["XPU, NCHW, int64"],"attribute":["Scalar","bool","bool","bool"]}
I0603 16:35:32.051795 76297 api.cc:33948] subtract API kernel key: [XPU, NCHW, int64]
I0603 16:35:32.051802 76297 api.cc:33955] subtract kernel: {"input":["XPU, NCHW, int64","XPU, NCHW, int64"],"output":["XPU, NCHW, int64"],"attribute":[]}
I0603 16:35:32.051975 76297 api.cc:27476] embedding API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.051981 76297 api.cc:27483] embedding kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["int64_t"]}
I0603 16:35:32.055671 76297 api.cc:27476] embedding API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.055677 76297 api.cc:27483] embedding kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["int64_t"]}
I0603 16:35:32.055706 76297 api.cc:27476] embedding API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.055739 76297 api.cc:27483] embedding kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["int64_t"]}
I0603 16:35:32.055759 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.055768 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.055796 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.055801 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.055855 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.055862 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:32.055918 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.055924 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:32.057103 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.057111 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.057165 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.057171 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.057211 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.057217 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:32.057221 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:32.057237 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.057241 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:32.057274 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.057279 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.057313 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.057318 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.057348 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.057353 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.057384 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.057389 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.057415 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.057420 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:32.057423 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:32.057431 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.057435 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:32.057453 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.057456 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:32.057459 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:32.057466 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.057469 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:32.057492 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.057497 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:32.057520 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.057524 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.057554 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.057559 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.057585 76297 api.cc:33484] softmax API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.057590 76297 api.cc:33491] softmax kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["int"]}
I0603 16:35:32.057614 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.057619 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:32.060379 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.060384 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.060406 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.060411 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:32.060437 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.060462 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:32.060465 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:32.060484 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.060490 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.060525 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.060529 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.060566 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.060571 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:32.061563 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.061568 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.061604 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.061609 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:32.061648 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.061653 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.061686 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.061690 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.061715 76297 api.cc:9228] gelu API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.061722 76297 api.cc:9235] gelu kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool"]}
I0603 16:35:32.061791 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.061796 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.061843 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.061848 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.061880 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.061885 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:32.065613 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.065618 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.065654 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.065660 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:32.065724 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.065730 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.065765 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.065768 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.065799 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.065804 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:32.065817 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:32.065829 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.065831 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:32.065860 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.065862 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.065893 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.065898 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.065925 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.065930 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.065960 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.065965 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.065991 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.065995 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:32.065999 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:32.066006 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.066009 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:32.066030 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.066032 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:32.066035 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:32.066040 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.066043 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:32.066062 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.066066 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:32.066083 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.066087 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.066114 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.066119 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.066143 76297 api.cc:33484] softmax API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.066147 76297 api.cc:33491] softmax kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["int"]}
I0603 16:35:32.066171 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.066176 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:32.069649 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.069654 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.069677 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.069682 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:32.069705 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.069739 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:32.069742 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:32.069759 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.069762 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.069797 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.069824 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.069861 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.069864 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:32.070834 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.070840 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.070874 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.070890 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:32.070930 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.070935 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.070969 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.070973 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.070997 76297 api.cc:9228] gelu API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.071002 76297 api.cc:9235] gelu kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool"]}
I0603 16:35:32.071070 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.071075 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.071106 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.071111 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.071141 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.071146 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:32.074880 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.074887 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.074923 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.074928 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:32.074992 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.074997 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.075034 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.075038 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.075069 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.075073 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:32.075078 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:32.075088 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.075090 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:32.075117 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.075121 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.075152 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.075155 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.075181 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.075186 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.075217 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.075220 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.075245 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.075249 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:32.075253 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:32.075260 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.075263 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:32.075284 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.075286 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:32.075289 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:32.075296 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.075299 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:32.075318 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.075321 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:32.075340 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.075345 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.075369 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.075374 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.075397 76297 api.cc:33484] softmax API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.075400 76297 api.cc:33491] softmax kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["int"]}
I0603 16:35:32.075421 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.075425 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:32.078910 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.078915 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.078938 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.078940 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:32.078964 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.078966 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:32.078969 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:32.078986 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.078989 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.079025 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.079048 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.079083 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.079087 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:32.080090 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.080096 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.080132 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.080150 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:32.080189 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.080204 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.080238 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.080241 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.080266 76297 api.cc:9228] gelu API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.080269 76297 api.cc:9235] gelu kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool"]}
I0603 16:35:32.080336 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.080351 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.080384 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.080405 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.080436 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.080439 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:32.084117 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.084122 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.084158 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.084179 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:32.084240 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.084245 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.084280 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.084285 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.084316 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.084321 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:32.084324 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:32.084335 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.084338 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:32.084363 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.084367 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.084398 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.084400 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.084429 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.084435 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.084465 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.084470 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.084494 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.084499 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:32.084501 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:32.084510 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.084512 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:32.084532 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.084534 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:32.084538 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:32.084545 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.084547 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:32.084568 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.084570 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:32.084589 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.084591 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.084615 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.084619 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.084642 76297 api.cc:33484] softmax API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.084646 76297 api.cc:33491] softmax kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["int"]}
I0603 16:35:32.084672 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.084677 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:32.088181 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.088186 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.088207 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.088212 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:32.088236 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.088240 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:32.088243 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:32.088260 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.088263 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.088296 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.088301 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.088336 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.088341 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:32.089365 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.089368 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.089402 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.089432 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:32.089471 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.089475 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.089507 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.089512 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.089536 76297 api.cc:9228] gelu API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.089541 76297 api.cc:9235] gelu kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool"]}
I0603 16:35:32.089607 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.089612 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.089643 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.089648 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.089676 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.089681 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:32.093394 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.093398 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.093434 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.093441 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:32.093500 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.093505 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.093540 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.093544 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.093573 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.093578 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:32.093581 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:32.093592 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.093595 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:32.093622 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.093627 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.093659 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.093663 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.093691 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.093696 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.093725 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.093730 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.093755 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.093760 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:32.093762 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:32.093770 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.093772 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:32.093793 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.093796 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:32.093799 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:32.093825 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.093828 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:32.093849 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.093854 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:32.093873 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.093876 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.093902 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.093907 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.093930 76297 api.cc:33484] softmax API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.093935 76297 api.cc:33491] softmax kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["int"]}
I0603 16:35:32.093962 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.093967 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:32.097437 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.097442 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.097465 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.097496 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:32.097519 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.097524 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:32.097527 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:32.097544 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.097548 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.097581 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.097585 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.097620 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.097625 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:32.098623 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.098627 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.098663 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.098670 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:32.098709 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.098713 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.098747 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.098750 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.098775 76297 api.cc:9228] gelu API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.098780 76297 api.cc:9235] gelu kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool"]}
I0603 16:35:32.098857 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.098862 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.098896 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.098901 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.098929 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.098934 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:32.102643 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.102648 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.102684 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.102696 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:32.102756 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.102761 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.102798 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.102802 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.102841 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.102846 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:32.102851 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:32.102862 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.102865 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:32.102891 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.102896 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.102928 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.102933 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.102960 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.102965 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.102996 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.103000 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.103026 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.103031 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:32.103034 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:32.103044 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.103045 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:32.103065 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.103067 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:32.103070 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:32.103077 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.103080 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:32.103101 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.103103 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:32.103121 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.103127 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.103152 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.103156 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.103181 76297 api.cc:33484] softmax API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.103186 76297 api.cc:33491] softmax kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["int"]}
I0603 16:35:32.103214 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.103219 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:32.106678 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.106684 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.106706 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.106711 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:32.106735 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.106739 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:32.106742 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:32.106760 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.106762 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.106797 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.106801 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.106845 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.106865 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:32.107872 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.107877 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.107911 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.107918 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:32.107956 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.107961 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.107995 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.108000 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.108024 76297 api.cc:9228] gelu API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.108029 76297 api.cc:9235] gelu kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool"]}
I0603 16:35:32.108095 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.108100 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.108134 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.108137 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.108167 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.108172 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:32.111923 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.111929 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.111964 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.111969 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:32.112030 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.112071 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.112105 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.112110 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.112139 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.112144 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:32.112149 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:32.112159 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.112161 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:32.112186 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.112191 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.112222 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.112226 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.112254 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.112258 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.112289 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.112295 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.112320 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.112323 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:32.112326 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:32.112334 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.112337 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:32.112356 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.112360 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:32.112362 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:32.112370 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.112371 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:32.112391 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.112394 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:32.112412 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.112414 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.112440 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.112443 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.112464 76297 api.cc:33484] softmax API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.112468 76297 api.cc:33491] softmax kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["int"]}
I0603 16:35:32.112494 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.112497 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:32.115971 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.115978 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.115999 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.116004 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:32.116029 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.116032 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:32.116035 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:32.116052 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.116055 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.116088 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.116093 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.116127 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.116132 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:32.117157 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.117162 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.117197 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.117202 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:32.117241 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.117245 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.117278 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.117282 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.117306 76297 api.cc:9228] gelu API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.117311 76297 api.cc:9235] gelu kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool"]}
I0603 16:35:32.117378 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.117383 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.117417 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.117422 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.117450 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.117456 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:32.121208 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.121213 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.121249 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.121271 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:32.121330 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.121335 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.121371 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.121376 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.121407 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.121420 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:32.121423 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:32.121434 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.121438 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:32.121462 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.121466 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.121497 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.121513 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.121539 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.121544 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.121574 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.121579 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.121604 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.121608 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:32.121611 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:32.121620 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.121623 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:32.121644 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.121646 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:32.121649 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:32.121656 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.121659 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:32.121680 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.121682 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:32.121701 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.121703 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.121727 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.121732 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.121755 76297 api.cc:33484] softmax API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.121760 76297 api.cc:33491] softmax kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["int"]}
I0603 16:35:32.121781 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.121786 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:32.125264 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.125270 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.125293 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.125295 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:32.125317 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.125320 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:32.125324 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:32.125339 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.125342 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.125377 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.125380 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.125414 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.125447 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:32.126448 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.126454 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.126487 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.126493 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:32.126531 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.126535 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.126567 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.126572 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.126595 76297 api.cc:9228] gelu API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.126600 76297 api.cc:9235] gelu kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool"]}
I0603 16:35:32.126667 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.126672 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.126703 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.126708 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.126737 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.126742 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:32.130488 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.130493 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.130529 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.130535 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:32.130597 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.130602 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.130640 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.130643 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.130673 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.130678 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:32.130681 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:32.130690 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.130693 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:32.130719 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.130724 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.130755 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.130779 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.130820 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.130825 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.130856 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.130861 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.130887 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.130892 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:32.130894 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:32.130903 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.130905 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:32.130926 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.130932 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:32.130935 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:32.130944 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.130946 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:32.130966 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.130971 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:32.130990 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.130993 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.131019 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.131024 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.131052 76297 api.cc:33484] softmax API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.131057 76297 api.cc:33491] softmax kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["int"]}
I0603 16:35:32.131078 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.131083 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:32.134505 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.134510 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.134532 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.134536 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:32.134557 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.134590 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:32.134593 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:32.134610 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.134613 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.134647 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.134652 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.134687 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.134692 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:32.135690 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.135695 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.135730 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.135749 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:32.135787 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.135792 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.135833 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.135862 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.135888 76297 api.cc:9228] gelu API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.135893 76297 api.cc:9235] gelu kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool"]}
I0603 16:35:32.135957 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.135962 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.135994 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.135999 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.136029 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.136034 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:32.139739 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.139743 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.139779 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.139784 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:32.139849 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.139855 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.139892 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.139897 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.139927 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.139931 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:32.139935 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:32.139945 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.139948 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:32.139976 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.139981 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.140012 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.140017 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.140043 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.140048 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.140079 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.140084 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.140107 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.140111 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:32.140115 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:32.140122 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.140125 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:32.140146 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.140147 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:32.140151 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:32.140156 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.140159 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:32.140179 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.140182 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:32.140200 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.140205 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.140229 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.140233 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.140255 76297 api.cc:33484] softmax API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.140261 76297 api.cc:33491] softmax kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["int"]}
I0603 16:35:32.140281 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.140286 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:32.143769 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.143774 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.143797 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.143841 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:32.143863 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.143889 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:32.143893 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:32.143908 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.143911 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.143944 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.143949 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.143983 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.143992 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:32.144958 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.144963 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.144997 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.145026 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:32.145064 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.145076 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.145108 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.145113 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.145136 76297 api.cc:9228] gelu API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.145141 76297 api.cc:9235] gelu kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool"]}
I0603 16:35:32.145206 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.145211 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.145242 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.145247 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.145275 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.145280 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:32.149004 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.149010 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.149044 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.149048 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:32.149109 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.149114 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.149152 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.149156 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.149186 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.149191 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:32.149194 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:32.149205 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.149209 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:32.149235 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.149240 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.149271 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.149276 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.149302 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.149307 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.149338 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.149341 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.149365 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.149370 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:32.149374 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:32.149380 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.149384 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:32.149402 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.149406 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:32.149410 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:32.149416 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.149418 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:32.149438 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.149441 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:32.149459 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.149462 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.149487 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.149492 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.149514 76297 api.cc:33484] softmax API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.149518 76297 api.cc:33491] softmax kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["int"]}
I0603 16:35:32.149538 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.149544 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:32.153052 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.153057 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.153079 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.153084 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:32.153108 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.153112 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:32.153115 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:32.153132 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.153136 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.153170 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.153174 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.153208 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.153213 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:32.154249 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.154254 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.154290 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.154312 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:32.154349 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.154354 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.154386 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.154392 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.154414 76297 api.cc:9228] gelu API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.154419 76297 api.cc:9235] gelu kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool"]}
I0603 16:35:32.154485 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.154490 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.154523 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.154528 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.154557 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.154562 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:32.158273 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.158278 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.158314 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.158339 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:32.158398 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.158403 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.158439 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.158443 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.158473 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.158478 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:32.158483 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:32.158491 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.158494 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:32.158519 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.158524 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.158555 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.158568 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.158596 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.158600 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.158630 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.158634 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.158659 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.158664 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:32.158668 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:32.158674 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.158677 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:32.158696 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.158699 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:32.158702 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:32.158710 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.158712 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:32.158732 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.158738 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:32.158757 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.158761 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.158787 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.158790 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.158828 76297 api.cc:33484] softmax API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.158833 76297 api.cc:33491] softmax kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["int"]}
I0603 16:35:32.158854 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.158857 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:32.162298 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.162303 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.162324 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.162329 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:32.162351 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.162356 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:32.162359 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:32.162375 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.162379 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.162413 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.162429 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.162462 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.162468 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:32.163478 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.163484 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.163519 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.163525 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:32.163563 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.163568 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.163604 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.163609 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.163631 76297 api.cc:9228] gelu API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.163636 76297 api.cc:9235] gelu kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool"]}
I0603 16:35:32.163702 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.163707 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.163739 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.163744 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.163774 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.163779 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:32.167496 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.167501 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.167536 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.167541 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:32.167608 76297 api.cc:33407] slice API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.167636 76297 api.cc:33414] slice kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int64_t>","IntArray","IntArray","vector<int64_t>","vector<int64_t>"]}
I0603 16:35:32.167673 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.167698 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.167737 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.167762 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.167793 76297 api.cc:22807] tanh API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.167819 76297 api.cc:22814] tanh kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":[]}
I0603 16:35:32.167858 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.167874 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:32.167877 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:32.167891 76297 api.cc:29470] gather API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.167894 76297 api.cc:29477] gather kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar"]}
I0603 16:35:32.167922 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.167924 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.168571 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.168576 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.168603 76297 api.cc:9228] gelu API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.168607 76297 api.cc:9235] gelu kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool"]}
I0603 16:35:32.168638 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.168642 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:32.168684 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.168689 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:32.168710 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.168715 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.168987 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.168991 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.169025 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.169030 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.169062 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.169067 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.169150 76297 api.cc:28638] full API kernel key: [XPU, Undefined(AnyLayout), int64]
I0603 16:35:32.169158 76297 api.cc:28645] full kernel: {"input":[],"output":["XPU, NCHW, int64"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:32.169176 76297 api.cc:31621] not_equal API kernel key: [XPU, NCHW, int64]
I0603 16:35:32.169180 76297 api.cc:31628] not_equal kernel: {"input":["XPU, NCHW, int64","XPU, NCHW, int64"],"output":["XPU, NCHW, bool"],"attribute":[]}
I0603 16:35:32.169210 76297 api.cc:26250] cast API kernel key: [XPU, NCHW, bool]
I0603 16:35:32.169216 76297 api.cc:26257] cast kernel: {"input":["XPU, NCHW, bool"],"output":["XPU, NCHW, Undefined"],"attribute":["DataType"]}
I0603 16:35:32.169237 76297 api.cc:31270] multiply API kernel key: [XPU, NCHW, int64]
I0603 16:35:32.169245 76297 api.cc:31277] multiply kernel: {"input":["XPU, NCHW, int64","XPU, NCHW, int64"],"output":["XPU, NCHW, int64"],"attribute":[]}
I0603 16:35:32.169287 76297 api.cc:5746] cross_entropy_with_softmax API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.169293 76297 api.cc:5753] cross_entropy_with_softmax kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["bool","bool","bool","int","int"]}
I0603 16:35:32.169399 76297 api.cc:27087] divide API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.169405 76297 api.cc:27094] divide kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.169431 76297 api.cc:28638] full API kernel key: [XPU, Undefined(AnyLayout), int64]
I0603 16:35:32.169435 76297 api.cc:28645] full kernel: {"input":[],"output":["XPU, NCHW, int64"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:32.169446 76297 api.cc:31621] not_equal API kernel key: [XPU, NCHW, int64]
I0603 16:35:32.169449 76297 api.cc:31628] not_equal kernel: {"input":["XPU, NCHW, int64","XPU, NCHW, int64"],"output":["XPU, NCHW, bool"],"attribute":[]}
I0603 16:35:32.169468 76297 api.cc:26250] cast API kernel key: [XPU, NCHW, bool]
I0603 16:35:32.169471 76297 api.cc:26257] cast kernel: {"input":["XPU, NCHW, bool"],"output":["XPU, NCHW, Undefined"],"attribute":["DataType"]}
I0603 16:35:32.169486 76297 api.cc:31270] multiply API kernel key: [XPU, NCHW, int64]
I0603 16:35:32.169489 76297 api.cc:31277] multiply kernel: {"input":["XPU, NCHW, int64","XPU, NCHW, int64"],"output":["XPU, NCHW, int64"],"attribute":[]}
I0603 16:35:32.169521 76297 api.cc:5746] cross_entropy_with_softmax API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.169526 76297 api.cc:5753] cross_entropy_with_softmax kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["bool","bool","bool","int","int"]}
I0603 16:35:32.169569 76297 api.cc:34100] sum API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.169575 76297 api.cc:34107] sum kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, Undefined"],"attribute":["IntArray","DataType","bool"]}
I0603 16:35:32.169605 76297 api.cc:30971] mean API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.169610 76297 api.cc:30978] mean kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["IntArray","bool"]}
I0603 16:35:32.169629 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.169636 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.170001 76297 api.cc:28638] full API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:32.170013 76297 api.cc:28645] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:32.173134 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.173147 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:32.173848 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.173856 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:32.174558 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.174566 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:32.175266 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.175272 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:32.175980 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.175987 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:32.176666 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.176673 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:32.177394 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.177402 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:32.178139 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.178146 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:32.178884 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.178891 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:32.179625 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.179631 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:32.180357 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.180364 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:32.181061 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.181068 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:32.181957 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.181972 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:32.182101 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.182108 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.182163 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.182194 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.182235 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.182250 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.182291 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.182296 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.182332 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.182337 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.182374 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.182379 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.182420 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.182423 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.182461 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.182466 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.182503 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.182508 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.182546 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.182551 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.182590 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.182595 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.182631 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.182636 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.182672 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.182677 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.182711 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.182716 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.182752 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.182757 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.182793 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.182798 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.182842 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.182845 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.182881 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.182885 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.182921 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.182925 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.182961 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.182966 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.183003 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.183007 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.183046 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.183051 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.183089 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.183094 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.183130 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.183133 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.183169 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.183173 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.183208 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.183214 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.183250 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.183254 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.183290 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.183295 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.183331 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.183336 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.183370 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.183375 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.183411 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.183416 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.183451 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.183455 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.183491 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.183496 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.183532 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.183537 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.183571 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.183576 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.183612 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.183616 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.183657 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.183662 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.183701 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.183705 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.183744 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.183748 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.183784 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.183789 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.183830 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.183833 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.183869 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.183876 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.183912 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.183916 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.183955 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.183959 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.184000 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.184005 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.184043 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.184048 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.184089 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.184094 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.184131 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.184136 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.184175 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.184180 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.184216 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.184221 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.184257 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.184262 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.184301 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.184305 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.184342 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.184346 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.184381 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.184386 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.184422 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.184427 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.184468 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.184473 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.184511 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.184515 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.184551 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.184556 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.184592 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.184597 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.184631 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.184635 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.184675 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.184680 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.184717 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.184721 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.184759 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.184763 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.184801 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.184809 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.184846 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.184849 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.184886 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.184891 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.184926 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.184931 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.184968 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.184973 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.185009 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.185014 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.185048 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.185052 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.185087 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.185092 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.185127 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.185130 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.185168 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.185171 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.185211 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.185215 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.185256 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.185261 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.185299 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.185303 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.185344 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.185348 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.185390 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.185395 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.185434 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.185439 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.185477 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.185482 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.185519 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.185524 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.185562 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.185567 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.185607 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.185613 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.185652 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.185657 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.185696 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.185701 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.185739 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.185743 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.185784 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.185788 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.185839 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.185846 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.185883 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.185889 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.185925 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.185930 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.185966 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.185971 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.186007 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.186012 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.186048 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.186051 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.186086 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.186091 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.186127 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.186132 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.186167 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.186172 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.186208 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.186211 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.186246 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.186251 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.186288 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.186292 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.186327 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.186332 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.186371 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.186378 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.186414 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.186419 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.186453 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.186458 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.186494 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.186498 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.186537 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.186540 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.186579 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.186583 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.186621 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.186626 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.186663 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.186667 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.186703 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.186708 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.186748 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.186753 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.186792 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.186796 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.186836 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.186839 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.186878 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.186882 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.186919 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.186924 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.186961 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.186966 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.187002 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.187007 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.187049 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.187053 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.187093 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.187098 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.187136 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.187141 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.187178 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.187183 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.187220 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.187225 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.187261 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.187266 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.187305 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.187310 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.187350 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.187353 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.187389 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.187393 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.187429 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.187433 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.187475 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.187484 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.187520 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.187525 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.187563 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.187567 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.187603 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.187608 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.187644 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.187647 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.187687 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.187691 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.187731 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.187736 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.187774 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.187778 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.187824 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.187827 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.187865 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.187870 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.187904 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.187909 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.187949 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.187954 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.187994 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.187997 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.188035 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.188040 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.188076 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.188081 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.188115 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.188119 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.188155 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.188160 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.188198 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.188202 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.188242 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.188246 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.188284 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.188288 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.188324 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.188329 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.188365 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.188369 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.188405 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.188409 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.188444 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.188449 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.188485 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.188489 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.188530 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.188534 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.188576 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.188581 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.188620 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.188625 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.188664 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.188668 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.188706 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.188711 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.188750 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.188755 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.188792 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.188796 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.188839 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.188843 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.188881 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.188886 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.188922 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.188926 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.188964 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.188968 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.189005 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.189009 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.189045 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.189050 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.189086 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.189090 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.189126 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.189131 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.189167 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.189172 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.189206 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.189211 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.189249 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.189254 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.189292 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.189297 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.189333 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.189337 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.189374 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.189378 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.189414 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.189419 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.189455 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.189458 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.189494 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.189499 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.189535 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.189539 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.189576 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.189581 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.189618 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.189623 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.189661 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.189664 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.189699 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.189704 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.189739 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.189744 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.189779 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.189783 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.189823 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.189826 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.189862 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.189867 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.189903 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.189906 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.189941 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.189945 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.189982 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.189986 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.190023 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.190028 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.190065 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.190070 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.190106 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.190111 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.190148 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.190153 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.190193 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.190197 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.190235 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.190240 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.190279 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.190284 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.190322 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.190326 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.190363 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.190368 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.190404 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.190408 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.190451 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.190456 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.190495 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.190500 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.190539 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.190543 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.190584 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.190588 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.190627 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.190631 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.190668 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.190670 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.190711 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.190714 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.190753 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.190757 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.190796 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.190800 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
[32m[2024-06-03 16:35:32,423] [    INFO][0m - global step: 3, epoch: 0, batch: 2, loss: 11.173628, avg_reader_cost: 0.00010 sec, avg_batch_cost: 0.37546 sec, avg_samples: 32.00000, ips: 85.22810 sequences/sec,  [0m
I0603 16:35:32.423835 76297 api.cc:28997] full_like API kernel key: [XPU, NCHW, int64]
I0603 16:35:32.423864 76297 api.cc:29004] full_like kernel: {"input":["Undefined, NCHW, int64"],"output":["XPU, NCHW, int64"],"attribute":["Scalar","DataType"]}
I0603 16:35:32.423926 76297 api.cc:26615] cumsum API kernel key: [XPU, NCHW, int64]
I0603 16:35:32.423933 76297 api.cc:26622] cumsum kernel: {"input":["XPU, NCHW, int64"],"output":["XPU, NCHW, int64"],"attribute":["Scalar","bool","bool","bool"]}
I0603 16:35:32.427999 76297 api.cc:33948] subtract API kernel key: [XPU, NCHW, int64]
I0603 16:35:32.428009 76297 api.cc:33955] subtract kernel: {"input":["XPU, NCHW, int64","XPU, NCHW, int64"],"output":["XPU, NCHW, int64"],"attribute":[]}
I0603 16:35:32.428220 76297 api.cc:27476] embedding API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.428228 76297 api.cc:27483] embedding kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["int64_t"]}
I0603 16:35:32.428297 76297 api.cc:27476] embedding API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.428411 76297 api.cc:27483] embedding kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["int64_t"]}
I0603 16:35:32.428579 76297 api.cc:27476] embedding API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.428586 76297 api.cc:27483] embedding kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["int64_t"]}
I0603 16:35:32.428668 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.428686 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.428786 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.428791 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.429090 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.429098 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:32.429369 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.429376 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:32.429984 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.429993 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.430058 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.430079 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.430222 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.430229 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:32.430234 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:32.430267 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.430274 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:32.430338 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.430346 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.430385 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.430392 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.430565 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.430572 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.430611 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.430615 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.431263 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.431272 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:32.431275 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:32.431493 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.431500 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:32.432121 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.432127 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:32.432132 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:32.432143 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.432147 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:32.432179 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.432186 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:32.432214 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.432219 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.432260 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.432265 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.432298 76297 api.cc:33484] softmax API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.432303 76297 api.cc:33491] softmax kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["int"]}
I0603 16:35:32.432333 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.432337 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:32.433494 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.433501 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.433528 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.433532 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:32.433562 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.433565 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:32.433569 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:32.433593 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.433597 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.433638 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.433686 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.433732 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.433735 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:32.434684 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.434690 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.434744 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.434749 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:32.434800 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.434854 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.434893 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.434898 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.434931 76297 api.cc:9228] gelu API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.434935 76297 api.cc:9235] gelu kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool"]}
I0603 16:35:32.435015 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.435021 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.435058 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.435062 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.435101 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.435106 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:32.438691 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.438699 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.438746 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.438751 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:32.438841 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.438910 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.438951 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.438966 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.439005 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.439049 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:32.439054 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:32.439067 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.439071 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:32.439105 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.439108 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.439145 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.439150 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.439183 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.439225 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.439268 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.439306 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.439340 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.439369 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:32.439373 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:32.439383 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.439388 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:32.439412 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.439417 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:32.439422 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:32.439430 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.439435 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:32.439460 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.439466 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:32.439488 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.439494 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.439525 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.439531 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.439563 76297 api.cc:33484] softmax API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.439568 76297 api.cc:33491] softmax kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["int"]}
I0603 16:35:32.439596 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.439602 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:32.442735 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.442742 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.442768 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.442771 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:32.442800 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.442804 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:32.442817 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:32.442837 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.442842 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.442879 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.442883 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.442924 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.442929 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:32.443931 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.443938 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.443979 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.444063 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:32.444110 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.444114 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.444150 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.444228 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.444254 76297 api.cc:9228] gelu API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.444258 76297 api.cc:9235] gelu kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool"]}
I0603 16:35:32.444331 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.444341 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.444377 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.444380 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.444416 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.444420 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:32.447994 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.448000 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.448040 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.448096 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:32.448166 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.448215 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.448256 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.448261 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.448294 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.448339 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:32.448343 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:32.448356 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.448360 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:32.448390 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.448393 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.448428 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.448457 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.448489 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.448524 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.448565 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.448568 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.448599 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.448603 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:32.448607 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:32.448617 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.448621 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:32.448643 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.448647 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:32.448650 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:32.448658 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.448661 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:32.448684 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.448688 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:32.448709 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.448712 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.448743 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.448747 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.448772 76297 api.cc:33484] softmax API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.448776 76297 api.cc:33491] softmax kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["int"]}
I0603 16:35:32.448801 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.448861 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:32.452039 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.452044 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.452070 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.452073 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:32.452100 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.452104 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:32.452107 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:32.452127 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.452131 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.452169 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.452198 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.452240 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.452244 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:32.453225 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.453231 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.453271 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.453305 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:32.453351 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.453354 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.453389 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.453392 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.453419 76297 api.cc:9228] gelu API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.453423 76297 api.cc:9235] gelu kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool"]}
I0603 16:35:32.453493 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.453522 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.453557 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.453586 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.453621 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.453645 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:32.457271 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.457278 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.457317 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.457321 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:32.457388 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.457396 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.457433 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.457468 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.457502 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.457506 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:32.457510 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:32.457522 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.457525 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:32.457554 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.457558 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.457593 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.457629 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.457661 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.457695 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.457727 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.457758 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.457787 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.457832 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:32.457836 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:32.457846 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.457849 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:32.457875 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.457877 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:32.457881 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:32.457890 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.457892 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:32.457916 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.457918 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:32.457938 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.457942 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.457971 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.457975 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.458003 76297 api.cc:33484] softmax API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.458009 76297 api.cc:33491] softmax kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["int"]}
I0603 16:35:32.458032 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.458038 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:32.461305 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.461313 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.461336 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.461339 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:32.461365 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.461369 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:32.461372 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:32.461390 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.461438 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.461478 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.461505 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.461547 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.461551 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:32.462486 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.462492 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.462533 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.462538 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:32.462582 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.462602 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.462639 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.462671 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.462699 76297 api.cc:9228] gelu API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.462703 76297 api.cc:9235] gelu kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool"]}
I0603 16:35:32.462775 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.462781 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.462826 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.462855 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.462889 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.462894 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:32.466552 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.466558 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.466599 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.466626 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:32.466692 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.466712 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.466751 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.466791 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.466868 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.466888 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:32.466892 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:32.466904 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.466907 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:32.466938 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.466941 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.466977 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.467002 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.467036 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.467067 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.467103 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.467108 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.467140 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.467146 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:32.467150 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:32.467161 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.467164 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:32.467187 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.467192 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:32.467196 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:32.467204 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.467207 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:32.467231 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.467233 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:32.467254 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.467259 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.467293 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.467298 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.467324 76297 api.cc:33484] softmax API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.467329 76297 api.cc:33491] softmax kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["int"]}
I0603 16:35:32.467352 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.467357 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:32.470605 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.470610 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.470635 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.470638 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:32.470664 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.470669 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:32.470671 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:32.470690 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.470692 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.470729 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.470752 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.470791 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.470825 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:32.471783 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.471789 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.471841 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.471870 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:32.471915 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.471918 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.471954 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.471978 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.472005 76297 api.cc:9228] gelu API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.472041 76297 api.cc:9235] gelu kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool"]}
I0603 16:35:32.472112 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.472118 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.472152 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.472158 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.472193 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.472199 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:32.475839 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.475847 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.475893 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.475896 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:32.475965 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.475970 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.476011 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.476053 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.476089 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.476135 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:32.476137 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:32.476150 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.476153 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:32.476181 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.476205 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.476239 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.476243 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.476275 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.476305 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.476338 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.476372 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.476404 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.476410 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:32.476414 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:32.476424 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.476428 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:32.476452 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.476457 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:32.476461 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:32.476469 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.476472 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:32.476495 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.476502 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:32.476523 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.476528 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.476558 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.476563 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.476591 76297 api.cc:33484] softmax API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.476596 76297 api.cc:33491] softmax kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["int"]}
I0603 16:35:32.476619 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.476626 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:32.479876 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.479882 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.479907 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.479949 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:32.479975 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.479979 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:32.479982 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:32.480001 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.480005 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.480041 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.480043 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.480083 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.480110 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:32.481057 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.481065 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.481104 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.481108 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:32.481153 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.481176 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.481212 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.481216 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.481243 76297 api.cc:9228] gelu API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.481277 76297 api.cc:9235] gelu kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool"]}
I0603 16:35:32.481349 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.481359 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.481393 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.481422 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.481456 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.481462 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:32.485914 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.485920 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.485960 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.485988 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:32.486055 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.486076 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.486115 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.486119 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.486152 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.486174 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:32.486178 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:32.486191 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.486193 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:32.486222 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.486261 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.486295 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.486299 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.486330 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.486333 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.486367 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.486372 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.486403 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.486409 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:32.486413 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:32.486423 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.486426 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:32.486450 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.486454 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:32.486459 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:32.486467 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.486470 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:32.486495 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.486500 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:32.486524 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.486529 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.486560 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.486567 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.486591 76297 api.cc:33484] softmax API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.486596 76297 api.cc:33491] softmax kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["int"]}
I0603 16:35:32.486620 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.486626 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:32.489991 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.490006 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.490043 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.490079 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:32.490113 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.490116 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:32.490120 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:32.490146 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.490149 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.490191 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.490222 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.490271 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.490276 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:32.491160 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.491166 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.491211 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.491228 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:32.491276 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.491288 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.491326 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.491346 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.491374 76297 api.cc:9228] gelu API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.491402 76297 api.cc:9235] gelu kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool"]}
I0603 16:35:32.491474 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.491479 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.491516 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.491523 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.491555 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.491560 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:32.495220 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.495226 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.495267 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.495290 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:32.495363 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.495369 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.495410 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.495414 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.495448 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.495471 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:32.495476 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:32.495487 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.495491 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:32.495520 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.495523 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.495558 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.495563 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.495594 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.495596 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.495630 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.495635 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.495661 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.495666 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:32.495668 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:32.495678 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.495682 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:32.495704 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.495733 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:32.495738 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:32.495745 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.495748 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:32.495776 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.495780 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:32.495802 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.495821 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.495852 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.495857 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.495882 76297 api.cc:33484] softmax API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.495887 76297 api.cc:33491] softmax kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["int"]}
I0603 16:35:32.495910 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.495947 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:32.499243 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.499248 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.499276 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.499279 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:32.499306 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.499310 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:32.499313 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:32.499332 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.499336 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.499373 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.499397 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.499436 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.499475 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:32.500416 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.500422 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.500463 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.500468 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:32.500511 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.500531 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.500568 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.500572 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.500597 76297 api.cc:9228] gelu API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.500602 76297 api.cc:9235] gelu kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool"]}
I0603 16:35:32.500674 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.500682 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.500717 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.500720 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.500753 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.500757 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:32.504457 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.504462 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.504498 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.504529 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:32.504588 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.504606 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.504643 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.504666 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.504696 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.504724 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:32.504727 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:32.504736 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.504739 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:32.504765 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.504767 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.504797 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.504801 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.504842 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.504874 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.504905 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.504909 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.504933 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.504936 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:32.504938 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:32.504946 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.504949 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:32.504969 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.504971 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:32.504974 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:32.504981 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.504983 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:32.505007 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.505010 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:32.505030 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.505033 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.505059 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.505061 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.505082 76297 api.cc:33484] softmax API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.505085 76297 api.cc:33491] softmax kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["int"]}
I0603 16:35:32.505106 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.505110 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:32.508482 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.508489 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.508510 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.508553 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:32.508577 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.508612 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:32.508615 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:32.508631 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.508634 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.508668 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.508671 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.508705 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.508725 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:32.509665 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.509670 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.509706 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.509732 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:32.509769 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.509788 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.509831 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.509835 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.509860 76297 api.cc:9228] gelu API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.509862 76297 api.cc:9235] gelu kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool"]}
I0603 16:35:32.509928 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.509933 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.509964 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.509969 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.510001 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.510006 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:32.513711 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.513716 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.513751 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.513782 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:32.513864 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.513892 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.513931 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.513957 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.513986 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.514014 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:32.514017 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:32.514027 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.514030 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:32.514055 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.514058 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.514091 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.514093 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.514122 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.514146 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.514178 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.514200 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.514227 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.514231 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:32.514235 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:32.514242 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.514245 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:32.514271 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.514276 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:32.514279 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:32.514286 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.514288 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:32.514309 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.514312 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:32.514331 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.514333 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.514361 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.514365 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.514389 76297 api.cc:33484] softmax API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.514393 76297 api.cc:33491] softmax kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["int"]}
I0603 16:35:32.514415 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.514420 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:32.517730 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.517735 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.517757 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.517760 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:32.517783 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.517786 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:32.517789 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:32.517814 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.517817 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.517851 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.517891 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.517926 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.517990 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:32.518916 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.518921 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.518956 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.518960 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:32.519001 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.519024 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.519057 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.519093 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.519116 76297 api.cc:9228] gelu API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.519146 76297 api.cc:9235] gelu kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool"]}
I0603 16:35:32.519212 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.519217 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.519250 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.519253 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.519284 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.519286 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:32.522969 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.522974 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.523007 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.523025 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:32.523087 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.523116 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.523154 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.523157 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.523186 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.523216 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:32.523218 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:32.523227 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.523231 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:32.523257 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.523258 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.523289 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.523330 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.523357 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.523382 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.523413 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.523433 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.523458 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.523463 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:32.523465 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:32.523473 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.523475 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:32.523495 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.523499 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:32.523501 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:32.523509 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.523510 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:32.523535 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.523540 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:32.523559 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.523563 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.523589 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.523593 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.523617 76297 api.cc:33484] softmax API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.523622 76297 api.cc:33491] softmax kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["int"]}
I0603 16:35:32.523643 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.523648 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:32.527016 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.527022 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.527047 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.527050 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:32.527074 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.527077 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:32.527081 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:32.527097 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.527099 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.527133 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.527151 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.527186 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.527204 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:32.528198 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.528204 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.528239 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.528285 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:32.528323 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.528349 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.528383 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.528412 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.528435 76297 api.cc:9228] gelu API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.528471 76297 api.cc:9235] gelu kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool"]}
I0603 16:35:32.528537 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.528542 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.528573 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.528578 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.528606 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.528609 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:32.532280 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.532286 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.532320 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.532325 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:32.532384 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.532389 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.532426 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.532431 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.532459 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.532475 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:32.532478 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:32.532488 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.532490 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:32.532518 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.532521 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.532552 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.532557 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.532585 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.532590 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.532620 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.532625 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.532649 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.532653 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:32.532656 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:32.532663 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.532666 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:32.532686 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.532692 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:32.532696 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:32.532702 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.532704 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:32.532724 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.532729 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:32.532747 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.532752 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.532778 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.532783 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.532804 76297 api.cc:33484] softmax API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.532824 76297 api.cc:33491] softmax kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["int"]}
I0603 16:35:32.532850 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.532855 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:32.536319 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.536324 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.536345 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.536350 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:32.536373 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.536378 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:32.536381 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:32.536397 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.536399 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.536435 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.536440 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.536473 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.536491 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:32.537498 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.537503 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.537539 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.537544 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:32.537585 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.537590 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.537623 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.537627 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.537652 76297 api.cc:9228] gelu API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.537657 76297 api.cc:9235] gelu kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool"]}
I0603 16:35:32.537722 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.537727 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.537760 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.537765 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.537791 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.537796 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:32.541530 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.541535 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.541570 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.541589 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:32.541661 76297 api.cc:33407] slice API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.541667 76297 api.cc:33414] slice kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int64_t>","IntArray","IntArray","vector<int64_t>","vector<int64_t>"]}
I0603 16:35:32.541707 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.541712 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.541749 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.541754 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.541786 76297 api.cc:22807] tanh API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.541793 76297 api.cc:22814] tanh kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":[]}
I0603 16:35:32.541846 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.541851 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:32.541855 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:32.541868 76297 api.cc:29470] gather API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.541872 76297 api.cc:29477] gather kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar"]}
I0603 16:35:32.541900 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.541905 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.542573 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.542578 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.542603 76297 api.cc:9228] gelu API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.542608 76297 api.cc:9235] gelu kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool"]}
I0603 16:35:32.542639 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.542644 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:32.542690 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.542694 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:32.542718 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.542723 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.543006 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.543011 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.543043 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.543048 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.543080 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.543085 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.543191 76297 api.cc:28638] full API kernel key: [XPU, Undefined(AnyLayout), int64]
I0603 16:35:32.543198 76297 api.cc:28645] full kernel: {"input":[],"output":["XPU, NCHW, int64"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:32.543220 76297 api.cc:31621] not_equal API kernel key: [XPU, NCHW, int64]
I0603 16:35:32.543226 76297 api.cc:31628] not_equal kernel: {"input":["XPU, NCHW, int64","XPU, NCHW, int64"],"output":["XPU, NCHW, bool"],"attribute":[]}
I0603 16:35:32.543259 76297 api.cc:26250] cast API kernel key: [XPU, NCHW, bool]
I0603 16:35:32.543265 76297 api.cc:26257] cast kernel: {"input":["XPU, NCHW, bool"],"output":["XPU, NCHW, Undefined"],"attribute":["DataType"]}
I0603 16:35:32.543287 76297 api.cc:31270] multiply API kernel key: [XPU, NCHW, int64]
I0603 16:35:32.543292 76297 api.cc:31277] multiply kernel: {"input":["XPU, NCHW, int64","XPU, NCHW, int64"],"output":["XPU, NCHW, int64"],"attribute":[]}
I0603 16:35:32.543339 76297 api.cc:5746] cross_entropy_with_softmax API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.543344 76297 api.cc:5753] cross_entropy_with_softmax kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["bool","bool","bool","int","int"]}
I0603 16:35:32.543448 76297 api.cc:27087] divide API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.543453 76297 api.cc:27094] divide kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.543479 76297 api.cc:28638] full API kernel key: [XPU, Undefined(AnyLayout), int64]
I0603 16:35:32.543484 76297 api.cc:28645] full kernel: {"input":[],"output":["XPU, NCHW, int64"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:32.543498 76297 api.cc:31621] not_equal API kernel key: [XPU, NCHW, int64]
I0603 16:35:32.543503 76297 api.cc:31628] not_equal kernel: {"input":["XPU, NCHW, int64","XPU, NCHW, int64"],"output":["XPU, NCHW, bool"],"attribute":[]}
I0603 16:35:32.543524 76297 api.cc:26250] cast API kernel key: [XPU, NCHW, bool]
I0603 16:35:32.543529 76297 api.cc:26257] cast kernel: {"input":["XPU, NCHW, bool"],"output":["XPU, NCHW, Undefined"],"attribute":["DataType"]}
I0603 16:35:32.543543 76297 api.cc:31270] multiply API kernel key: [XPU, NCHW, int64]
I0603 16:35:32.543547 76297 api.cc:31277] multiply kernel: {"input":["XPU, NCHW, int64","XPU, NCHW, int64"],"output":["XPU, NCHW, int64"],"attribute":[]}
I0603 16:35:32.543581 76297 api.cc:5746] cross_entropy_with_softmax API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.543586 76297 api.cc:5753] cross_entropy_with_softmax kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["bool","bool","bool","int","int"]}
I0603 16:35:32.543632 76297 api.cc:34100] sum API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.543638 76297 api.cc:34107] sum kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, Undefined"],"attribute":["IntArray","DataType","bool"]}
I0603 16:35:32.543668 76297 api.cc:30971] mean API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.543673 76297 api.cc:30978] mean kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["IntArray","bool"]}
I0603 16:35:32.543694 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.543699 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.544201 76297 api.cc:28638] full API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:32.544212 76297 api.cc:28645] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:32.547361 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.547375 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:32.548103 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.548112 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:32.548871 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.548877 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:32.549607 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.549613 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:32.550318 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.550324 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:32.551041 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.551048 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:32.551786 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.551792 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:32.552547 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.552554 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:32.553315 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.553323 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:32.554078 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.554085 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:32.554836 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.554842 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:32.555584 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.555590 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:32.556577 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.556591 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:32.556722 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.556730 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.556780 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.556785 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.556838 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.556859 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.556898 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.556903 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.556939 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.556944 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.556979 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.556984 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.557021 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.557026 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.557061 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.557066 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.557101 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.557106 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.557142 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.557147 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.557185 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.557189 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.557225 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.557230 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.557265 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.557271 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.557307 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.557312 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.557346 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.557350 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.557386 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.557390 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.557427 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.557431 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.557467 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.557472 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.557508 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.557512 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.557547 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.557552 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.557588 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.557592 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.557629 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.557633 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.557668 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.557673 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.557708 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.557713 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.557752 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.557756 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.557794 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.557799 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.557845 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.557852 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.557888 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.557893 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.557929 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.557932 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.557967 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.557971 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.558009 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.558013 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.558051 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.558055 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.558091 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.558096 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.558137 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.558141 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.558179 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.558184 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.558223 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.558226 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.558265 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.558270 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.558308 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.558312 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.558349 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.558353 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.558393 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.558398 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.558434 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.558439 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.558472 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.558477 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.558513 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.558517 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.558555 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.558560 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.558597 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.558601 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.558637 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.558642 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.558677 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.558681 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.558717 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.558722 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.558758 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.558763 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.558801 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.558811 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.558848 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.558851 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.558888 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.558892 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.558929 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.558933 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.558969 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.558974 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.559010 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.559015 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.559051 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.559054 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.559090 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.559095 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.559129 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.559134 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.559168 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.559173 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.559208 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.559213 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.559249 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.559253 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.559294 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.559299 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.559340 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.559345 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.559384 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.559389 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.559428 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.559433 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.559473 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.559476 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.559516 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.559520 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.559557 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.559561 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.559597 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.559602 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.559638 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.559641 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.559681 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.559686 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.559725 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.559731 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.559772 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.559775 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.559818 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.559836 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.559875 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.559880 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.559917 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.559921 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.559958 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.559962 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.560000 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.560004 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.560041 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.560045 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.560081 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.560086 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.560119 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.560124 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.560159 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.560164 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.560199 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.560204 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.560240 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.560245 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.560279 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.560283 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.560319 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.560323 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.560359 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.560364 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.560398 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.560402 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.560443 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.560447 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.560485 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.560489 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.560525 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.560529 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.560564 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.560568 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.560606 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.560611 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.560647 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.560652 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.560688 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.560691 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.560729 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.560734 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.560770 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.560773 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.560814 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.560819 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.560858 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.560863 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.560900 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.560904 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.560945 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.560948 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.560986 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.560992 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.561028 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.561033 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.561067 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.561071 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.561107 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.561111 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.561151 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.561154 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.561190 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.561194 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.561232 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.561236 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.561272 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.561277 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.561316 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.561321 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.561355 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.561360 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.561399 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.561403 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.561439 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.561443 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.561480 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.561486 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.561520 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.561524 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.561561 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.561566 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.561604 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.561609 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.561643 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.561648 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.561684 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.561688 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.561723 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.561728 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.561766 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.561770 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.561815 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.561820 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.561864 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.561869 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.561908 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.561913 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.561949 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.561952 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.561988 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.561993 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.562028 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.562032 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.562072 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.562076 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.562116 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.562120 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.562157 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.562162 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.562197 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.562201 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.562237 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.562242 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.562281 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.562286 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.562323 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.562327 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.562366 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.562369 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.562405 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.562410 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.562448 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.562453 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.562489 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.562492 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.562531 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.562536 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.562574 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.562578 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.562614 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.562618 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.562659 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.562664 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.562705 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.562708 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.562747 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.562752 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.562791 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.562796 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.562840 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.562845 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.562883 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.562887 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.562927 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.562930 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.562968 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.562973 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.563009 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.563012 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.563050 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.563055 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.563091 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.563095 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.563131 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.563136 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.563174 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.563179 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.563213 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.563218 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.563253 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.563258 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.563295 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.563299 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.563338 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.563342 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.563378 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.563383 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.563421 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.563426 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.563463 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.563468 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.563505 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.563509 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.563545 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.563550 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.563585 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.563589 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.563625 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.563629 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.563664 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.563669 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.563705 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.563710 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.563745 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.563748 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.563784 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.563789 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.563832 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.563835 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.563870 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.563874 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.563907 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.563910 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.563944 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.563949 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.563984 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.563989 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.564024 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.564029 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.564064 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.564069 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.564105 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.564110 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.564145 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.564149 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.564186 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.564190 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.564226 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.564231 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.564272 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.564276 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.564313 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.564318 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.564356 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.564361 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.564399 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.564404 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.564442 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.564447 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.564484 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.564489 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.564524 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.564529 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.564568 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.564572 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.564611 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.564616 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.564654 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.564659 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.564697 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.564702 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.564738 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.564743 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.564779 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.564783 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.564827 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.564831 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.564872 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.564875 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.564914 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.564918 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.564957 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.564962 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.565001 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.565006 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.565042 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.565045 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.565084 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.565088 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.565124 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.565129 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.565165 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.565171 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.565208 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.565212 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.565248 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.565253 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.565290 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.565294 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.565331 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.565335 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
[32m[2024-06-03 16:35:32,756] [    INFO][0m - global step: 4, epoch: 0, batch: 3, loss: 11.123302, avg_reader_cost: 0.00011 sec, avg_batch_cost: 0.33326 sec, avg_samples: 32.00000, ips: 96.02241 sequences/sec,  [0m
I0603 16:35:32.757508 76297 api.cc:28997] full_like API kernel key: [XPU, NCHW, int64]
I0603 16:35:32.757534 76297 api.cc:29004] full_like kernel: {"input":["Undefined, NCHW, int64"],"output":["XPU, NCHW, int64"],"attribute":["Scalar","DataType"]}
I0603 16:35:32.761299 76297 api.cc:26615] cumsum API kernel key: [XPU, NCHW, int64]
I0603 16:35:32.761307 76297 api.cc:26622] cumsum kernel: {"input":["XPU, NCHW, int64"],"output":["XPU, NCHW, int64"],"attribute":["Scalar","bool","bool","bool"]}
I0603 16:35:32.761431 76297 api.cc:33948] subtract API kernel key: [XPU, NCHW, int64]
I0603 16:35:32.761438 76297 api.cc:33955] subtract kernel: {"input":["XPU, NCHW, int64","XPU, NCHW, int64"],"output":["XPU, NCHW, int64"],"attribute":[]}
I0603 16:35:32.761619 76297 api.cc:27476] embedding API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.761626 76297 api.cc:27483] embedding kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["int64_t"]}
I0603 16:35:32.761775 76297 api.cc:27476] embedding API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.761780 76297 api.cc:27483] embedding kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["int64_t"]}
I0603 16:35:32.763861 76297 api.cc:27476] embedding API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.763866 76297 api.cc:27483] embedding kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["int64_t"]}
I0603 16:35:32.765475 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.765483 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.765517 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.765522 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.765573 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.765580 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:32.765640 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.765646 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:32.766691 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.766700 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.766758 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.766763 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.766820 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.766826 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:32.766830 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:32.766847 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.766851 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:32.766887 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.766891 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.766925 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.766930 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.766961 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.766965 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.766997 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.767002 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.767027 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.767032 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:32.767035 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:32.767043 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.767046 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:32.767066 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.767072 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:32.767076 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:32.767081 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.767084 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:32.767109 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.767114 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:32.767138 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.767141 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.767174 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.767179 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.767206 76297 api.cc:33484] softmax API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.767211 76297 api.cc:33491] softmax kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["int"]}
I0603 16:35:32.767237 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.767242 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:32.769948 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.769953 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.769979 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.770006 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:32.770035 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.770040 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:32.770042 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:32.770064 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.770069 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.770104 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.770109 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.770149 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.770155 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:32.771133 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.771138 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.771186 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.771193 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:32.771236 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.771241 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.771274 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.771279 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.771307 76297 api.cc:9228] gelu API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.771313 76297 api.cc:9235] gelu kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool"]}
I0603 16:35:32.771384 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.771389 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.771421 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.771426 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.771456 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.771461 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:32.775147 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.775154 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.775200 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.775216 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:32.775292 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.775298 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.775332 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.775347 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.775381 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.775386 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:32.775389 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:32.775401 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.775404 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:32.775431 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.775456 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.775488 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.775493 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.775522 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.775527 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.775557 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.775563 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.775588 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.775593 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:32.775595 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:32.775605 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.775607 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:32.775628 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.775633 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:32.775635 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:32.775641 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.775645 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:32.775665 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.775671 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:32.775691 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.775696 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.775725 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.775729 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.775755 76297 api.cc:33484] softmax API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.775760 76297 api.cc:33491] softmax kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["int"]}
I0603 16:35:32.775785 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.775790 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:32.779172 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.779179 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.779202 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.779206 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:32.779230 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.779235 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:32.779238 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:32.779258 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.779266 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.779301 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.779306 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.779343 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.779348 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:32.780357 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.780364 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.780402 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.780418 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:32.780459 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.780463 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.780498 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.780503 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.780529 76297 api.cc:9228] gelu API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.780534 76297 api.cc:9235] gelu kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool"]}
I0603 16:35:32.780602 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.780607 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.780638 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.780642 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.780673 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.780678 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:32.784420 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.784425 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.784462 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.784468 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:32.784536 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.784541 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.784576 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.784581 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.784613 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.784617 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:32.784621 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:32.784632 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.784636 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:32.784662 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.784667 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.784698 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.784703 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.784730 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.784735 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.784765 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.784770 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.784795 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.784801 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:32.784818 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:32.784828 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.784830 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:32.784852 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.784857 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:32.784859 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:32.784866 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.784869 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:32.784890 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.784895 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:32.784914 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.784919 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.784945 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.784950 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.784979 76297 api.cc:33484] softmax API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.784984 76297 api.cc:33491] softmax kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["int"]}
I0603 16:35:32.785007 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.785012 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:32.788447 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.788452 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.788475 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.788479 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:32.788503 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.788530 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:32.788533 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:32.788551 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.788554 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.788589 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.788594 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.788630 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.788635 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:32.789626 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.789633 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.789669 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.789673 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:32.789713 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.789718 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.789753 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.789758 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.789783 76297 api.cc:9228] gelu API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.789789 76297 api.cc:9235] gelu kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool"]}
I0603 16:35:32.789868 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.789873 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.789906 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.789911 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.789939 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.789944 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:32.793665 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.793673 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.793711 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.793738 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:32.793800 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.793817 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.793856 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.793861 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.793895 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.793900 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:32.793902 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:32.793913 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.793916 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:32.793942 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.793947 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.793980 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.793984 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.794013 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.794018 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.794049 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.794052 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.794078 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.794082 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:32.794085 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:32.794095 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.794096 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:32.794117 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.794123 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:32.794126 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:32.794134 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.794137 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:32.794157 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.794159 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:32.794179 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.794183 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.794210 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.794215 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.794242 76297 api.cc:33484] softmax API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.794247 76297 api.cc:33491] softmax kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["int"]}
I0603 16:35:32.794271 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.794275 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:32.797709 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.797716 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.797739 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.797742 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:32.797770 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.797799 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:32.797802 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:32.797827 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.797832 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.797865 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.797870 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.797909 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.797915 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:32.798890 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.798895 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.798930 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.798935 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:32.798975 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.798993 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.799027 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.799031 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.799054 76297 api.cc:9228] gelu API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.799059 76297 api.cc:9235] gelu kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool"]}
I0603 16:35:32.799129 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.799134 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.799165 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.799170 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.799199 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.799204 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:32.802943 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.802950 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.802991 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.802995 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:32.803062 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.803067 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.803104 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.803108 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.803143 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.803154 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:32.803157 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:32.803169 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.803172 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:32.803200 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.803202 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.803234 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.803256 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.803284 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.803303 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.803333 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.803336 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.803362 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.803365 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:32.803368 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:32.803376 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.803378 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:32.803398 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.803401 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:32.803404 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:32.803411 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.803413 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:32.803434 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.803437 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:32.803455 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.803460 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.803486 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.803491 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.803515 76297 api.cc:33484] softmax API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.803520 76297 api.cc:33491] softmax kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["int"]}
I0603 16:35:32.803541 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.803546 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:32.806977 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.806983 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.807005 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.807008 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:32.807032 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.807035 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:32.807039 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:32.807057 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.807060 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.807096 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.807121 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.807157 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.807163 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:32.808157 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.808164 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.808202 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.808207 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:32.808246 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.808251 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.808285 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.808318 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.808344 76297 api.cc:9228] gelu API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.808364 76297 api.cc:9235] gelu kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool"]}
I0603 16:35:32.808432 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.808439 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.808471 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.808475 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.808503 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.808506 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:32.812182 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.812189 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.812227 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.812247 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:32.812309 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.812314 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.812350 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.812366 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.812397 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.812402 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:32.812404 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:32.812415 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.812418 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:32.812443 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.812448 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.812479 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.812482 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.812510 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.812512 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.812542 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.812566 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.812592 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.812611 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:32.812614 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:32.812623 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.812625 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:32.812645 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.812675 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:32.812678 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:32.812686 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.812688 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:32.812708 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.812713 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:32.812736 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.812739 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.812764 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.812769 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.812793 76297 api.cc:33484] softmax API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.812798 76297 api.cc:33491] softmax kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["int"]}
I0603 16:35:32.812839 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.812847 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:32.816219 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.816223 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.816246 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.816277 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:32.816303 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.816308 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:32.816310 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:32.816327 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.816330 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.816365 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.816370 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.816407 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.816412 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:32.817400 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.817405 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.817440 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.817463 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:32.817502 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.817507 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.817539 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.817544 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.817569 76297 api.cc:9228] gelu API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.817574 76297 api.cc:9235] gelu kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool"]}
I0603 16:35:32.817642 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.817647 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.817679 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.817683 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.817714 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.817719 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:32.821413 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.821417 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.821455 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.821460 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:32.821522 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.821527 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.821563 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.821568 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.821599 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.821604 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:32.821607 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:32.821619 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.821620 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:32.821648 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.821652 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.821684 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.821708 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.821738 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.821741 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.821772 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.821777 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.821802 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.821825 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:32.821828 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:32.821838 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.821841 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:32.821861 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.821864 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:32.821866 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:32.821874 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.821877 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:32.821897 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.821899 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:32.821918 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.821920 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.821945 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.821949 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.821976 76297 api.cc:33484] softmax API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.821981 76297 api.cc:33491] softmax kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["int"]}
I0603 16:35:32.822003 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.822007 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:32.825464 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.825469 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.825491 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.825525 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:32.825551 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.825570 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:32.825573 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:32.825592 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.825594 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.825628 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.825634 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.825670 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.825675 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:32.826653 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.826658 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.826692 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.826697 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:32.826738 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.826742 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.826776 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.826781 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.826803 76297 api.cc:9228] gelu API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.826818 76297 api.cc:9235] gelu kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool"]}
I0603 16:35:32.826889 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.826893 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.826926 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.826931 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.826961 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.826967 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:32.830677 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.830682 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.830721 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.830726 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:32.830790 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.830796 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.830839 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.830843 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.830876 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.830881 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:32.830884 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:32.830894 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.830896 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:32.830922 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.830927 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.830960 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.830964 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.830994 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.830998 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.831030 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.831034 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.831063 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.831068 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:32.831070 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:32.831079 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.831081 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:32.831104 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.831108 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:32.831111 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:32.831120 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.831121 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:32.831142 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.831147 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:32.831166 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.831168 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.831194 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.831199 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.831221 76297 api.cc:33484] softmax API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.831226 76297 api.cc:33491] softmax kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["int"]}
I0603 16:35:32.831250 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.831254 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:32.834717 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.834722 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.834745 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.834750 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:32.834774 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.834777 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:32.834780 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:32.834797 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.834800 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.834842 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.834846 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.834880 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.834887 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:32.835898 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.835904 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.835942 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.835947 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:32.835987 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.836007 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.836041 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.836045 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.836072 76297 api.cc:9228] gelu API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.836077 76297 api.cc:9235] gelu kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool"]}
I0603 16:35:32.836144 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.836148 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.836179 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.836184 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.836215 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.836220 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:32.839967 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.839974 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.840013 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.840039 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:32.840102 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.840107 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.840142 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.840147 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.840178 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.840183 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:32.840186 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:32.840196 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.840199 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:32.840225 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.840230 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.840261 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.840267 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.840297 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.840302 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.840334 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.840339 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.840365 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.840369 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:32.840373 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:32.840380 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.840382 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:32.840402 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.840405 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:32.840409 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:32.840415 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.840417 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:32.840438 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.840443 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:32.840462 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.840466 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.840492 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.840497 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.840521 76297 api.cc:33484] softmax API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.840526 76297 api.cc:33491] softmax kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["int"]}
I0603 16:35:32.840548 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.840553 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:32.844009 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.844017 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.844040 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.844043 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:32.844066 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.844069 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:32.844072 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:32.844089 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.844091 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.844125 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.844156 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.844190 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.844214 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:32.845199 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.845204 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.845240 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.845247 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:32.845285 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.845290 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.845324 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.845327 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.845353 76297 api.cc:9228] gelu API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.845358 76297 api.cc:9235] gelu kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool"]}
I0603 16:35:32.845427 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.845432 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.845464 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.845469 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.845499 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.845503 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:32.849228 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.849234 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.849269 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.849275 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:32.849340 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.849346 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.849382 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.849387 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.849418 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.849423 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:32.849426 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:32.849435 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.849439 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:32.849467 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.849472 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.849503 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.849509 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.849539 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.849543 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.849574 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.849578 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.849606 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.849610 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:32.849613 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:32.849622 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.849623 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:32.849644 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.849650 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:32.849653 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:32.849661 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.849663 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:32.849684 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.849689 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:32.849707 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.849712 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.849738 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.849743 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.849766 76297 api.cc:33484] softmax API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.849771 76297 api.cc:33491] softmax kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["int"]}
I0603 16:35:32.849793 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.849798 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:32.853260 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.853266 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.853291 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.853292 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:32.853317 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.853320 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:32.853323 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:32.853340 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.853343 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.853379 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.853381 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.853416 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.853421 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:32.854455 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.854461 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.854497 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.854502 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:32.854542 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.854547 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.854578 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.854583 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.854609 76297 api.cc:9228] gelu API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.854614 76297 api.cc:9235] gelu kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool"]}
I0603 16:35:32.854681 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.854686 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.854717 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.854722 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.854750 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.854755 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:32.858490 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.858498 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.858533 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.858539 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:32.858604 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.858609 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.858647 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.858651 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.858682 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.858687 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:32.858690 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:32.858700 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.858703 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:32.858729 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.858734 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.858765 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.858770 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.858798 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.858803 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.858850 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.858853 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.858879 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.858884 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:32.858886 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:32.858896 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.858897 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:32.858917 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.858920 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:32.858923 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:32.858930 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.858932 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:32.858954 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.858958 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:32.858978 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.858983 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.859010 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.859014 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.859038 76297 api.cc:33484] softmax API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.859043 76297 api.cc:33491] softmax kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["int"]}
I0603 16:35:32.859067 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.859072 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:32.862532 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.862538 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.862562 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.862566 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:32.862588 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.862593 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:32.862596 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:32.862612 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.862614 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.862650 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.862654 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.862689 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.862694 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:32.863714 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.863720 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.863757 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.863762 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:32.863801 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.863840 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.863875 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.863879 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.863904 76297 api.cc:9228] gelu API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.863909 76297 api.cc:9235] gelu kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool"]}
I0603 16:35:32.863976 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.863981 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.864012 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.864017 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.864045 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.864050 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:32.867776 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.867782 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.867830 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.867834 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:32.867899 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.867904 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.867940 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.867944 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.867975 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.867995 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:32.867998 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:32.868008 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.868011 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:32.868036 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.868041 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.868072 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.868077 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.868104 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.868109 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.868140 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.868145 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.868170 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.868175 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:32.868177 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:32.868185 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.868188 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:32.868208 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.868211 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:32.868214 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:32.868220 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.868223 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:32.868243 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.868247 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:32.868264 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.868270 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.868296 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.868301 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.868326 76297 api.cc:33484] softmax API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.868331 76297 api.cc:33491] softmax kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["int"]}
I0603 16:35:32.868355 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.868358 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:32.871826 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.871832 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.871855 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.871886 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:32.871910 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.871914 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:32.871918 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:32.871933 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.871937 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.871970 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.871975 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.872010 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.872015 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:32.873023 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.873029 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.873070 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.873075 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:32.873113 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.873118 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.873153 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.873158 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.873184 76297 api.cc:9228] gelu API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.873189 76297 api.cc:9235] gelu kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool"]}
I0603 16:35:32.873258 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.873263 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.873296 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.873301 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.873330 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.873335 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:32.877022 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.877027 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.877063 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.877081 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:32.877171 76297 api.cc:33407] slice API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.877177 76297 api.cc:33414] slice kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int64_t>","IntArray","IntArray","vector<int64_t>","vector<int64_t>"]}
I0603 16:35:32.877221 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.877225 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.877262 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.877267 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.877300 76297 api.cc:22807] tanh API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.877314 76297 api.cc:22814] tanh kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":[]}
I0603 16:35:32.877357 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.877362 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:32.877367 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:32.877379 76297 api.cc:29470] gather API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.877383 76297 api.cc:29477] gather kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar"]}
I0603 16:35:32.877413 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.877418 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.877450 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.877455 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.877477 76297 api.cc:9228] gelu API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.877482 76297 api.cc:9235] gelu kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool"]}
I0603 16:35:32.877511 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.877516 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:32.877561 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.877566 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:32.877593 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.877597 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.877635 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.877640 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.877671 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.877676 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:32.877707 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.877712 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.877858 76297 api.cc:28638] full API kernel key: [XPU, Undefined(AnyLayout), int64]
I0603 16:35:32.877868 76297 api.cc:28645] full kernel: {"input":[],"output":["XPU, NCHW, int64"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:32.877892 76297 api.cc:31621] not_equal API kernel key: [XPU, NCHW, int64]
I0603 16:35:32.877899 76297 api.cc:31628] not_equal kernel: {"input":["XPU, NCHW, int64","XPU, NCHW, int64"],"output":["XPU, NCHW, bool"],"attribute":[]}
I0603 16:35:32.877935 76297 api.cc:26250] cast API kernel key: [XPU, NCHW, bool]
I0603 16:35:32.877941 76297 api.cc:26257] cast kernel: {"input":["XPU, NCHW, bool"],"output":["XPU, NCHW, Undefined"],"attribute":["DataType"]}
I0603 16:35:32.877964 76297 api.cc:31270] multiply API kernel key: [XPU, NCHW, int64]
I0603 16:35:32.877970 76297 api.cc:31277] multiply kernel: {"input":["XPU, NCHW, int64","XPU, NCHW, int64"],"output":["XPU, NCHW, int64"],"attribute":[]}
I0603 16:35:32.878019 76297 api.cc:5746] cross_entropy_with_softmax API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.878026 76297 api.cc:5753] cross_entropy_with_softmax kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["bool","bool","bool","int","int"]}
I0603 16:35:32.878129 76297 api.cc:27087] divide API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.878134 76297 api.cc:27094] divide kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.878163 76297 api.cc:28638] full API kernel key: [XPU, Undefined(AnyLayout), int64]
I0603 16:35:32.878168 76297 api.cc:28645] full kernel: {"input":[],"output":["XPU, NCHW, int64"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:32.878182 76297 api.cc:31621] not_equal API kernel key: [XPU, NCHW, int64]
I0603 16:35:32.878187 76297 api.cc:31628] not_equal kernel: {"input":["XPU, NCHW, int64","XPU, NCHW, int64"],"output":["XPU, NCHW, bool"],"attribute":[]}
I0603 16:35:32.878206 76297 api.cc:26250] cast API kernel key: [XPU, NCHW, bool]
I0603 16:35:32.878211 76297 api.cc:26257] cast kernel: {"input":["XPU, NCHW, bool"],"output":["XPU, NCHW, Undefined"],"attribute":["DataType"]}
I0603 16:35:32.878226 76297 api.cc:31270] multiply API kernel key: [XPU, NCHW, int64]
I0603 16:35:32.878232 76297 api.cc:31277] multiply kernel: {"input":["XPU, NCHW, int64","XPU, NCHW, int64"],"output":["XPU, NCHW, int64"],"attribute":[]}
I0603 16:35:32.878268 76297 api.cc:5746] cross_entropy_with_softmax API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.878273 76297 api.cc:5753] cross_entropy_with_softmax kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["bool","bool","bool","int","int"]}
I0603 16:35:32.878319 76297 api.cc:34100] sum API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.878324 76297 api.cc:34107] sum kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, Undefined"],"attribute":["IntArray","DataType","bool"]}
I0603 16:35:32.878353 76297 api.cc:30971] mean API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.878360 76297 api.cc:30978] mean kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["IntArray","bool"]}
I0603 16:35:32.878381 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.878386 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:32.878976 76297 api.cc:28638] full API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:32.878989 76297 api.cc:28645] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:32.880537 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.880550 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:32.881263 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.881270 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:32.881966 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.881974 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:32.882709 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.882716 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:32.883457 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.883466 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:32.884272 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.884279 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:32.885044 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.885051 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:32.885782 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.885789 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:32.886533 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.886540 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:32.887297 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.887303 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:32.888063 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.888070 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:32.888830 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.888837 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:32.889950 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.889964 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:32.890105 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.890112 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.890166 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.890172 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.890213 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.890218 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.890256 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.890261 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.890297 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.890302 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.890342 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.890347 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.890386 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.890391 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.890429 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.890432 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.890470 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.890475 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.890511 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.890514 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.890552 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.890556 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.890594 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.890597 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.890633 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.890638 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.890673 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.890678 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.890714 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.890718 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.890755 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.890759 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.890796 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.890801 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.890843 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.890848 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.890885 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.890889 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.890928 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.890931 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.890967 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.890972 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.891010 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.891014 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.891052 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.891057 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.891095 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.891100 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.891139 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.891142 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.891181 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.891186 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.891224 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.891229 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.891268 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.891271 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.891309 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.891314 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.891350 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.891355 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.891395 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.891399 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.891438 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.891443 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.891484 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.891487 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.891527 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.891531 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.891569 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.891574 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.891609 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.891614 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.891654 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.891659 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.891698 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.891702 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.891741 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.891746 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.891784 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.891788 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.891832 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.891837 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.891875 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.891880 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.891916 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.891920 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.891955 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.891960 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.891996 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.892000 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.892040 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.892043 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.892082 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.892086 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.892122 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.892127 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.892168 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.892174 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.892208 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.892213 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.892252 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.892256 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.892292 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.892297 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.892333 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.892336 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.892372 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.892376 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.892414 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.892418 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.892454 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.892458 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.892494 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.892498 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.892535 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.892539 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.892575 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.892580 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.892616 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.892621 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.892664 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.892669 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.892705 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.892709 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.892745 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.892750 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.892786 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.892791 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.892835 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.892840 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.892877 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.892882 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.892920 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.892923 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.892961 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.892966 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.893003 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.893007 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.893043 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.893049 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.893085 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.893088 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.893123 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.893128 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.893164 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.893168 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.893206 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.893210 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.893249 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.893253 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.893293 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.893297 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.893334 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.893339 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.893376 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.893380 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.893419 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.893422 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.893458 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.893463 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.893499 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.893503 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.893541 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.893545 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.893586 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.893591 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.893630 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.893633 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.893673 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.893678 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.893718 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.893721 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.893759 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.893764 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.893802 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.893812 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.893851 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.893854 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.893893 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.893895 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.893931 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.893934 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.893968 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.893973 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.894012 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.894017 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.894057 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.894062 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.894098 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.894104 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.894138 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.894142 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.894177 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.894182 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.894217 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.894222 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.894261 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.894266 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.894301 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.894306 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.894345 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.894351 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.894387 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.894392 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.894430 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.894434 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.894471 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.894475 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.894515 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.894520 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.894555 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.894560 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.894594 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.894599 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.894635 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.894639 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.894675 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.894680 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.894714 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.894718 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.894758 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.894763 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.894801 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.894810 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.894850 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.894852 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.894891 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.894894 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.894932 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.894935 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.894974 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.894979 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.895017 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.895022 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.895058 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.895062 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.895103 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.895108 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.895148 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.895152 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.895190 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.895195 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.895233 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.895238 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.895277 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.895282 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.895319 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.895324 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.895362 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.895365 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.895401 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.895406 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.895442 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.895447 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.895483 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.895488 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.895522 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.895527 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.895563 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.895567 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.895604 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.895608 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.895644 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.895649 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.895685 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.895690 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.895727 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.895731 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.895767 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.895772 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.895817 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.895823 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.895859 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.895864 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.895903 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.895908 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.895944 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.895949 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.895985 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.895990 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.896026 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.896031 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.896072 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.896076 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.896112 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.896117 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.896153 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.896158 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.896193 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.896198 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.896234 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.896237 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.896276 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.896281 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.896319 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.896324 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.896365 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.896369 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.896407 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.896412 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.896452 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.896457 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.896494 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.896499 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.896536 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.896541 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.896579 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.896584 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.896620 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.896623 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.896662 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.896667 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.896703 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.896708 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.896744 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.896749 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.896785 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.896790 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.896837 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.896842 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.896881 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.896886 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.896922 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.896926 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.896965 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.896970 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.897009 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.897014 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.897051 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.897055 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.897092 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.897097 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.897132 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.897136 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.897174 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.897179 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.897218 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.897223 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.897260 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.897265 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.897303 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.897308 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.897349 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.897353 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.897390 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.897394 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.897430 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.897435 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.897475 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.897480 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.897517 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.897522 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.897558 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.897563 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.897599 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.897603 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.897639 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.897643 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.897684 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.897689 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.897727 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.897732 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.897769 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.897774 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.897816 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.897822 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.897866 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.897869 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.897907 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.897912 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.897949 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.897954 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.897994 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.897997 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.898033 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.898037 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.898077 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.898082 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.898118 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.898123 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.898164 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.898167 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.898206 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.898211 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.898249 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.898254 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.898289 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.898294 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.898337 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.898341 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.898386 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.898389 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.898428 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.898432 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.898468 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.898473 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.898509 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.898514 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.898555 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.898559 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.898598 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.898602 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.898640 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.898644 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.898681 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.898685 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.898725 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.898730 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.898769 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.898774 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:32.898820 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:32.898825 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
[32m[2024-06-03 16:35:33,089] [    INFO][0m - global step: 5, epoch: 0, batch: 4, loss: 11.165440, avg_reader_cost: 0.00010 sec, avg_batch_cost: 0.33173 sec, avg_samples: 32.00000, ips: 96.46271 sequences/sec,  [0m
I0603 16:35:33.089689 76297 api.cc:28997] full_like API kernel key: [XPU, NCHW, int64]
I0603 16:35:33.089712 76297 api.cc:29004] full_like kernel: {"input":["Undefined, NCHW, int64"],"output":["XPU, NCHW, int64"],"attribute":["Scalar","DataType"]}
I0603 16:35:33.093336 76297 api.cc:26615] cumsum API kernel key: [XPU, NCHW, int64]
I0603 16:35:33.093344 76297 api.cc:26622] cumsum kernel: {"input":["XPU, NCHW, int64"],"output":["XPU, NCHW, int64"],"attribute":["Scalar","bool","bool","bool"]}
I0603 16:35:33.093463 76297 api.cc:33948] subtract API kernel key: [XPU, NCHW, int64]
I0603 16:35:33.093472 76297 api.cc:33955] subtract kernel: {"input":["XPU, NCHW, int64","XPU, NCHW, int64"],"output":["XPU, NCHW, int64"],"attribute":[]}
I0603 16:35:33.093603 76297 api.cc:27476] embedding API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.093611 76297 api.cc:27483] embedding kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["int64_t"]}
I0603 16:35:33.093742 76297 api.cc:27476] embedding API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.093747 76297 api.cc:27483] embedding kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["int64_t"]}
I0603 16:35:33.095127 76297 api.cc:27476] embedding API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.095132 76297 api.cc:27483] embedding kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["int64_t"]}
I0603 16:35:33.097398 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.097407 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.097437 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.097466 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.097510 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.097517 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:33.097574 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.097580 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:33.098599 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.098608 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.098667 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.098673 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.098718 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.098726 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:33.098729 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:33.098747 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.098750 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:33.098784 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.098788 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.098834 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.098882 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.098915 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.098920 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.098953 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.098958 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.098984 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.098989 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:33.098994 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:33.099001 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.099004 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:33.099025 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.099027 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:33.099030 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:33.099037 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.099040 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:33.099066 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.099071 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:33.099093 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.099098 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.099131 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.099136 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.099161 76297 api.cc:33484] softmax API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.099167 76297 api.cc:33491] softmax kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["int"]}
I0603 16:35:33.099191 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.099196 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:33.101913 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.101918 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.101941 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.101974 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:33.101999 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.102003 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:33.102006 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:33.102025 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.102028 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.102061 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.102066 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.102104 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.102109 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:33.103099 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.103104 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.103143 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.103148 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:33.103189 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.103194 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.103228 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.103233 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.103261 76297 api.cc:9228] gelu API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.103267 76297 api.cc:9235] gelu kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool"]}
I0603 16:35:33.103338 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.103343 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.103374 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.103379 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.103410 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.103415 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:33.107126 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.107132 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.107168 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.107197 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:33.107259 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.107265 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.107299 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.107303 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.107337 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.107348 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:33.107352 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:33.107362 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.107365 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:33.107390 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.107395 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.107426 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.107431 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.107460 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.107465 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.107494 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.107499 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.107524 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.107529 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:33.107532 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:33.107540 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.107543 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:33.107563 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.107570 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:33.107573 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:33.107579 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.107581 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:33.107600 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.107604 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:33.107621 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.107623 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.107649 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.107652 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.107674 76297 api.cc:33484] softmax API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.107677 76297 api.cc:33491] softmax kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["int"]}
I0603 16:35:33.107699 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.107702 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:33.111160 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.111166 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.111187 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.111192 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:33.111217 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.111222 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:33.111225 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:33.111243 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.111246 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.111280 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.111285 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.111320 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.111325 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:33.112344 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.112350 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.112385 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.112404 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:33.112442 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.112445 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.112478 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.112494 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.112517 76297 api.cc:9228] gelu API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.112520 76297 api.cc:9235] gelu kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool"]}
I0603 16:35:33.112586 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.112596 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.112627 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.112658 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.112685 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.112691 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:33.116401 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.116407 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.116444 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.116449 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:33.116510 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.116515 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.116552 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.116556 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.116587 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.116592 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:33.116595 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:33.116605 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.116608 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:33.116634 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.116639 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.116669 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.116673 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.116701 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.116705 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.116734 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.116739 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.116762 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.116767 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:33.116770 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:33.116778 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.116780 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:33.116801 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.116803 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:33.116818 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:33.116827 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.116828 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:33.116847 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.116850 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:33.116868 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.116873 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.116899 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.116905 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.116930 76297 api.cc:33484] softmax API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.116935 76297 api.cc:33491] softmax kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["int"]}
I0603 16:35:33.116962 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.116968 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:33.120435 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.120440 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.120463 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.120468 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:33.120491 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.120496 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:33.120498 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:33.120517 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.120519 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.120555 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.120560 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.120596 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.120615 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:33.121623 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.121626 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.121662 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.121667 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:33.121707 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.121711 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.121744 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.121750 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.121774 76297 api.cc:9228] gelu API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.121778 76297 api.cc:9235] gelu kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool"]}
I0603 16:35:33.121855 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.121860 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.121893 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.121898 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.121928 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.121933 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:33.125675 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.125680 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.125715 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.125735 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:33.125794 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.125800 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.125846 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.125851 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.125885 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.125890 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:33.125892 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:33.125905 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.125906 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:33.125931 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.125936 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.125968 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.125972 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.126000 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.126005 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.126034 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.126039 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.126065 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.126070 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:33.126072 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:33.126081 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.126083 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:33.126103 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.126107 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:33.126111 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:33.126117 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.126120 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:33.126139 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.126144 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:33.126163 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.126165 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.126191 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.126195 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.126219 76297 api.cc:33484] softmax API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.126224 76297 api.cc:33491] softmax kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["int"]}
I0603 16:35:33.126246 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.126251 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:33.129705 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.129710 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.129734 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.129767 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:33.129791 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.129797 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:33.129801 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:33.129882 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.129885 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.129920 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.129952 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.129988 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.129992 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:33.130883 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.130888 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.130921 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.130928 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:33.130965 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.130970 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.131004 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.131009 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.131033 76297 api.cc:9228] gelu API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.131038 76297 api.cc:9235] gelu kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool"]}
I0603 16:35:33.131105 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.131110 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.131143 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.131148 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.131176 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.131181 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:33.134935 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.134941 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.134977 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.134999 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:33.135058 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.135075 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.135113 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.135115 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.135146 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.135167 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:33.135170 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:33.135182 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.135185 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:33.135210 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.135214 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.135246 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.135274 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.135303 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.135308 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.135339 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.135342 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.135368 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.135372 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:33.135375 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:33.135385 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.135386 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:33.135406 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.135408 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:33.135411 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:33.135418 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.135421 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:33.135440 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.135447 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:33.135465 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.135468 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.135494 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.135499 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.135522 76297 api.cc:33484] softmax API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.135527 76297 api.cc:33491] softmax kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["int"]}
I0603 16:35:33.135548 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.135552 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:33.138990 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.138995 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.139019 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.139022 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:33.139045 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.139048 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:33.139051 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:33.139067 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.139070 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.139104 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.139107 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.139142 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.139145 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:33.140172 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.140177 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.140213 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.140241 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:33.140278 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.140282 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.140313 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.140318 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.140343 76297 api.cc:9228] gelu API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.140364 76297 api.cc:9235] gelu kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool"]}
I0603 16:35:33.140430 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.140434 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.140466 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.140471 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.140501 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.140506 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:33.144188 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.144193 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.144228 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.144250 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:33.144308 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.144315 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.144349 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.144353 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.144384 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.144390 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:33.144394 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:33.144404 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.144407 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:33.144433 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.144436 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.144467 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.144472 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.144501 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.144505 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.144536 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.144562 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.144587 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.144591 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:33.144594 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:33.144604 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.144606 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:33.144626 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.144629 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:33.144632 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:33.144639 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.144641 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:33.144661 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.144668 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:33.144687 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.144690 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.144713 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.144718 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.144742 76297 api.cc:33484] softmax API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.144745 76297 api.cc:33491] softmax kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["int"]}
I0603 16:35:33.144767 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.144773 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:33.148231 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.148236 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.148258 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.148262 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:33.148286 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.148291 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:33.148294 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:33.148310 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.148313 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.148347 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.148351 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.148386 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.148391 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:33.149415 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.149420 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.149453 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.149484 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:33.149523 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.149528 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.149559 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.149564 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.149590 76297 api.cc:9228] gelu API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.149595 76297 api.cc:9235] gelu kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool"]}
I0603 16:35:33.149660 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.149665 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.149696 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.149701 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.149731 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.149736 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:33.153466 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.153470 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.153507 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.153532 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:33.153590 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.153595 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.153631 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.153636 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.153668 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.153673 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:33.153676 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:33.153687 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.153689 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:33.153714 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.153717 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.153748 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.153751 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.153779 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.153781 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.153820 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.153825 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.153849 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.153854 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:33.153857 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:33.153867 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.153868 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:33.153888 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.153892 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:33.153894 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:33.153901 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.153904 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:33.153923 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.153926 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:33.153944 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.153947 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.153972 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.153976 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.153999 76297 api.cc:33484] softmax API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.154003 76297 api.cc:33491] softmax kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["int"]}
I0603 16:35:33.154029 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.154033 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:33.160312 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.160328 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.160385 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.160423 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:33.160475 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.160482 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:33.160485 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:33.160527 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.160533 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.160585 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.160596 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.160667 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.160676 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:33.161442 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.161445 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.161499 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.161509 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:33.161564 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.161569 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.161609 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.161614 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.161648 76297 api.cc:9228] gelu API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.161655 76297 api.cc:9235] gelu kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool"]}
I0603 16:35:33.161725 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.161731 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.161768 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.161773 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.161823 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.161834 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:33.165483 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.165489 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.165530 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.165535 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:33.165634 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.165640 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.165680 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.165688 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.165724 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.165729 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:33.165733 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:33.165748 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.165751 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:33.165778 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.165782 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.165846 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.165851 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.165884 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.165889 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.165923 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.165928 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.165956 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.165961 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:33.165964 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:33.165972 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.165975 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:33.165997 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.165999 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:33.166002 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:33.166013 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.166015 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:33.166049 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.166056 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:33.166077 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.166081 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.166118 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.166123 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.166152 76297 api.cc:33484] softmax API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.166159 76297 api.cc:33491] softmax kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["int"]}
I0603 16:35:33.166184 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.166189 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:33.169543 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.169548 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.169576 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.169600 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:33.169624 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.169629 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:33.169632 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:33.169651 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.169653 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.169689 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.169694 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.169729 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.169734 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:33.170728 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.170733 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.170780 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.170799 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:33.170861 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.170879 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.170917 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.170922 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.170953 76297 api.cc:9228] gelu API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.170958 76297 api.cc:9235] gelu kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool"]}
I0603 16:35:33.171025 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.171029 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.171065 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.171070 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.171101 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.171106 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:33.174783 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.174788 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.174835 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.174872 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:33.174944 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.174957 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.174995 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.175000 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.175037 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.175047 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:33.175050 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:33.175060 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.175063 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:33.175091 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.175096 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.175127 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.175132 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.175161 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.175165 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.175199 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.175204 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.175231 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.175236 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:33.175240 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:33.175249 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.175253 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:33.175272 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.175276 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:33.175278 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:33.175285 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.175288 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:33.175308 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.175311 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:33.175334 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.175338 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.175371 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.175376 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.175401 76297 api.cc:33484] softmax API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.175406 76297 api.cc:33491] softmax kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["int"]}
I0603 16:35:33.175428 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.175433 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:33.178788 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.178793 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.178831 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.178859 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:33.178884 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.178889 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:33.178892 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:33.178911 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.178913 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.178951 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.178956 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.178992 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.179020 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:33.179967 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.179973 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.180017 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.180022 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:33.180065 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.180070 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.180109 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.180114 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.180143 76297 api.cc:9228] gelu API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.180148 76297 api.cc:9235] gelu kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool"]}
I0603 16:35:33.180214 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.180218 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.180253 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.180258 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.180287 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.180292 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:33.184018 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.184024 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.184067 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.184077 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:33.184141 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.184146 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.184185 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.184190 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.184224 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.184229 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:33.184232 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:33.184243 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.184247 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:33.184274 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.184306 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.184341 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.184346 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.184381 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.184386 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.184419 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.184424 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.184455 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.184458 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:33.184463 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:33.184471 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.184474 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:33.184494 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.184497 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:33.184499 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:33.184509 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.184511 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:33.184532 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.184536 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:33.184554 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.184559 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.184593 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.184598 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.184624 76297 api.cc:33484] softmax API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.184628 76297 api.cc:33491] softmax kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["int"]}
I0603 16:35:33.184650 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.184654 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:33.188040 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.188045 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.188074 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.188079 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:33.188108 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.188112 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:33.188115 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:33.188133 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.188136 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.188174 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.188179 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.188221 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.188231 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:33.189219 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.189224 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.189266 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.189280 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:33.189321 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.189325 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.189359 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.189363 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.189399 76297 api.cc:9228] gelu API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.189404 76297 api.cc:9235] gelu kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool"]}
I0603 16:35:33.189471 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.189476 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.189508 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.189513 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.189551 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.189556 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:33.193236 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.193241 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.193277 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.193282 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:33.193346 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.193351 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.193388 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.193393 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.193428 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.193432 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:33.193435 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:33.193446 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.193449 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:33.193477 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.193480 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.193514 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.193519 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.193552 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.193557 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.193588 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.193593 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.193619 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.193624 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:33.193627 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:33.193636 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.193639 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:33.193660 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.193662 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:33.193665 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:33.193672 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.193675 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:33.193696 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.193698 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:33.193717 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.193727 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.193754 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.193758 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.193782 76297 api.cc:33484] softmax API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.193786 76297 api.cc:33491] softmax kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["int"]}
I0603 16:35:33.193825 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.193832 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:33.197280 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.197285 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.197311 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.197316 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:33.197340 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.197345 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:33.197348 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:33.197365 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.197367 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.197403 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.197419 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.197458 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.197463 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:33.198458 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.198463 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.198505 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.198516 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:33.198559 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.198565 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.198601 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.198606 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.198632 76297 api.cc:9228] gelu API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.198637 76297 api.cc:9235] gelu kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool"]}
I0603 16:35:33.198711 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.198716 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.198751 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.198756 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.198786 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.198792 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:33.202510 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.202515 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.202553 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.202558 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:33.202623 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.202628 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.202664 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.202678 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.202715 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.202718 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:33.202721 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:33.202731 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.202734 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:33.202760 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.202765 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.202796 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.202828 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.202860 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.202865 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.202896 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.202900 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.202929 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.202934 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:33.202936 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:33.202944 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.202947 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:33.202970 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.202975 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:33.202977 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:33.202984 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.202986 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:33.203006 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.203009 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:33.203027 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.203033 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.203065 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.203070 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.203094 76297 api.cc:33484] softmax API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.203099 76297 api.cc:33491] softmax kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["int"]}
I0603 16:35:33.203122 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.203126 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:33.206547 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.206550 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.206575 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.206614 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:33.206638 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.206665 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:33.206668 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:33.206684 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.206687 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.206722 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.206743 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.206777 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.206780 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:33.207732 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.207737 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.207773 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.207779 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:33.207893 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.207898 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.207934 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.207957 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.207984 76297 api.cc:9228] gelu API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.207990 76297 api.cc:9235] gelu kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool"]}
I0603 16:35:33.208058 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.208063 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.208096 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.208101 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.208129 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.208134 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:33.211760 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.211766 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.211800 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.211835 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:33.211935 76297 api.cc:33407] slice API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.211943 76297 api.cc:33414] slice kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int64_t>","IntArray","IntArray","vector<int64_t>","vector<int64_t>"]}
I0603 16:35:33.211998 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.212003 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.212044 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.212050 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.212091 76297 api.cc:22807] tanh API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.212103 76297 api.cc:22814] tanh kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":[]}
I0603 16:35:33.212149 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.212154 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:33.212157 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:33.212172 76297 api.cc:29470] gather API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.212177 76297 api.cc:29477] gather kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar"]}
I0603 16:35:33.212211 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.212215 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.212944 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.212951 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.212980 76297 api.cc:9228] gelu API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.212985 76297 api.cc:9235] gelu kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool"]}
I0603 16:35:33.213021 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.213027 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:33.213083 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.213088 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:33.213115 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.213120 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.213420 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.213426 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.213460 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.213465 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.213498 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.213503 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.213630 76297 api.cc:28638] full API kernel key: [XPU, Undefined(AnyLayout), int64]
I0603 16:35:33.213640 76297 api.cc:28645] full kernel: {"input":[],"output":["XPU, NCHW, int64"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:33.213662 76297 api.cc:31621] not_equal API kernel key: [XPU, NCHW, int64]
I0603 16:35:33.213670 76297 api.cc:31628] not_equal kernel: {"input":["XPU, NCHW, int64","XPU, NCHW, int64"],"output":["XPU, NCHW, bool"],"attribute":[]}
I0603 16:35:33.213702 76297 api.cc:26250] cast API kernel key: [XPU, NCHW, bool]
I0603 16:35:33.213711 76297 api.cc:26257] cast kernel: {"input":["XPU, NCHW, bool"],"output":["XPU, NCHW, Undefined"],"attribute":["DataType"]}
I0603 16:35:33.213732 76297 api.cc:31270] multiply API kernel key: [XPU, NCHW, int64]
I0603 16:35:33.213740 76297 api.cc:31277] multiply kernel: {"input":["XPU, NCHW, int64","XPU, NCHW, int64"],"output":["XPU, NCHW, int64"],"attribute":[]}
I0603 16:35:33.213789 76297 api.cc:5746] cross_entropy_with_softmax API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.213798 76297 api.cc:5753] cross_entropy_with_softmax kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["bool","bool","bool","int","int"]}
I0603 16:35:33.213915 76297 api.cc:27087] divide API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.213923 76297 api.cc:27094] divide kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.213956 76297 api.cc:28638] full API kernel key: [XPU, Undefined(AnyLayout), int64]
I0603 16:35:33.213961 76297 api.cc:28645] full kernel: {"input":[],"output":["XPU, NCHW, int64"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:33.213977 76297 api.cc:31621] not_equal API kernel key: [XPU, NCHW, int64]
I0603 16:35:33.213980 76297 api.cc:31628] not_equal kernel: {"input":["XPU, NCHW, int64","XPU, NCHW, int64"],"output":["XPU, NCHW, bool"],"attribute":[]}
I0603 16:35:33.214002 76297 api.cc:26250] cast API kernel key: [XPU, NCHW, bool]
I0603 16:35:33.214007 76297 api.cc:26257] cast kernel: {"input":["XPU, NCHW, bool"],"output":["XPU, NCHW, Undefined"],"attribute":["DataType"]}
I0603 16:35:33.214025 76297 api.cc:31270] multiply API kernel key: [XPU, NCHW, int64]
I0603 16:35:33.214030 76297 api.cc:31277] multiply kernel: {"input":["XPU, NCHW, int64","XPU, NCHW, int64"],"output":["XPU, NCHW, int64"],"attribute":[]}
I0603 16:35:33.214062 76297 api.cc:5746] cross_entropy_with_softmax API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.214067 76297 api.cc:5753] cross_entropy_with_softmax kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["bool","bool","bool","int","int"]}
I0603 16:35:33.214120 76297 api.cc:34100] sum API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.214128 76297 api.cc:34107] sum kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, Undefined"],"attribute":["IntArray","DataType","bool"]}
I0603 16:35:33.214159 76297 api.cc:30971] mean API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.214167 76297 api.cc:30978] mean kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["IntArray","bool"]}
I0603 16:35:33.214190 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.214193 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.214947 76297 api.cc:28638] full API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:33.214959 76297 api.cc:28645] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:33.218175 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.218189 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:33.218971 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.218979 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:33.219696 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.219703 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:33.220417 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.220423 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:33.221107 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.221114 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:33.221843 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.221848 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:33.222595 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.222602 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:33.223373 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.223381 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:33.224139 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.224146 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:33.224900 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.224907 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:33.225636 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.225643 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:33.226410 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.226418 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:33.227464 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.227478 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:33.227614 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.227624 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.227674 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.227679 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.227718 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.227722 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.227761 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.227766 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.227813 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.227845 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.227886 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.227891 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.227929 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.227933 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.227969 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.227974 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.228009 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.228014 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.228049 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.228055 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.228096 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.228099 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.228138 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.228142 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.228180 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.228185 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.228222 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.228227 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.228263 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.228267 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.228302 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.228307 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.228343 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.228346 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.228384 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.228387 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.228425 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.228428 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.228469 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.228474 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.228513 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.228518 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.228559 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.228562 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.228601 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.228605 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.228643 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.228648 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.228684 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.228689 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.228724 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.228729 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.228770 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.228775 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.228816 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.228818 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.228854 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.228857 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.228893 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.228899 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.228937 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.228942 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.228977 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.228982 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.229019 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.229024 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.229060 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.229064 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.229100 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.229104 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.229143 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.229147 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.229187 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.229192 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.229229 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.229234 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.229270 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.229274 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.229311 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.229315 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.229353 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.229358 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.229395 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.229399 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.229437 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.229441 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.229475 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.229480 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.229516 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.229521 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.229557 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.229561 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.229598 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.229602 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.229638 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.229643 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.229683 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.229687 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.229727 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.229732 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.229771 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.229776 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.229818 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.229827 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.229866 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.229871 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.229908 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.229912 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.229948 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.229954 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.229991 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.229995 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.230034 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.230038 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.230075 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.230080 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.230118 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.230122 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.230157 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.230162 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.230201 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.230204 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.230240 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.230245 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.230283 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.230288 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.230321 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.230326 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.230363 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.230367 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.230404 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.230409 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.230444 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.230449 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.230484 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.230489 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.230525 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.230530 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.230566 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.230569 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.230604 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.230608 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.230644 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.230649 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.230684 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.230690 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.230723 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.230727 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.230762 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.230767 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.230803 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.230813 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.230851 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.230856 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.230891 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.230896 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.230932 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.230937 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.230978 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.230983 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.231021 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.231025 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.231063 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.231068 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.231104 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.231108 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.231145 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.231149 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.231190 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.231194 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.231235 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.231238 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.231277 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.231282 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.231319 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.231323 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.231362 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.231366 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.231403 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.231407 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.231444 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.231449 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.231485 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.231490 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.231526 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.231531 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.231571 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.231575 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.231611 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.231616 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.231657 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.231662 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.231698 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.231702 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.231738 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.231742 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.231781 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.231786 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.231825 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.231829 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.231864 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.231869 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.231906 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.231910 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.231948 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.231952 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.231988 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.231992 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.232028 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.232033 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.232069 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.232074 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.232113 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.232117 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.232156 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.232160 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.232200 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.232204 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.232242 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.232246 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.232282 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.232286 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.232323 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.232327 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.232362 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.232367 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.232405 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.232409 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.232447 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.232451 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.232487 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.232492 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.232529 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.232534 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.232569 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.232574 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.232616 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.232620 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.232659 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.232664 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.232702 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.232707 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.232743 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.232748 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.232785 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.232789 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.232833 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.232838 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.232875 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.232880 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.232918 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.232923 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.232959 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.232964 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.233002 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.233007 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.233047 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.233052 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.233091 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.233095 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.233135 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.233140 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.233176 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.233181 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.233215 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.233220 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.233261 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.233265 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.233307 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.233312 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.233350 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.233353 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.233390 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.233394 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.233430 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.233434 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.233470 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.233474 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.233510 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.233515 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.233551 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.233556 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.233592 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.233595 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.233630 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.233634 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.233675 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.233678 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.233716 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.233719 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.233757 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.233762 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.233801 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.233814 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.233852 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.233857 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.233891 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.233896 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.233933 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.233938 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.233975 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.233980 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.234017 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.234022 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.234058 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.234062 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.234098 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.234102 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.234139 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.234143 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.234181 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.234185 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.234225 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.234228 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.234264 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.234269 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.234304 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.234309 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.234345 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.234349 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.234385 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.234390 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.234427 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.234431 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.234473 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.234478 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.234515 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.234520 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.234557 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.234561 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.234603 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.234607 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.234647 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.234652 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.234690 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.234694 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.234733 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.234738 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.234776 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.234781 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.234823 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.234826 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.234866 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.234871 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.234910 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.234915 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.234954 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.234959 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.235002 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.235005 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.235042 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.235047 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.235082 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.235087 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.235126 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.235131 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.235169 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.235173 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.235211 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.235215 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.235258 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.235262 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.235299 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.235303 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.235340 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.235345 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.235383 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.235388 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.235424 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.235428 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.235464 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.235468 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.235508 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.235512 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.235549 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.235554 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.235592 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.235596 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.235636 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.235641 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.235679 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.235683 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.235720 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.235725 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.235761 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.235765 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.235803 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.235813 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.235852 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.235857 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.235893 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.235898 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.235934 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.235939 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.235976 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.235981 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.236018 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.236022 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.236059 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.236063 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.236102 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.236107 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.236146 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.236150 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.236188 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.236193 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.236229 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.236233 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.236271 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.236275 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.236310 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.236315 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
[32m[2024-06-03 16:35:33,430] [    INFO][0m - global step: 6, epoch: 0, batch: 5, loss: 11.215268, avg_reader_cost: 0.00010 sec, avg_batch_cost: 0.34101 sec, avg_samples: 32.00000, ips: 93.83972 sequences/sec,  [0m
I0603 16:35:33.431278 76297 api.cc:28997] full_like API kernel key: [XPU, NCHW, int64]
I0603 16:35:33.431306 76297 api.cc:29004] full_like kernel: {"input":["Undefined, NCHW, int64"],"output":["XPU, NCHW, int64"],"attribute":["Scalar","DataType"]}
I0603 16:35:33.431391 76297 api.cc:26615] cumsum API kernel key: [XPU, NCHW, int64]
I0603 16:35:33.431399 76297 api.cc:26622] cumsum kernel: {"input":["XPU, NCHW, int64"],"output":["XPU, NCHW, int64"],"attribute":["Scalar","bool","bool","bool"]}
I0603 16:35:33.431718 76297 api.cc:33948] subtract API kernel key: [XPU, NCHW, int64]
I0603 16:35:33.431727 76297 api.cc:33955] subtract kernel: {"input":["XPU, NCHW, int64","XPU, NCHW, int64"],"output":["XPU, NCHW, int64"],"attribute":[]}
I0603 16:35:33.431918 76297 api.cc:27476] embedding API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.431929 76297 api.cc:27483] embedding kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["int64_t"]}
I0603 16:35:33.432055 76297 api.cc:27476] embedding API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.432060 76297 api.cc:27483] embedding kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["int64_t"]}
I0603 16:35:33.432176 76297 api.cc:27476] embedding API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.432180 76297 api.cc:27483] embedding kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["int64_t"]}
I0603 16:35:33.432207 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.432215 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.432324 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.432329 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.432447 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.432454 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:33.432590 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.432597 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:33.433568 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.433575 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.433638 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.433645 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.433699 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.433705 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:33.433709 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:33.433831 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.433837 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:33.433982 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.433987 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.434023 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.434028 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.434119 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.434123 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.434155 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.434160 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.434231 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.434237 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:33.434240 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:33.434259 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.434262 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:33.434383 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.434387 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:33.434391 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:33.434489 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.434494 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:33.434530 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.434536 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:33.434625 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.434630 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.434767 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.434772 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.434906 76297 api.cc:33484] softmax API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.434912 76297 api.cc:33491] softmax kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["int"]}
I0603 16:35:33.435024 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.435030 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:33.438731 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.438737 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.438766 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.438802 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:33.438838 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.438843 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:33.438848 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:33.438871 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.438875 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.438913 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.438925 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.438964 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.438970 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:33.439652 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.439657 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.439698 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.439704 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:33.439749 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.439754 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.439787 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.439792 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.439831 76297 api.cc:9228] gelu API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.439839 76297 api.cc:9235] gelu kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool"]}
I0603 16:35:33.439910 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.439914 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.439949 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.439952 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.439985 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.439990 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:33.443696 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.443702 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.443743 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.443749 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:33.443835 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.443842 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.443881 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.443884 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.443919 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.443925 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:33.443928 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:33.443940 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.443943 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:33.443970 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.443975 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.444008 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.444012 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.444043 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.444065 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.444096 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.444101 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.444126 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.444131 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:33.444134 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:33.444142 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.444144 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:33.444166 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.444168 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:33.444171 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:33.444177 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.444180 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:33.444201 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.444204 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:33.444223 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.444229 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.444260 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.444265 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.444293 76297 api.cc:33484] softmax API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.444296 76297 api.cc:33491] softmax kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["int"]}
I0603 16:35:33.444319 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.444324 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:33.447726 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.447731 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.447755 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.447788 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:33.447827 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.447831 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:33.447834 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:33.447855 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.447858 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.447892 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.447899 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.447938 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.447944 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:33.448911 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.448917 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.448954 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.448978 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:33.449018 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.449023 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.449057 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.449062 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.449086 76297 api.cc:9228] gelu API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.449091 76297 api.cc:9235] gelu kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool"]}
I0603 16:35:33.449157 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.449162 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.449191 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.449196 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.449227 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.449232 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:33.452962 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.452968 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.453011 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.453017 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:33.453083 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.453088 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.453125 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.453130 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.453163 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.453168 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:33.453171 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:33.453181 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.453184 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:33.453212 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.453217 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.453246 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.453251 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.453280 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.453285 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.453315 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.453320 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.453346 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.453351 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:33.453353 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:33.453361 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.453364 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:33.453384 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.453387 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:33.453389 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:33.453397 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.453398 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:33.453419 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.453423 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:33.453440 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.453447 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.453472 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.453477 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.453500 76297 api.cc:33484] softmax API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.453505 76297 api.cc:33491] softmax kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["int"]}
I0603 16:35:33.453527 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.453532 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:33.457015 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.457021 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.457046 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.457052 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:33.457077 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.457082 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:33.457084 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:33.457103 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.457105 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.457139 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.457142 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.457177 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.457183 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:33.458192 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.458199 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.458236 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.458241 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:33.458281 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.458285 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.458317 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.458323 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.458348 76297 api.cc:9228] gelu API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.458352 76297 api.cc:9235] gelu kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool"]}
I0603 16:35:33.458420 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.458423 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.458454 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.458459 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.458489 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.458494 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:33.462244 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.462249 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.462289 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.462294 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:33.462360 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.462366 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.462401 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.462405 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.462438 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.462442 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:33.462446 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:33.462457 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.462460 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:33.462486 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.462530 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.462563 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.462566 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.462594 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.462599 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.462628 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.462633 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.462661 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.462666 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:33.462668 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:33.462677 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.462679 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:33.462699 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.462702 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:33.462705 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:33.462713 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.462716 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:33.462735 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.462738 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:33.462755 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.462762 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.462790 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.462795 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.462837 76297 api.cc:33484] softmax API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.462842 76297 api.cc:33491] softmax kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["int"]}
I0603 16:35:33.462863 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.462868 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:33.466297 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.466303 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.466326 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.466331 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:33.466356 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.466389 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:33.466392 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:33.466413 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.466415 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.466449 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.466454 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.466491 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.466496 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:33.467480 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.467485 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.467521 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.467526 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:33.467567 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.467571 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.467603 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.467608 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.467633 76297 api.cc:9228] gelu API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.467638 76297 api.cc:9235] gelu kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool"]}
I0603 16:35:33.467705 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.467710 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.467741 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.467746 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.467775 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.467782 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:33.471529 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.471537 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.471578 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.471601 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:33.471664 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.471669 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.471706 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.471711 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.471745 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.471750 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:33.471752 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:33.471763 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.471766 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:33.471792 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.471832 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.471865 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.471870 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.471901 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.471905 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.471936 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.471941 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.471966 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.471971 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:33.471974 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:33.471982 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.471984 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:33.472005 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.472008 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:33.472011 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:33.472018 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.472020 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:33.472040 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.472045 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:33.472064 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.472067 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.472101 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.472106 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.472131 76297 api.cc:33484] softmax API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.472134 76297 api.cc:33491] softmax kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["int"]}
I0603 16:35:33.472157 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.472162 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:33.475579 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.475585 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.475607 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.475612 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:33.475637 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.475667 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:33.475670 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:33.475688 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.475692 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.475725 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.475730 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.475767 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.475772 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:33.476764 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.476770 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.476819 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.476833 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:33.476876 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.476881 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.476914 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.476918 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.476946 76297 api.cc:9228] gelu API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.476951 76297 api.cc:9235] gelu kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool"]}
I0603 16:35:33.477017 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.477022 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.477054 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.477058 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.477090 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.477095 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:33.480778 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.480784 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.480830 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.480835 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:33.480902 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.480907 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.480943 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.480948 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.480980 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.480985 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:33.480988 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:33.481000 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.481003 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:33.481029 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.481034 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.481066 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.481070 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.481099 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.481104 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.481134 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.481139 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.481163 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.481168 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:33.481171 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:33.481179 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.481182 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:33.481202 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.481205 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:33.481209 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:33.481215 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.481218 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:33.481238 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.481241 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:33.481261 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.481262 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.481290 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.481295 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.481318 76297 api.cc:33484] softmax API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.481323 76297 api.cc:33491] softmax kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["int"]}
I0603 16:35:33.481351 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.481356 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:33.484833 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.484840 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.484864 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.484870 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:33.484896 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.484900 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:33.484903 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:33.484921 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.484925 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.484961 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.484966 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.485003 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.485008 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:33.486022 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.486027 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.486064 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.486070 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:33.486109 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.486129 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.486162 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.486167 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.486194 76297 api.cc:9228] gelu API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.486199 76297 api.cc:9235] gelu kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool"]}
I0603 16:35:33.486266 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.486271 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.486302 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.486308 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.486337 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.486342 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:33.490041 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.490048 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.490089 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.490094 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:33.490159 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.490164 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.490199 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.490204 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.490236 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.490242 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:33.490244 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:33.490255 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.490258 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:33.490285 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.490290 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.490321 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.490326 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.490355 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.490360 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.490391 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.490394 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.490420 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.490425 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:33.490428 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:33.490437 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.490438 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:33.490459 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.490463 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:33.490464 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:33.490473 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.490475 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:33.490496 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.490499 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:33.490518 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.490523 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.490547 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.490552 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.490574 76297 api.cc:33484] softmax API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.490579 76297 api.cc:33491] softmax kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["int"]}
I0603 16:35:33.490604 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.490609 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:33.494087 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.494093 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.494117 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.494120 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:33.494143 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.494145 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:33.494148 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:33.494164 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.494167 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.494201 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.494206 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.494243 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.494248 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:33.495278 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.495285 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.495321 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.495345 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:33.495384 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.495389 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.495421 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.495426 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.495451 76297 api.cc:9228] gelu API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.495456 76297 api.cc:9235] gelu kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool"]}
I0603 16:35:33.495523 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.495528 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.495559 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.495564 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.495594 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.495599 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:33.499334 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.499341 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.499382 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.499387 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:33.499454 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.499460 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.499495 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.499505 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.499538 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.499542 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:33.499547 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:33.499557 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.499559 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:33.499586 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.499590 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.499622 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.499635 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.499665 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.499670 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.499701 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.499704 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.499732 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.499737 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:33.499739 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:33.499748 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.499750 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:33.499771 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.499774 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:33.499778 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:33.499784 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.499787 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:33.499819 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.499822 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:33.499841 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.499845 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.499871 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.499876 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.499902 76297 api.cc:33484] softmax API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.499907 76297 api.cc:33491] softmax kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["int"]}
I0603 16:35:33.499927 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.499931 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:33.503369 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.503376 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.503396 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.503401 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:33.503425 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.503455 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:33.503458 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:33.503475 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.503479 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.503513 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.503518 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.503554 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.503561 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:33.504551 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.504557 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.504595 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.504619 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:33.504659 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.504664 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.504696 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.504700 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.504726 76297 api.cc:9228] gelu API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.504731 76297 api.cc:9235] gelu kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool"]}
I0603 16:35:33.504798 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.504802 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.504846 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.504851 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.504881 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.504887 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:33.508591 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.508596 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.508633 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.508651 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:33.508716 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.508723 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.508757 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.508762 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.508795 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.508800 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:33.508802 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:33.508822 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.508826 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:33.508853 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.508857 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.508888 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.508893 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.508922 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.508927 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.508958 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.508962 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.508987 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.508992 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:33.508996 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:33.509004 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.509006 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:33.509027 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.509035 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:33.509038 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:33.509045 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.509048 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:33.509069 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.509075 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:33.509093 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.509099 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.509125 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.509130 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.509159 76297 api.cc:33484] softmax API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.509164 76297 api.cc:33491] softmax kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["int"]}
I0603 16:35:33.509186 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.509191 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:33.512601 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.512607 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.512629 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.512668 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:33.512691 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.512696 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:33.512699 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:33.512717 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.512720 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.512754 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.512759 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.512797 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.512802 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:33.513784 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.513789 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.513833 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.513839 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:33.513880 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.513885 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.513919 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.513923 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.513949 76297 api.cc:9228] gelu API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.513953 76297 api.cc:9235] gelu kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool"]}
I0603 16:35:33.514019 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.514024 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.514055 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.514060 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.514091 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.514096 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:33.517818 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.517824 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.517861 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.517866 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:33.517932 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.517937 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.517974 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.517978 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.518011 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.518035 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:33.518038 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:33.518049 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.518051 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:33.518078 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.518081 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.518113 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.518118 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.518149 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.518153 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.518184 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.518189 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.518215 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.518219 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:33.518222 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:33.518231 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.518234 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:33.518253 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.518258 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:33.518261 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:33.518270 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.518271 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:33.518292 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.518296 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:33.518313 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.518316 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.518342 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.518347 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.518373 76297 api.cc:33484] softmax API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.518378 76297 api.cc:33491] softmax kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["int"]}
I0603 16:35:33.518400 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.518405 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:33.521827 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.521833 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.521854 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.521859 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:33.521883 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.521922 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:33.521925 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:33.521941 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.521944 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.521978 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.521982 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.522018 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.522023 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:33.523010 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.523015 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.523051 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.523057 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:33.523095 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.523099 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.523133 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.523136 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.523161 76297 api.cc:9228] gelu API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.523166 76297 api.cc:9235] gelu kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool"]}
I0603 16:35:33.523233 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.523238 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.523270 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.523275 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.523304 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.523309 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:33.527045 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.527052 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.527088 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.527107 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:33.527172 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.527177 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.527213 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.527218 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.527249 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.527254 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:33.527257 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:33.527267 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.527271 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:33.527295 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.527300 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.527331 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.527335 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.527362 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.527367 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.527397 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.527402 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.527426 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.527431 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:33.527434 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:33.527442 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.527446 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:33.527464 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.527467 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:33.527470 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:33.527477 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.527479 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:33.527499 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.527503 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:33.527521 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.527525 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.527550 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.527555 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.527577 76297 api.cc:33484] softmax API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.527581 76297 api.cc:33491] softmax kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["int"]}
I0603 16:35:33.527606 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.527611 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:33.531103 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.531109 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.531132 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.531136 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:33.531159 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.531163 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:33.531167 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:33.531183 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.531185 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.531219 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.531222 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.531256 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.531261 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:33.532289 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.532294 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.532332 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.532337 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:33.532377 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.532382 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.532414 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.532419 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.532444 76297 api.cc:9228] gelu API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.532447 76297 api.cc:9235] gelu kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool"]}
I0603 16:35:33.532513 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.532518 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.532550 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.532557 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.532586 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.532591 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:33.536342 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.536347 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.536383 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.536409 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:33.536469 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.536475 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.536510 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.536514 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.536545 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.536550 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:33.536553 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:33.536563 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.536566 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:33.536592 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.536629 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.536660 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.536665 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.536693 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.536697 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.536728 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.536733 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.536757 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.536762 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:33.536765 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:33.536772 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.536775 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:33.536795 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.536798 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:33.536801 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:33.536825 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.536829 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:33.536854 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.536857 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:33.536876 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.536881 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.536916 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.536921 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.536945 76297 api.cc:33484] softmax API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.536950 76297 api.cc:33491] softmax kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["int"]}
I0603 16:35:33.536973 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.536978 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:33.540369 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.540375 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.540398 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.540403 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:33.540427 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.540431 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:33.540434 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:33.540452 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.540455 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.540490 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.540495 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.540530 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.540535 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:33.541556 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.541561 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.541599 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.541604 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:33.541643 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.541647 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.541682 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.541687 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.541713 76297 api.cc:9228] gelu API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.541718 76297 api.cc:9235] gelu kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool"]}
I0603 16:35:33.541786 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.541790 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.541841 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.541846 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.541877 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.541882 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:33.545573 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.545579 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.545615 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.545621 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:33.545711 76297 api.cc:33407] slice API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.545717 76297 api.cc:33414] slice kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int64_t>","IntArray","IntArray","vector<int64_t>","vector<int64_t>"]}
I0603 16:35:33.545759 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.545764 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.545801 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.545817 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.545853 76297 api.cc:22807] tanh API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.545861 76297 api.cc:22814] tanh kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":[]}
I0603 16:35:33.545902 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.545912 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:33.545917 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:33.545929 76297 api.cc:29470] gather API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.545933 76297 api.cc:29477] gather kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar"]}
I0603 16:35:33.545964 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.545967 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.546653 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.546659 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.546687 76297 api.cc:9228] gelu API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.546691 76297 api.cc:9235] gelu kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool"]}
I0603 16:35:33.546723 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.546729 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:33.546777 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.546782 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:33.546818 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.546824 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.547133 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.547140 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.547176 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.547181 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.547215 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.547220 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.547344 76297 api.cc:28638] full API kernel key: [XPU, Undefined(AnyLayout), int64]
I0603 16:35:33.547353 76297 api.cc:28645] full kernel: {"input":[],"output":["XPU, NCHW, int64"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:33.547374 76297 api.cc:31621] not_equal API kernel key: [XPU, NCHW, int64]
I0603 16:35:33.547380 76297 api.cc:31628] not_equal kernel: {"input":["XPU, NCHW, int64","XPU, NCHW, int64"],"output":["XPU, NCHW, bool"],"attribute":[]}
I0603 16:35:33.547413 76297 api.cc:26250] cast API kernel key: [XPU, NCHW, bool]
I0603 16:35:33.547420 76297 api.cc:26257] cast kernel: {"input":["XPU, NCHW, bool"],"output":["XPU, NCHW, Undefined"],"attribute":["DataType"]}
I0603 16:35:33.547442 76297 api.cc:31270] multiply API kernel key: [XPU, NCHW, int64]
I0603 16:35:33.547448 76297 api.cc:31277] multiply kernel: {"input":["XPU, NCHW, int64","XPU, NCHW, int64"],"output":["XPU, NCHW, int64"],"attribute":[]}
I0603 16:35:33.547497 76297 api.cc:5746] cross_entropy_with_softmax API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.547502 76297 api.cc:5753] cross_entropy_with_softmax kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["bool","bool","bool","int","int"]}
I0603 16:35:33.547609 76297 api.cc:27087] divide API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.547616 76297 api.cc:27094] divide kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.547643 76297 api.cc:28638] full API kernel key: [XPU, Undefined(AnyLayout), int64]
I0603 16:35:33.547648 76297 api.cc:28645] full kernel: {"input":[],"output":["XPU, NCHW, int64"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:33.547662 76297 api.cc:31621] not_equal API kernel key: [XPU, NCHW, int64]
I0603 16:35:33.547664 76297 api.cc:31628] not_equal kernel: {"input":["XPU, NCHW, int64","XPU, NCHW, int64"],"output":["XPU, NCHW, bool"],"attribute":[]}
I0603 16:35:33.547684 76297 api.cc:26250] cast API kernel key: [XPU, NCHW, bool]
I0603 16:35:33.547688 76297 api.cc:26257] cast kernel: {"input":["XPU, NCHW, bool"],"output":["XPU, NCHW, Undefined"],"attribute":["DataType"]}
I0603 16:35:33.547703 76297 api.cc:31270] multiply API kernel key: [XPU, NCHW, int64]
I0603 16:35:33.547708 76297 api.cc:31277] multiply kernel: {"input":["XPU, NCHW, int64","XPU, NCHW, int64"],"output":["XPU, NCHW, int64"],"attribute":[]}
I0603 16:35:33.547740 76297 api.cc:5746] cross_entropy_with_softmax API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.547744 76297 api.cc:5753] cross_entropy_with_softmax kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["bool","bool","bool","int","int"]}
I0603 16:35:33.547791 76297 api.cc:34100] sum API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.547796 76297 api.cc:34107] sum kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, Undefined"],"attribute":["IntArray","DataType","bool"]}
I0603 16:35:33.547833 76297 api.cc:30971] mean API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.547840 76297 api.cc:30978] mean kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["IntArray","bool"]}
I0603 16:35:33.547860 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.547866 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.548406 76297 api.cc:28638] full API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:33.548418 76297 api.cc:28645] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:33.551779 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.551792 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:33.552587 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.552594 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:33.553324 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.553331 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:33.554070 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.554077 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:33.554797 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.554803 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:33.555572 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.555578 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:33.556372 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.556381 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:33.557179 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.557188 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:33.557992 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.557999 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:33.558784 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.558791 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:33.559566 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.559572 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:33.560395 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.560402 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:33.561545 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.561560 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:33.561710 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.561718 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.561780 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.561786 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.561838 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.561843 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.561888 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.561892 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.561933 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.561939 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.561982 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.561986 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.562028 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.562033 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.562074 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.562079 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.562120 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.562126 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.562167 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.562172 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.562214 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.562219 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.562263 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.562268 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.562309 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.562314 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.562355 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.562361 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.562402 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.562407 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.562449 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.562453 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.562494 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.562498 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.562542 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.562547 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.562587 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.562592 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.562630 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.562635 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.562675 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.562680 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.562724 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.562728 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.562768 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.562773 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.562820 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.562834 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.562875 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.562880 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.562922 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.562927 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.562968 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.562973 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.563014 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.563019 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.563061 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.563066 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.563107 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.563112 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.563153 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.563158 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.563197 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.563202 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.563241 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.563246 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.563287 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.563292 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.563331 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.563336 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.563376 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.563380 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.563426 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.563431 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.563473 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.563477 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.563520 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.563524 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.563567 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.563572 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.563611 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.563616 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.563653 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.563657 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.563697 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.563702 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.563740 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.563745 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.563787 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.563792 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.563836 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.563841 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.563881 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.563885 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.563925 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.563928 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.563967 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.563972 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.564010 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.564015 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.564052 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.564057 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.564093 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.564098 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.564136 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.564139 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.564178 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.564182 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.564220 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.564224 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.564261 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.564266 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.564306 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.564311 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.564347 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.564352 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.564390 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.564395 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.564431 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.564436 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.564472 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.564476 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.564513 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.564518 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.564561 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.564565 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.564608 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.564613 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.564649 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.564653 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.564690 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.564695 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.564735 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.564740 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.564777 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.564782 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.564824 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.564828 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.564865 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.564870 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.564906 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.564911 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.564952 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.564957 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.565001 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.565004 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.565044 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.565048 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.565089 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.565093 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.565132 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.565137 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.565176 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.565181 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.565217 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.565220 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.565259 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.565263 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.565301 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.565306 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.565344 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.565349 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.565389 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.565394 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.565436 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.565441 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.565479 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.565483 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.565522 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.565527 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.565565 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.565569 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.565606 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.565610 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.565646 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.565651 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.565691 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.565696 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.565737 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.565740 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.565776 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.565780 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.565821 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.565826 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.565863 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.565867 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.565907 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.565912 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.565950 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.565954 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.565996 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.566000 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.566042 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.566046 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.566083 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.566088 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.566123 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.566128 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.566167 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.566172 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.566212 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.566217 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.566255 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.566260 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.566300 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.566304 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.566341 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.566346 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.566387 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.566392 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.566430 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.566435 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.566475 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.566480 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.566519 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.566522 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.566560 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.566563 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.566599 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.566603 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.566641 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.566645 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.566685 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.566689 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.566727 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.566731 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.566774 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.566778 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.566824 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.566828 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.566869 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.566874 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.566913 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.566918 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.566956 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.566962 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.567003 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.567008 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.567049 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.567054 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.567095 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.567099 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.567137 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.567142 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.567179 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.567184 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.567221 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.567225 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.567265 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.567270 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.567307 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.567312 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.567348 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.567353 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.567389 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.567394 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.567430 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.567435 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.567479 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.567484 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.567525 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.567530 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.567571 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.567575 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.567618 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.567622 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.567662 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.567665 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.567704 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.567709 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.567747 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.567751 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.567786 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.567791 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.567842 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.567845 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.567881 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.567888 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.567926 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.567931 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.567967 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.567972 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.568012 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.568017 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.568053 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.568058 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.568099 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.568104 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.568142 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.568147 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.568188 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.568192 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.568234 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.568238 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.568280 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.568285 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.568325 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.568331 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.568373 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.568377 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.568421 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.568425 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.568468 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.568473 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.568518 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.568522 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.568562 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.568567 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.568608 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.568614 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.568658 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.568663 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.568706 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.568710 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.568753 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.568756 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.568799 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.568807 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.568850 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.568854 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.568897 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.568902 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.568944 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.568949 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.568992 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.568996 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.569041 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.569046 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.569087 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.569090 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.569130 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.569135 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.569177 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.569181 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.569221 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.569226 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.569264 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.569268 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.569309 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.569314 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.569360 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.569363 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.569404 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.569408 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.569453 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.569456 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.569496 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.569501 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.569542 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.569546 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.569586 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.569591 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.569629 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.569633 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.569674 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.569677 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.569717 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.569721 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.569759 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.569763 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.569803 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.569813 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.569851 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.569856 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.569895 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.569900 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.569942 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.569947 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.569986 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.569991 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.570032 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.570037 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.570077 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.570082 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.570122 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.570127 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.570164 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.570169 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.570210 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.570214 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.570255 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.570259 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.570298 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.570302 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.570343 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.570346 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.570386 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.570391 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.570431 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.570436 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.570477 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.570480 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.570521 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.570526 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.570566 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.570571 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.570609 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.570614 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.570652 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.570657 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.570694 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.570698 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.570735 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.570740 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.570780 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.570785 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.570827 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.570832 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.570870 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.570875 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.570914 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.570919 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
[32m[2024-06-03 16:35:33,760] [    INFO][0m - global step: 7, epoch: 0, batch: 6, loss: 11.198040, avg_reader_cost: 0.00014 sec, avg_batch_cost: 0.32934 sec, avg_samples: 32.00000, ips: 97.16403 sequences/sec,  [0m
I0603 16:35:33.761029 76297 api.cc:28997] full_like API kernel key: [XPU, NCHW, int64]
I0603 16:35:33.761054 76297 api.cc:29004] full_like kernel: {"input":["Undefined, NCHW, int64"],"output":["XPU, NCHW, int64"],"attribute":["Scalar","DataType"]}
I0603 16:35:33.761109 76297 api.cc:26615] cumsum API kernel key: [XPU, NCHW, int64]
I0603 16:35:33.761116 76297 api.cc:26622] cumsum kernel: {"input":["XPU, NCHW, int64"],"output":["XPU, NCHW, int64"],"attribute":["Scalar","bool","bool","bool"]}
I0603 16:35:33.761381 76297 api.cc:33948] subtract API kernel key: [XPU, NCHW, int64]
I0603 16:35:33.761389 76297 api.cc:33955] subtract kernel: {"input":["XPU, NCHW, int64","XPU, NCHW, int64"],"output":["XPU, NCHW, int64"],"attribute":[]}
I0603 16:35:33.761543 76297 api.cc:27476] embedding API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.761549 76297 api.cc:27483] embedding kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["int64_t"]}
I0603 16:35:33.761665 76297 api.cc:27476] embedding API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.761669 76297 api.cc:27483] embedding kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["int64_t"]}
I0603 16:35:33.761699 76297 api.cc:27476] embedding API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.761704 76297 api.cc:27483] embedding kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["int64_t"]}
I0603 16:35:33.761833 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.761842 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.761926 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.761931 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.762063 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.762069 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:33.762193 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.762200 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:33.763150 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.763157 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.763219 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.763226 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.763283 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.763288 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:33.763293 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:33.763408 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.763414 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:33.763535 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.763540 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.763574 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.763579 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.763645 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.763650 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.763681 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.763686 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.763760 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.763767 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:33.763769 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:33.763789 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.763796 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:33.763947 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.763952 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:33.763955 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:33.764086 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.764091 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:33.764245 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.764251 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:33.764380 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.764385 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.764505 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.764511 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.764606 76297 api.cc:33484] softmax API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.764612 76297 api.cc:33491] softmax kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["int"]}
I0603 16:35:33.764642 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.764647 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:33.768493 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.768499 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.768522 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.768524 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:33.768554 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.768558 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:33.768563 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:33.768589 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.768625 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.768662 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.768666 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.768711 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.768719 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:33.769408 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.769413 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.769461 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.769488 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:33.769541 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.769565 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.769603 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.769616 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.769645 76297 api.cc:9228] gelu API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.769649 76297 api.cc:9235] gelu kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool"]}
I0603 16:35:33.769719 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.769724 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.769757 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.769760 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.769793 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.769798 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:33.773444 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.773450 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.773494 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.773504 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:33.773583 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.773591 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.773639 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.773656 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.773695 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.773699 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:33.773705 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:33.773720 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.773722 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:33.773751 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.773754 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.773792 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.773823 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.773864 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.773874 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.773908 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.773936 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.773965 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.773970 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:33.773973 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:33.773983 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.773985 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:33.774010 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.774013 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:33.774015 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:33.774021 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.774024 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:33.774044 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.774047 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:33.774066 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.774070 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.774099 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.774104 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.774128 76297 api.cc:33484] softmax API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.774133 76297 api.cc:33491] softmax kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["int"]}
I0603 16:35:33.774158 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.774163 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:33.777484 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.777489 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.777511 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.777542 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:33.777566 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.777588 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:33.777591 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:33.777609 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.777612 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.777647 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.777649 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.777685 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.777688 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:33.778667 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.778672 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.778707 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.778731 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:33.778771 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.778776 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.778820 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.778824 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.778849 76297 api.cc:9228] gelu API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.778852 76297 api.cc:9235] gelu kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool"]}
I0603 16:35:33.778919 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.778924 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.778956 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.778961 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.778992 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.778997 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:33.782716 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.782721 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.782760 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.782786 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:33.782881 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.782900 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.782946 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.782956 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.782989 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.783010 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:33.783015 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:33.783030 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.783033 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:33.783064 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.783067 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.783105 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.783110 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.783142 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.783145 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.783177 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.783180 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.783208 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.783213 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:33.783216 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:33.783226 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.783231 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:33.783252 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.783257 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:33.783260 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:33.783267 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.783269 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:33.783295 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.783301 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:33.783326 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.783330 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.783361 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.783366 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.783390 76297 api.cc:33484] softmax API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.783396 76297 api.cc:33491] softmax kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["int"]}
I0603 16:35:33.783419 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.783425 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:33.786754 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.786760 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.786783 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.786831 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:33.786856 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.786859 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:33.786862 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:33.786880 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.786883 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.786918 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.786942 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.786978 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.786993 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:33.787932 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.787937 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.787976 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.787984 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:33.788028 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.788031 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.788065 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.788069 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.788093 76297 api.cc:9228] gelu API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.788098 76297 api.cc:9235] gelu kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool"]}
I0603 16:35:33.788165 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.788170 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.788204 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.788209 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.788239 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.788245 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:33.791949 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.791955 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.791994 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.792011 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:33.792088 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.792096 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.792140 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.792171 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.792204 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.792234 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:33.792239 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:33.792253 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.792255 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:33.792284 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.792289 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.792326 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.792330 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.792364 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.792369 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.792407 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.792409 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.792436 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.792461 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:33.792464 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:33.792474 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.792477 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:33.792498 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.792501 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:33.792505 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:33.792512 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.792516 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:33.792542 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.792567 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:33.792588 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.792593 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.792623 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.792629 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.792654 76297 api.cc:33484] softmax API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.792658 76297 api.cc:33491] softmax kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["int"]}
I0603 16:35:33.792680 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.792685 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:33.795985 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.795990 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.796015 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.796044 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:33.796069 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.796092 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:33.796094 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:33.796111 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.796114 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.796149 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.796152 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.796188 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.796203 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:33.797169 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.797174 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.797210 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.797215 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:33.797258 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.797274 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.797307 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.797312 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.797336 76297 api.cc:9228] gelu API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.797341 76297 api.cc:9235] gelu kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool"]}
I0603 16:35:33.797415 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.797421 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.797458 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.797463 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.797495 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.797500 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:33.801265 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.801271 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.801307 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.801331 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:33.801391 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.801398 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.801434 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.801438 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.801470 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.801482 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:33.801486 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:33.801498 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.801501 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:33.801527 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.801532 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.801563 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.801576 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.801604 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.801609 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.801640 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.801645 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.801669 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.801674 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:33.801677 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:33.801687 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.801688 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:33.801712 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.801715 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:33.801719 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:33.801729 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.801733 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:33.801756 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.801759 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:33.801776 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.801779 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.801865 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.801869 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.801896 76297 api.cc:33484] softmax API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.801899 76297 api.cc:33491] softmax kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["int"]}
I0603 16:35:33.801921 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.801924 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:33.805301 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.805307 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.805330 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.805362 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:33.805387 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.805409 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:33.805413 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:33.805430 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.805433 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.805467 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.805474 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.805511 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.805516 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:33.806486 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.806491 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.806527 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.806545 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:33.806583 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.806594 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.806628 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.806633 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.806658 76297 api.cc:9228] gelu API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.806663 76297 api.cc:9235] gelu kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool"]}
I0603 16:35:33.806730 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.806736 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.806774 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.806779 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.806823 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.806829 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:33.810541 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.810547 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.810586 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.810599 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:33.810659 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.810665 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.810703 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.810709 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.810742 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.810755 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:33.810757 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:33.810770 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.810771 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:33.810797 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.810801 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.810851 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.810871 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.810902 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.810923 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.810959 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.810964 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.810992 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.810995 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:33.810998 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:33.811009 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.811013 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:33.811038 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.811043 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:33.811044 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:33.811053 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.811055 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:33.811075 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.811077 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:33.811103 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.811105 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.811134 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.811137 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.811161 76297 api.cc:33484] softmax API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.811163 76297 api.cc:33491] softmax kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["int"]}
I0603 16:35:33.811184 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.811187 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:33.814579 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.814584 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.814607 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.814637 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:33.814661 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.814683 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:33.814687 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:33.814703 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.814707 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.814741 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.814744 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.814779 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.814783 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:33.815768 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.815774 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.815821 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.815841 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:33.815882 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.815896 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.815927 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.815944 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.815971 76297 api.cc:9228] gelu API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.815991 76297 api.cc:9235] gelu kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool"]}
I0603 16:35:33.816057 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.816063 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.816093 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.816098 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.816128 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.816133 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:33.819799 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.819813 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.819849 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.819852 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:33.819919 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.819931 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.819970 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.819980 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.820020 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.820024 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:33.820026 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:33.820039 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.820044 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:33.820080 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.820091 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.820128 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.820147 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.820184 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.820206 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.820246 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.820255 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.820291 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.820297 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:33.820299 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:33.820309 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.820312 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:33.820340 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.820346 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:33.820353 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:33.820363 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.820367 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:33.820395 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.820400 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:33.820421 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.820427 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.820459 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.820465 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.820492 76297 api.cc:33484] softmax API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.820499 76297 api.cc:33491] softmax kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["int"]}
I0603 16:35:33.820528 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.820535 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:33.823834 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.823840 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.823863 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.823872 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:33.823899 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.823901 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:33.823904 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:33.823922 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.823925 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.823961 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.823964 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.824000 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.824003 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:33.825028 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.825033 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.825073 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.825114 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:33.825153 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.825181 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.825215 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.825258 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.825281 76297 api.cc:9228] gelu API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.825321 76297 api.cc:9235] gelu kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool"]}
I0603 16:35:33.825388 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.825393 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.825424 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.825429 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.825457 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.825464 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:33.829094 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.829099 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.829135 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.829154 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:33.829214 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.829219 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.829254 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.829265 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.829295 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.829299 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:33.829303 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:33.829314 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.829317 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:33.829344 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.829346 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.829377 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.829380 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.829408 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.829432 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.829463 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.829481 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.829507 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.829528 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:33.829531 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:33.829540 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.829545 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:33.829571 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.829577 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:33.829581 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:33.829591 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.829595 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:33.829620 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.829627 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:33.829645 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.829650 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.829685 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.829691 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.829721 76297 api.cc:33484] softmax API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.829727 76297 api.cc:33491] softmax kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["int"]}
I0603 16:35:33.829753 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.829759 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:33.833134 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.833141 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.833164 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.833168 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:33.833194 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.833199 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:33.833201 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:33.833221 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.833254 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.833292 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.833298 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.833344 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.833357 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:33.834316 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.834322 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.834358 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.834367 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:33.834408 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.834430 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.834467 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.834475 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.834501 76297 api.cc:9228] gelu API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.834506 76297 api.cc:9235] gelu kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool"]}
I0603 16:35:33.834578 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.834585 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.834622 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.834627 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.834667 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.834676 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:33.838353 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.838359 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.838398 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.838403 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:33.838477 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.838485 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.838524 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.838531 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.838564 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.838569 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:33.838572 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:33.838586 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.838590 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:33.838622 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.838627 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.838660 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.838680 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.838711 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.838716 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.838754 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.838759 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.838788 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.838793 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:33.838796 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:33.838819 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.838824 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:33.838845 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.838847 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:33.838850 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:33.838857 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.838860 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:33.838881 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.838882 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:33.838901 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.838904 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.838932 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.838935 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.838963 76297 api.cc:33484] softmax API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.838965 76297 api.cc:33491] softmax kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["int"]}
I0603 16:35:33.838987 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.838990 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:33.842387 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.842393 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.842417 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.842439 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:33.842463 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.842486 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:33.842489 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:33.842506 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.842509 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.842542 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.842545 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.842581 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.842583 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:33.843575 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.843581 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.843619 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.843624 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:33.843664 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.843668 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.843701 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.843720 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.843745 76297 api.cc:9228] gelu API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.843750 76297 api.cc:9235] gelu kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool"]}
I0603 16:35:33.843837 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.843842 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.843874 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.843880 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.843907 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.843912 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:33.847612 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.847618 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.847656 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.847673 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:33.847734 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.847740 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.847776 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.847793 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.847836 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.847839 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:33.847843 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:33.847855 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.847859 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:33.847892 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.847896 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.847929 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.847947 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.847975 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.848001 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.848031 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.848063 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.848089 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.848095 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:33.848099 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:33.848111 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.848115 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:33.848140 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.848145 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:33.848147 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:33.848155 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.848156 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:33.848181 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.848187 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:33.848207 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.848209 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.848235 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.848242 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.848271 76297 api.cc:33484] softmax API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.848276 76297 api.cc:33491] softmax kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["int"]}
I0603 16:35:33.848299 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.848304 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:33.851649 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.851655 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.851675 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.851709 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:33.851733 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.851758 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:33.851760 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:33.851778 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.851780 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.851823 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.851845 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.851881 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.851917 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:33.852835 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.852840 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.852878 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.852882 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:33.852921 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.852943 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.852978 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.853009 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.853034 76297 api.cc:9228] gelu API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.853040 76297 api.cc:9235] gelu kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool"]}
I0603 16:35:33.853106 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.853111 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.853145 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.853152 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.853186 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.853191 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:33.856892 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.856900 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.856935 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.856940 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:33.856998 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.857034 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.857070 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.857089 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.857120 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.857122 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:33.857125 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:33.857136 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.857138 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:33.857163 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.857167 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.857198 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.857201 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.857229 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.857260 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.857296 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.857308 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.857333 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.857337 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:33.857339 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:33.857347 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.857350 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:33.857370 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.857373 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:33.857375 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:33.857383 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.857384 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:33.857404 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.857407 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:33.857426 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.857429 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.857462 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.857465 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.857491 76297 api.cc:33484] softmax API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.857493 76297 api.cc:33491] softmax kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["int"]}
I0603 16:35:33.857514 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.857517 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:33.860934 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.860939 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.860960 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.860993 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:33.861020 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.861037 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:33.861042 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:33.861057 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.861060 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.861095 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.861099 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.861133 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.861140 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:33.862124 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.862129 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.862165 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.862182 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:33.862221 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.862236 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.862268 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.862290 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.862320 76297 api.cc:9228] gelu API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.862327 76297 api.cc:9235] gelu kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool"]}
I0603 16:35:33.862398 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.862403 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.862434 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.862439 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.862468 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.862473 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:33.866148 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.866154 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.866190 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.866218 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:33.866279 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.866297 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.866335 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.866357 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.866386 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.866391 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:33.866394 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:33.866403 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.866406 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:33.866432 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.866436 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.866466 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.866495 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.866523 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.866528 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.866559 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.866562 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.866591 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.866598 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:33.866602 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:33.866611 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.866613 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:33.866633 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.866636 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:33.866638 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:33.866647 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.866649 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:33.866669 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.866672 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:33.866691 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.866694 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.866721 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.866726 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.866750 76297 api.cc:33484] softmax API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.866755 76297 api.cc:33491] softmax kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["int"]}
I0603 16:35:33.866775 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.866779 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:33.870187 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.870193 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.870216 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.870247 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:33.870270 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.870301 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:33.870303 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:33.870319 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.870322 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.870357 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.870389 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.870425 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.870429 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:33.871374 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.871379 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.871413 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.871433 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:33.871470 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.871474 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.871507 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.871524 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.871548 76297 api.cc:9228] gelu API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.871551 76297 api.cc:9235] gelu kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool"]}
I0603 16:35:33.871619 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.871624 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.871655 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.871660 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.871691 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.871696 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:33.875383 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.875388 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.875425 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.875442 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:33.875514 76297 api.cc:33407] slice API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.875520 76297 api.cc:33414] slice kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int64_t>","IntArray","IntArray","vector<int64_t>","vector<int64_t>"]}
I0603 16:35:33.875558 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.875573 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.875610 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.875615 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.875648 76297 api.cc:22807] tanh API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.875655 76297 api.cc:22814] tanh kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":[]}
I0603 16:35:33.875695 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.875700 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:33.875703 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:33.875720 76297 api.cc:29470] gather API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.875725 76297 api.cc:29477] gather kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar"]}
I0603 16:35:33.875762 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.875767 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.875823 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.875829 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.875861 76297 api.cc:9228] gelu API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.875866 76297 api.cc:9235] gelu kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool"]}
I0603 16:35:33.875897 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.875902 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:33.875949 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.875954 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:33.875980 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.875985 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.876024 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.876030 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.876068 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.876075 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:33.876111 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.876116 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.876199 76297 api.cc:28638] full API kernel key: [XPU, Undefined(AnyLayout), int64]
I0603 16:35:33.876206 76297 api.cc:28645] full kernel: {"input":[],"output":["XPU, NCHW, int64"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:33.876225 76297 api.cc:31621] not_equal API kernel key: [XPU, NCHW, int64]
I0603 16:35:33.876230 76297 api.cc:31628] not_equal kernel: {"input":["XPU, NCHW, int64","XPU, NCHW, int64"],"output":["XPU, NCHW, bool"],"attribute":[]}
I0603 16:35:33.876260 76297 api.cc:26250] cast API kernel key: [XPU, NCHW, bool]
I0603 16:35:33.876266 76297 api.cc:26257] cast kernel: {"input":["XPU, NCHW, bool"],"output":["XPU, NCHW, Undefined"],"attribute":["DataType"]}
I0603 16:35:33.876289 76297 api.cc:31270] multiply API kernel key: [XPU, NCHW, int64]
I0603 16:35:33.876293 76297 api.cc:31277] multiply kernel: {"input":["XPU, NCHW, int64","XPU, NCHW, int64"],"output":["XPU, NCHW, int64"],"attribute":[]}
I0603 16:35:33.876341 76297 api.cc:5746] cross_entropy_with_softmax API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.876349 76297 api.cc:5753] cross_entropy_with_softmax kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["bool","bool","bool","int","int"]}
I0603 16:35:33.876451 76297 api.cc:27087] divide API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.876459 76297 api.cc:27094] divide kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.876492 76297 api.cc:28638] full API kernel key: [XPU, Undefined(AnyLayout), int64]
I0603 16:35:33.876497 76297 api.cc:28645] full kernel: {"input":[],"output":["XPU, NCHW, int64"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:33.876513 76297 api.cc:31621] not_equal API kernel key: [XPU, NCHW, int64]
I0603 16:35:33.876518 76297 api.cc:31628] not_equal kernel: {"input":["XPU, NCHW, int64","XPU, NCHW, int64"],"output":["XPU, NCHW, bool"],"attribute":[]}
I0603 16:35:33.876538 76297 api.cc:26250] cast API kernel key: [XPU, NCHW, bool]
I0603 16:35:33.876543 76297 api.cc:26257] cast kernel: {"input":["XPU, NCHW, bool"],"output":["XPU, NCHW, Undefined"],"attribute":["DataType"]}
I0603 16:35:33.876559 76297 api.cc:31270] multiply API kernel key: [XPU, NCHW, int64]
I0603 16:35:33.876564 76297 api.cc:31277] multiply kernel: {"input":["XPU, NCHW, int64","XPU, NCHW, int64"],"output":["XPU, NCHW, int64"],"attribute":[]}
I0603 16:35:33.876597 76297 api.cc:5746] cross_entropy_with_softmax API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.876602 76297 api.cc:5753] cross_entropy_with_softmax kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["bool","bool","bool","int","int"]}
I0603 16:35:33.876652 76297 api.cc:34100] sum API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.876659 76297 api.cc:34107] sum kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, Undefined"],"attribute":["IntArray","DataType","bool"]}
I0603 16:35:33.876693 76297 api.cc:30971] mean API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.876698 76297 api.cc:30978] mean kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["IntArray","bool"]}
I0603 16:35:33.876719 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.876724 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:33.877164 76297 api.cc:28638] full API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:33.877175 76297 api.cc:28645] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:33.878577 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.878589 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:33.879263 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.879271 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:33.879937 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.879945 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:33.880602 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.880609 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:33.881333 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.881340 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:33.882022 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.882030 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:33.882748 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.882755 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:33.883479 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.883486 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:33.884199 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.884207 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:33.884919 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.884927 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:33.885648 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.885655 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:33.886401 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.886408 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:33.887360 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.887374 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:33.887499 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.887507 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.887559 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.887563 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.887604 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.887609 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.887650 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.887653 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.887691 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.887696 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.887732 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.887737 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.887780 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.887786 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.887837 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.887841 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.887879 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.887883 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.887921 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.887926 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.887966 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.887970 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.888011 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.888016 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.888054 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.888059 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.888100 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.888105 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.888142 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.888147 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.888183 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.888188 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.888229 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.888233 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.888274 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.888278 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.888314 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.888319 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.888355 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.888360 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.888397 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.888401 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.888437 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.888442 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.888479 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.888484 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.888520 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.888523 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.888561 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.888564 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.888604 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.888610 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.888653 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.888659 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.888695 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.888700 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.888736 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.888741 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.888778 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.888783 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.888826 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.888832 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.888876 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.888881 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.888916 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.888921 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.888965 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.888971 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.889009 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.889014 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.889050 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.889055 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.889089 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.889094 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.889128 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.889133 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.889173 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.889178 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.889214 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.889217 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.889253 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.889258 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.889294 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.889299 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.889335 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.889339 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.889379 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.889382 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.889418 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.889423 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.889461 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.889467 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.889508 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.889514 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.889554 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.889559 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.889605 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.889611 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.889650 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.889654 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.889700 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.889704 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.889741 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.889747 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.889786 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.889791 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.889834 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.889839 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.889884 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.889890 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.889930 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.889935 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.889982 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.889987 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.890027 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.890031 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.890067 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.890072 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.890113 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.890117 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.890156 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.890161 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.890199 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.890203 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.890244 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.890249 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.890291 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.890296 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.890332 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.890337 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.890372 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.890376 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.890414 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.890419 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.890455 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.890460 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.890497 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.890501 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.890537 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.890542 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.890583 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.890588 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.890631 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.890637 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.890677 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.890681 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.890722 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.890728 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.890767 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.890771 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.890817 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.890827 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.890866 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.890870 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.890906 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.890910 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.890947 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.890951 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.890987 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.890992 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.891031 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.891036 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.891072 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.891076 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.891121 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.891126 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.891162 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.891166 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.891204 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.891208 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.891247 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.891252 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.891287 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.891292 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.891327 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.891332 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.891367 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.891372 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.891407 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.891412 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.891453 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.891458 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.891494 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.891498 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.891534 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.891538 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.891574 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.891578 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.891615 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.891619 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.891654 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.891659 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.891696 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.891702 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.891743 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.891748 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.891788 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.891791 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.891855 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.891857 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.891894 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.891896 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.891932 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.891934 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.891971 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.891976 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.892014 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.892017 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.892055 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.892058 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.892103 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.892109 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.892153 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.892158 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.892195 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.892200 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.892241 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.892246 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.892287 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.892292 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.892330 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.892334 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.892374 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.892378 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.892414 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.892419 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.892455 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.892460 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.892503 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.892508 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.892546 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.892551 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.892589 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.892593 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.892630 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.892634 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.892670 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.892674 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.892712 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.892717 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.892755 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.892760 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.892796 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.892800 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.892848 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.892854 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.892890 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.892895 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.892935 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.892939 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.892978 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.892983 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.893019 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.893024 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.893060 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.893064 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.893100 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.893105 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.893143 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.893148 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.893184 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.893189 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.893225 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.893230 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.893267 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.893272 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.893311 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.893316 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.893353 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.893357 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.893397 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.893401 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.893440 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.893445 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.893481 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.893484 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.893519 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.893523 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.893563 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.893566 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.893606 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.893610 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.893647 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.893651 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.893687 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.893692 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.893729 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.893733 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.893771 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.893775 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.893817 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.893821 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.893858 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.893863 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.893901 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.893908 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.893949 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.893954 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.893991 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.893996 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.894032 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.894037 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.894071 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.894075 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.894114 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.894117 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.894155 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.894160 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.894196 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.894199 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.894237 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.894240 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.894280 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.894284 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.894320 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.894325 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.894361 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.894366 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.894404 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.894409 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.894444 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.894449 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.894484 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.894488 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.894526 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.894531 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.894573 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.894578 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.894614 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.894618 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.894655 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.894659 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.894694 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.894699 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.894739 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.894744 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.894783 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.894788 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.894830 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.894835 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.894873 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.894878 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.894920 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.894927 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.894963 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.894968 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.895006 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.895010 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.895049 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.895053 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.895092 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.895095 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.895131 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.895135 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.895177 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.895181 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.895221 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.895226 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.895267 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.895272 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.895316 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.895320 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.895359 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.895363 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.895402 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.895407 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.895450 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.895455 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.895496 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.895500 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.895539 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.895545 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.895581 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.895586 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.895620 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.895624 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.895660 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.895664 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.895704 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.895709 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.895746 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.895750 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.895789 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.895793 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.895839 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.895844 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.895881 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.895886 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.895922 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.895927 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.895962 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.895967 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.896004 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.896009 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.896044 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.896049 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.896086 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.896091 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.896126 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.896131 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.896167 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.896171 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.896210 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.896215 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.896253 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.896258 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.896296 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.896301 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.896337 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.896339 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:33.896375 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:33.896379 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
[32m[2024-06-03 16:35:34,090] [    INFO][0m - global step: 8, epoch: 0, batch: 7, loss: 11.095920, avg_reader_cost: 0.00011 sec, avg_batch_cost: 0.32930 sec, avg_samples: 32.00000, ips: 97.17648 sequences/sec,  [0m
I0603 16:35:34.090787 76297 api.cc:28997] full_like API kernel key: [XPU, NCHW, int64]
I0603 16:35:34.090824 76297 api.cc:29004] full_like kernel: {"input":["Undefined, NCHW, int64"],"output":["XPU, NCHW, int64"],"attribute":["Scalar","DataType"]}
I0603 16:35:34.091104 76297 api.cc:26615] cumsum API kernel key: [XPU, NCHW, int64]
I0603 16:35:34.091112 76297 api.cc:26622] cumsum kernel: {"input":["XPU, NCHW, int64"],"output":["XPU, NCHW, int64"],"attribute":["Scalar","bool","bool","bool"]}
I0603 16:35:34.091225 76297 api.cc:33948] subtract API kernel key: [XPU, NCHW, int64]
I0603 16:35:34.091234 76297 api.cc:33955] subtract kernel: {"input":["XPU, NCHW, int64","XPU, NCHW, int64"],"output":["XPU, NCHW, int64"],"attribute":[]}
I0603 16:35:34.091396 76297 api.cc:27476] embedding API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.091406 76297 api.cc:27483] embedding kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["int64_t"]}
I0603 16:35:34.091527 76297 api.cc:27476] embedding API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.091534 76297 api.cc:27483] embedding kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["int64_t"]}
I0603 16:35:34.091638 76297 api.cc:27476] embedding API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.091645 76297 api.cc:27483] embedding kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["int64_t"]}
I0603 16:35:34.091773 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.091781 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.091902 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.091907 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.092152 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.092161 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:34.092284 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.092293 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:34.093243 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.093251 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.093318 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.093325 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.093452 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.093461 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:34.093465 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:34.093596 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.093603 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:34.093876 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.093883 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.093930 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.093936 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.094004 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.094010 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.094051 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.094058 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.094130 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.094137 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:34.094142 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:34.094355 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.094362 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:34.094480 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.094486 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:34.094491 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:34.094583 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.094589 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:34.094725 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.094732 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:34.094959 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.094965 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.095098 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.095104 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.095237 76297 api.cc:33484] softmax API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.095245 76297 api.cc:33491] softmax kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["int"]}
I0603 16:35:34.095657 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.095664 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:34.096503 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.096510 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.096719 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.096725 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:34.096781 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.096787 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:34.096791 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:34.096879 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.096886 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.096932 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.096938 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.097000 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.097007 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:34.097764 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.097771 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.097824 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.097832 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:34.097884 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.097890 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.097929 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.097935 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.097967 76297 api.cc:9228] gelu API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.097975 76297 api.cc:9235] gelu kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool"]}
I0603 16:35:34.098057 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.098062 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.098100 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.098106 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.098147 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.098155 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:34.101696 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.101702 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.101751 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.101765 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:34.101869 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.101878 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.101924 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.101928 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.101971 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.101986 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:34.101991 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:34.102007 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.102011 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:34.102047 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.102054 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.102093 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.102099 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.102137 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.102144 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.102181 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.102187 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.102221 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.102227 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:34.102232 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:34.102244 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.102248 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:34.102277 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.102283 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:34.102288 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:34.102296 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.102300 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:34.102329 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.102334 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:34.102360 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.102366 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.102403 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.102409 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.102440 76297 api.cc:33484] softmax API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.102447 76297 api.cc:33491] softmax kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["int"]}
I0603 16:35:34.102474 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.102480 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:34.105734 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.105741 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.105769 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.105773 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:34.105850 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.105855 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:34.105860 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:34.105885 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.105890 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.105934 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.105940 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.105988 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.105993 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:34.106914 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.106922 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.106969 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.106976 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:34.107029 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.107036 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.107077 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.107098 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.107131 76297 api.cc:9228] gelu API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.107137 76297 api.cc:9235] gelu kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool"]}
I0603 16:35:34.107215 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.107221 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.107259 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.107265 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.107306 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.107313 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:34.110967 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.110975 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.111023 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.111030 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:34.111110 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.111117 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.111164 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.111169 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.111208 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.111215 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:34.111220 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:34.111235 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.111239 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:34.111274 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.111280 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.111318 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.111325 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.111362 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.111368 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.111405 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.111411 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.111444 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.111450 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:34.111455 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:34.111466 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.111470 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:34.111496 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.111502 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:34.111507 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:34.111516 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.111521 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:34.111548 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.111554 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:34.111579 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.111585 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.111618 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.111624 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.111654 76297 api.cc:33484] softmax API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.111660 76297 api.cc:33491] softmax kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["int"]}
I0603 16:35:34.111687 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.111693 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:34.115015 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.115023 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.115053 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.115084 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:34.115119 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.115124 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:34.115129 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:34.115154 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.115161 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.115206 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.115213 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.115265 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.115274 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:34.116192 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.116200 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.116251 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.116259 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:34.116317 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.116323 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.116365 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.116372 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.116405 76297 api.cc:9228] gelu API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.116412 76297 api.cc:9235] gelu kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool"]}
I0603 16:35:34.116493 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.116500 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.116541 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.116547 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.116590 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.116597 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:34.120251 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.120258 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.120309 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.120316 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:34.120409 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.120416 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.120465 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.120472 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.120515 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.120522 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:34.120527 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:34.120544 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.120584 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:34.120622 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.120630 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.120671 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.120678 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.120718 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.120723 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.120764 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.120770 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.120858 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.120867 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:34.120873 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:34.120887 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.120891 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:34.120924 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.120930 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:34.120935 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:34.120947 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.120952 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:34.120982 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.120990 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:34.121016 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.121021 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.121058 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.121065 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.121097 76297 api.cc:33484] softmax API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.121104 76297 api.cc:33491] softmax kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["int"]}
I0603 16:35:34.121136 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.121143 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:34.124282 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.124289 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.124320 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.124325 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:34.124357 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.124363 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:34.124368 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:34.124392 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.124429 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.124471 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.124478 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.124526 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.124532 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:34.125461 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.125468 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.125517 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.125530 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:34.125584 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.125591 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.125631 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.125635 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.125669 76297 api.cc:9228] gelu API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.125675 76297 api.cc:9235] gelu kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool"]}
I0603 16:35:34.125754 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.125761 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.125799 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.125821 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.125862 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.125869 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:34.129495 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.129503 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.129547 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.129554 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:34.129637 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.129643 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.129688 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.129694 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.129734 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.129738 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:34.129743 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:34.129757 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.129761 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:34.129796 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.129803 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.129899 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.129904 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.129943 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.129949 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.129988 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.129994 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.130029 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.130035 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:34.130040 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:34.130052 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.130056 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:34.130086 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.130092 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:34.130096 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:34.130106 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.130110 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:34.130136 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.130142 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:34.130167 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.130173 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.130206 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.130213 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.130244 76297 api.cc:33484] softmax API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.130250 76297 api.cc:33491] softmax kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["int"]}
I0603 16:35:34.130278 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.130285 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:34.133544 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.133550 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.133580 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.133586 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:34.133617 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.133623 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:34.133628 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:34.133651 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.133657 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.133698 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.133715 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.133764 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.133770 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:34.134733 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.134740 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.134785 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.134791 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:34.134860 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.134867 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.134907 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.134913 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.134943 76297 api.cc:9228] gelu API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.134949 76297 api.cc:9235] gelu kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool"]}
I0603 16:35:34.135025 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.135030 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.135067 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.135073 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.135110 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.135118 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:34.138746 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.138753 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.138798 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.138803 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:34.138923 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.138931 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.138975 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.138981 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.139019 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.139024 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:34.139027 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:34.139040 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.139045 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:34.139077 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.139083 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.139122 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.139127 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.139161 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.139168 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.139202 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.139209 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.139241 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.139246 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:34.139251 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:34.139262 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.139266 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:34.139292 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.139297 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:34.139302 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:34.139310 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.139314 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:34.139341 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.139348 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:34.139371 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.139377 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.139410 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.139415 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.139443 76297 api.cc:33484] softmax API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.139449 76297 api.cc:33491] softmax kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["int"]}
I0603 16:35:34.139477 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.139482 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:34.142791 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.142798 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.142835 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.142869 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:34.142900 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.142906 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:34.142910 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:34.142932 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.142935 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.142977 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.142983 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.143028 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.143033 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:34.143981 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.143988 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.144032 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.144037 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:34.144085 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.144091 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.144130 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.144135 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.144165 76297 api.cc:9228] gelu API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.144171 76297 api.cc:9235] gelu kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool"]}
I0603 16:35:34.144245 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.144251 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.144289 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.144295 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.144333 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.144340 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:34.148000 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.148006 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.148049 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.148070 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:34.148141 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.148147 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.148188 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.148195 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.148231 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.148236 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:34.148239 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:34.148252 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.148255 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:34.148286 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.148310 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.148347 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.148352 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.148386 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.148391 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.148427 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.148432 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.148463 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.148469 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:34.148473 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:34.148483 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.148487 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:34.148512 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.148517 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:34.148522 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:34.148531 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.148535 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:34.148567 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.148572 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:34.148597 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.148602 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.148634 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.148639 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.148667 76297 api.cc:33484] softmax API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.148674 76297 api.cc:33491] softmax kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["int"]}
I0603 16:35:34.148698 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.148705 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:34.152036 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.152043 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.152070 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.152076 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:34.152107 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.152109 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:34.152113 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:34.152134 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.152138 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.152177 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.152184 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.152230 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.152235 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:34.153218 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.153224 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.153268 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.153285 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:34.153334 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.153340 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.153378 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.153383 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.153415 76297 api.cc:9228] gelu API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.153421 76297 api.cc:9235] gelu kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool"]}
I0603 16:35:34.153496 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.153501 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.153538 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.153543 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.153580 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.153586 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:34.157276 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.157284 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.157325 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.157352 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:34.157418 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.157424 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.157466 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.157472 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.157506 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.157512 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:34.157516 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:34.157528 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.157531 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:34.157560 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.157565 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.157601 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.157620 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.157651 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.157656 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.157691 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.157696 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.157727 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.157732 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:34.157737 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:34.157747 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.157749 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:34.157773 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.157778 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:34.157780 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:34.157788 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.157791 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:34.157829 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.157835 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:34.157858 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.157863 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.157895 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.157902 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.157928 76297 api.cc:33484] softmax API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.157933 76297 api.cc:33491] softmax kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["int"]}
I0603 16:35:34.157958 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.157963 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:34.161334 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.161339 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.161365 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.161370 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:34.161397 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.161403 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:34.161407 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:34.161427 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.161433 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.161471 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.161477 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.161518 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.161525 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:34.162519 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.162525 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.162566 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.162572 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:34.162616 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.162621 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.162658 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.162663 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.162693 76297 api.cc:9228] gelu API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.162698 76297 api.cc:9235] gelu kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool"]}
I0603 16:35:34.162771 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.162776 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.162823 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.162828 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.162864 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.162870 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:34.166605 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.166611 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.166653 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.166659 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:34.166725 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.166731 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.166770 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.166776 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.166822 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.166828 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:34.166832 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:34.166843 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.166846 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:34.166877 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.166879 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.166914 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.166919 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.166951 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.166956 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.166991 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.166996 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.167025 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.167030 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:34.167033 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:34.167043 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.167047 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:34.167069 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.167074 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:34.167078 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:34.167086 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.167088 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:34.167112 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.167117 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:34.167137 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.167142 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.167176 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.167181 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.167207 76297 api.cc:33484] softmax API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.167212 76297 api.cc:33491] softmax kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["int"]}
I0603 16:35:34.167236 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.167241 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:34.170639 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.170644 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.170670 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.170706 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:34.170734 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.170737 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:34.170742 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:34.170759 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.170763 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.170799 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.170816 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.170858 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.170863 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:34.171828 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.171834 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.171872 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.171878 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:34.171921 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.171926 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.171959 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.171964 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.171991 76297 api.cc:9228] gelu API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.171998 76297 api.cc:9235] gelu kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool"]}
I0603 16:35:34.172068 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.172073 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.172107 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.172112 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.172145 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.172151 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:34.175864 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.175869 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.175909 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.175915 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:34.175979 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.176010 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.176051 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.176056 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.176090 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.176105 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:34.176108 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:34.176119 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.176123 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:34.176151 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.176156 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.176190 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.176195 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.176226 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.176231 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.176265 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.176270 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.176297 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.176303 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:34.176307 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:34.176318 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.176321 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:34.176344 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.176350 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:34.176354 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:34.176362 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.176365 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:34.176388 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.176393 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:34.176415 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.176421 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.176450 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.176455 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.176481 76297 api.cc:33484] softmax API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.176486 76297 api.cc:33491] softmax kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["int"]}
I0603 16:35:34.176512 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.176517 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:34.179900 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.179906 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.179931 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.179962 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:34.179989 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.179996 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:34.179999 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:34.180017 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.180020 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.180056 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.180060 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.180099 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.180104 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:34.181082 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.181087 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.181126 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.181133 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:34.181175 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.181180 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.181214 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.181221 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.181246 76297 api.cc:9228] gelu API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.181252 76297 api.cc:9235] gelu kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool"]}
I0603 16:35:34.181324 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.181329 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.181363 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.181368 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.181401 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.181406 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:34.185127 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.185132 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.185171 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.185194 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:34.185257 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.185263 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.185304 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.185309 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.185343 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.185349 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:34.185353 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:34.185364 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.185367 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:34.185396 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.185423 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.185457 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.185462 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.185492 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.185497 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.185532 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.185537 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.185565 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.185571 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:34.185575 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:34.185585 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.185587 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:34.185609 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.185614 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:34.185618 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:34.185626 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.185628 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:34.185650 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.185657 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:34.185680 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.185684 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.185714 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.185719 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.185745 76297 api.cc:33484] softmax API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.185750 76297 api.cc:33491] softmax kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["int"]}
I0603 16:35:34.185772 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.185777 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:34.189172 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.189177 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.189203 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.189208 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:34.189234 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.189239 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:34.189244 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:34.189261 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.189265 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.189301 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.189306 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.189344 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.189350 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:34.190366 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.190371 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.190408 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.190424 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:34.190466 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.190471 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.190507 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.190512 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.190539 76297 api.cc:9228] gelu API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.190544 76297 api.cc:9235] gelu kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool"]}
I0603 16:35:34.190615 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.190620 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.190654 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.190660 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.190691 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.190697 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:34.194414 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.194420 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.194459 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.194465 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:34.194530 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.194536 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.194576 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.194581 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.194613 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.194619 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:34.194623 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:34.194634 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.194638 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:34.194666 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.194671 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.194706 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.194711 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.194743 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.194748 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.194783 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.194789 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.194830 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.194835 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:34.194839 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:34.194849 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.194852 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:34.194875 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.194881 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:34.194885 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:34.194892 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.194895 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:34.194918 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.194926 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:34.194947 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.194952 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.194984 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.194989 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.195019 76297 api.cc:33484] softmax API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.195024 76297 api.cc:33491] softmax kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["int"]}
I0603 16:35:34.195047 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.195052 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:34.198454 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.198460 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.198486 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.198493 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:34.198520 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.198525 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:34.198529 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:34.198547 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.198550 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.198590 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.198594 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.198633 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.198639 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:34.199640 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.199644 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.199683 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.199689 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:34.199729 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.199752 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.199787 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.199792 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.199829 76297 api.cc:9228] gelu API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.199836 76297 api.cc:9235] gelu kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool"]}
I0603 16:35:34.199908 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.199913 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.199949 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.199954 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.199987 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.199993 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:34.203678 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.203684 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.203723 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.203729 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:34.203801 76297 api.cc:33407] slice API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.203868 76297 api.cc:33414] slice kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int64_t>","IntArray","IntArray","vector<int64_t>","vector<int64_t>"]}
I0603 16:35:34.203912 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.203917 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.203955 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.203961 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.203997 76297 api.cc:22807] tanh API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.204025 76297 api.cc:22814] tanh kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":[]}
I0603 16:35:34.204067 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.204073 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:34.204077 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:34.204092 76297 api.cc:29470] gather API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.204095 76297 api.cc:29477] gather kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar"]}
I0603 16:35:34.204128 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.204133 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.204903 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.204910 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.204938 76297 api.cc:9228] gelu API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.204944 76297 api.cc:9235] gelu kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool"]}
I0603 16:35:34.204983 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.204989 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:34.205039 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.205045 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:34.205072 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.205077 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.205385 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.205390 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.205427 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.205432 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.205469 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.205475 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.205569 76297 api.cc:28638] full API kernel key: [XPU, Undefined(AnyLayout), int64]
I0603 16:35:34.205576 76297 api.cc:28645] full kernel: {"input":[],"output":["XPU, NCHW, int64"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:34.205596 76297 api.cc:31621] not_equal API kernel key: [XPU, NCHW, int64]
I0603 16:35:34.205605 76297 api.cc:31628] not_equal kernel: {"input":["XPU, NCHW, int64","XPU, NCHW, int64"],"output":["XPU, NCHW, bool"],"attribute":[]}
I0603 16:35:34.205636 76297 api.cc:26250] cast API kernel key: [XPU, NCHW, bool]
I0603 16:35:34.205643 76297 api.cc:26257] cast kernel: {"input":["XPU, NCHW, bool"],"output":["XPU, NCHW, Undefined"],"attribute":["DataType"]}
I0603 16:35:34.205667 76297 api.cc:31270] multiply API kernel key: [XPU, NCHW, int64]
I0603 16:35:34.205672 76297 api.cc:31277] multiply kernel: {"input":["XPU, NCHW, int64","XPU, NCHW, int64"],"output":["XPU, NCHW, int64"],"attribute":[]}
I0603 16:35:34.205718 76297 api.cc:5746] cross_entropy_with_softmax API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.205724 76297 api.cc:5753] cross_entropy_with_softmax kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["bool","bool","bool","int","int"]}
I0603 16:35:34.205842 76297 api.cc:27087] divide API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.205848 76297 api.cc:27094] divide kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.205879 76297 api.cc:28638] full API kernel key: [XPU, Undefined(AnyLayout), int64]
I0603 16:35:34.205884 76297 api.cc:28645] full kernel: {"input":[],"output":["XPU, NCHW, int64"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:34.205901 76297 api.cc:31621] not_equal API kernel key: [XPU, NCHW, int64]
I0603 16:35:34.205904 76297 api.cc:31628] not_equal kernel: {"input":["XPU, NCHW, int64","XPU, NCHW, int64"],"output":["XPU, NCHW, bool"],"attribute":[]}
I0603 16:35:34.205927 76297 api.cc:26250] cast API kernel key: [XPU, NCHW, bool]
I0603 16:35:34.205932 76297 api.cc:26257] cast kernel: {"input":["XPU, NCHW, bool"],"output":["XPU, NCHW, Undefined"],"attribute":["DataType"]}
I0603 16:35:34.205950 76297 api.cc:31270] multiply API kernel key: [XPU, NCHW, int64]
I0603 16:35:34.205955 76297 api.cc:31277] multiply kernel: {"input":["XPU, NCHW, int64","XPU, NCHW, int64"],"output":["XPU, NCHW, int64"],"attribute":[]}
I0603 16:35:34.205991 76297 api.cc:5746] cross_entropy_with_softmax API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.205996 76297 api.cc:5753] cross_entropy_with_softmax kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["bool","bool","bool","int","int"]}
I0603 16:35:34.206049 76297 api.cc:34100] sum API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.206055 76297 api.cc:34107] sum kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, Undefined"],"attribute":["IntArray","DataType","bool"]}
I0603 16:35:34.206086 76297 api.cc:30971] mean API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.206092 76297 api.cc:30978] mean kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["IntArray","bool"]}
I0603 16:35:34.206116 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.206121 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.206524 76297 api.cc:28638] full API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:34.206537 76297 api.cc:28645] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:34.210068 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.210083 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:34.210884 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.210892 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:34.211645 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.211653 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:34.212388 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.212395 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:34.213171 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.213179 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:34.213950 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.213959 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:34.214735 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.214742 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:34.215546 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.215554 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:34.216357 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.216365 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:34.217136 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.217144 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:34.217970 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.217978 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:34.218777 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.218784 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:34.219767 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.219782 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:34.219931 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.219939 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.219993 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.219997 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.220043 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.220049 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.220093 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.220098 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.220141 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.220160 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.220204 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.220209 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.220253 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.220258 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.220296 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.220301 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.220340 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.220345 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.220387 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.220392 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.220433 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.220438 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.220476 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.220481 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.220520 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.220525 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.220563 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.220568 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.220611 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.220616 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.220654 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.220659 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.220700 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.220705 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.220744 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.220749 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.220788 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.220793 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.220839 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.220844 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.220886 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.220891 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.220929 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.220934 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.220975 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.220980 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.221019 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.221024 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.221064 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.221069 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.221112 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.221117 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.221158 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.221163 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.221204 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.221210 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.221251 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.221256 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.221294 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.221300 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.221343 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.221347 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.221387 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.221392 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.221434 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.221439 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.221482 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.221486 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.221529 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.221534 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.221575 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.221580 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.221621 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.221625 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.221664 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.221670 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.221710 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.221715 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.221753 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.221758 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.221798 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.221802 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.221848 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.221853 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.221892 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.221897 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.221935 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.221940 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.221980 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.221985 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.222025 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.222030 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.222069 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.222074 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.222113 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.222118 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.222158 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.222163 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.222203 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.222208 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.222249 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.222254 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.222295 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.222301 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.222338 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.222343 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.222383 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.222388 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.222432 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.222437 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.222477 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.222482 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.222522 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.222527 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.222564 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.222569 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.222611 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.222616 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.222657 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.222662 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.222704 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.222709 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.222751 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.222756 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.222795 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.222801 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.222862 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.222867 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.222913 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.222916 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.222957 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.222963 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.223006 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.223011 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.223049 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.223054 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.223094 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.223099 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.223138 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.223143 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.223187 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.223192 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.223232 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.223238 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.223276 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.223281 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.223326 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.223331 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.223372 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.223377 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.223416 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.223421 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.223460 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.223465 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.223503 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.223508 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.223551 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.223556 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.223598 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.223603 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.223645 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.223650 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.223695 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.223699 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.223738 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.223743 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.223783 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.223788 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.223834 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.223836 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.223877 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.223882 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.223922 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.223927 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.223966 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.223971 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.224010 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.224015 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.224057 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.224062 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.224103 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.224108 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.224151 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.224156 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.224195 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.224200 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.224239 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.224244 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.224283 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.224288 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.224326 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.224331 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.224370 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.224375 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.224419 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.224423 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.224462 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.224467 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.224510 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.224514 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.224556 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.224561 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.224601 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.224606 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.224648 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.224653 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.224697 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.224702 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.224746 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.224751 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.224792 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.224797 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.224844 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.224848 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.224887 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.224892 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.224931 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.224936 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.224975 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.224980 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.225019 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.225024 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.225064 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.225068 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.225107 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.225112 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.225157 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.225162 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.225203 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.225208 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.225250 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.225255 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.225298 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.225303 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.225342 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.225347 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.225389 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.225394 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.225433 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.225438 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.225477 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.225482 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.225522 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.225528 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.225566 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.225571 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.225612 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.225617 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.225657 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.225662 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.225701 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.225706 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.225746 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.225751 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.225791 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.225796 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.225842 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.225847 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.225888 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.225891 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.225934 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.225939 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.225979 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.225984 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.226023 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.226028 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.226071 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.226076 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.226119 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.226123 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.226166 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.226171 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.226213 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.226218 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.226260 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.226265 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.226307 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.226312 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.226356 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.226359 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.226400 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.226405 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.226449 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.226454 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.226495 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.226500 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.226539 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.226544 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.226588 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.226593 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.226634 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.226639 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.226680 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.226686 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.226727 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.226732 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.226771 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.226776 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.226820 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.226825 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.226864 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.226869 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.226907 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.226912 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.226956 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.226962 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.227001 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.227006 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.227049 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.227054 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.227097 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.227102 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.227142 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.227147 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.227187 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.227192 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.227231 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.227236 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.227275 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.227281 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.227321 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.227326 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.227365 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.227370 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.227409 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.227414 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.227453 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.227458 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.227496 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.227501 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.227540 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.227545 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.227587 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.227592 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.227632 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.227638 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.227676 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.227681 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.227722 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.227727 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.227766 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.227770 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.227815 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.227821 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.227864 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.227869 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.227908 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.227913 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.227953 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.227958 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.227999 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.228004 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.228044 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.228049 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.228088 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.228093 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.228132 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.228137 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.228181 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.228186 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.228229 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.228235 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.228276 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.228281 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.228322 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.228327 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.228364 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.228369 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.228408 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.228413 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.228453 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.228458 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.228497 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.228502 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.228542 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.228546 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.228588 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.228593 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.228638 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.228643 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.228686 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.228691 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.228732 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.228739 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.228780 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.228785 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.228896 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.228904 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.228943 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.228948 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.228993 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.228997 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.229034 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.229039 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.229076 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.229080 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.229115 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.229120 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.229154 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.229159 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.229197 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.229202 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.229238 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.229243 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.229279 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.229283 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.229322 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.229326 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.229362 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.229367 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.229405 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.229409 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
[32m[2024-06-03 16:35:34,418] [    INFO][0m - global step: 9, epoch: 0, batch: 8, loss: 11.135887, avg_reader_cost: 0.00011 sec, avg_batch_cost: 0.32777 sec, avg_samples: 32.00000, ips: 97.62986 sequences/sec,  [0m
I0603 16:35:34.418908 76297 api.cc:28997] full_like API kernel key: [XPU, NCHW, int64]
I0603 16:35:34.418934 76297 api.cc:29004] full_like kernel: {"input":["Undefined, NCHW, int64"],"output":["XPU, NCHW, int64"],"attribute":["Scalar","DataType"]}
I0603 16:35:34.419006 76297 api.cc:26615] cumsum API kernel key: [XPU, NCHW, int64]
I0603 16:35:34.419013 76297 api.cc:26622] cumsum kernel: {"input":["XPU, NCHW, int64"],"output":["XPU, NCHW, int64"],"attribute":["Scalar","bool","bool","bool"]}
I0603 16:35:34.419243 76297 api.cc:33948] subtract API kernel key: [XPU, NCHW, int64]
I0603 16:35:34.419251 76297 api.cc:33955] subtract kernel: {"input":["XPU, NCHW, int64","XPU, NCHW, int64"],"output":["XPU, NCHW, int64"],"attribute":[]}
I0603 16:35:34.419377 76297 api.cc:27476] embedding API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.419384 76297 api.cc:27483] embedding kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["int64_t"]}
I0603 16:35:34.419559 76297 api.cc:27476] embedding API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.419564 76297 api.cc:27483] embedding kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["int64_t"]}
I0603 16:35:34.419687 76297 api.cc:27476] embedding API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.419692 76297 api.cc:27483] embedding kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["int64_t"]}
I0603 16:35:34.419783 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.419790 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.419903 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.419909 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.420053 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.420061 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:34.420166 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.420172 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:34.421099 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.421106 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.421168 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.421175 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.421221 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.421227 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:34.421231 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:34.421335 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.421341 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:34.421447 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.421452 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.421489 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.421494 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.421567 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.421571 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.421603 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.421608 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.421681 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.421687 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:34.421691 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:34.421711 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.421718 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:34.421872 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.421877 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:34.421880 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:34.421977 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.421981 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:34.422012 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.422019 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:34.422123 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.422128 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.422232 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.422237 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.422266 76297 api.cc:33484] softmax API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.422273 76297 api.cc:33491] softmax kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["int"]}
I0603 16:35:34.422380 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.422385 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:34.426180 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.426187 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.426213 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.426216 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:34.426242 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.426282 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:34.426285 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:34.426307 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.426311 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.426347 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.426350 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.426389 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.426395 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:34.427101 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.427106 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.427146 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.427152 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:34.427196 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.427201 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.427234 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.427239 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.427268 76297 api.cc:9228] gelu API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.427274 76297 api.cc:9235] gelu kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool"]}
I0603 16:35:34.427348 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.427353 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.427385 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.427389 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.427421 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.427426 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:34.431136 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.431142 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.431181 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.431196 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:34.431265 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.431272 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.431306 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.431310 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.431346 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.431351 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:34.431355 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:34.431367 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.431370 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:34.431396 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.431401 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.431433 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.431438 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.431468 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.431471 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.431502 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.431507 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.431531 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.431537 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:34.431540 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:34.431548 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.431551 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:34.431571 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.431576 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:34.431578 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:34.431584 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.431587 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:34.431607 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.431612 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:34.431630 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.431636 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.431663 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.431667 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.431696 76297 api.cc:33484] softmax API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.431701 76297 api.cc:33491] softmax kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["int"]}
I0603 16:35:34.431722 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.431727 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:34.435178 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.435184 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.435209 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.435211 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:34.435238 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.435242 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:34.435245 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:34.435264 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.435266 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.435302 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.435321 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.435359 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.435375 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:34.436357 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.436362 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.436398 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.436403 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:34.436444 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.436448 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.436481 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.436486 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.436511 76297 api.cc:9228] gelu API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.436539 76297 api.cc:9235] gelu kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool"]}
I0603 16:35:34.436609 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.436614 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.436645 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.436650 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.436681 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.436686 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:34.440399 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.440405 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.440444 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.440449 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:34.440511 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.440517 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.440554 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.440558 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.440589 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.440594 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:34.440598 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:34.440610 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.440613 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:34.440641 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.440645 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.440678 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.440682 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.440712 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.440728 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.440759 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.440764 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.440790 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.440795 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:34.440798 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:34.440819 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.440821 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:34.440842 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.440845 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:34.440847 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:34.440855 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.440856 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:34.440876 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.440879 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:34.440897 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.440901 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.440925 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.440928 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.440953 76297 api.cc:33484] softmax API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.440958 76297 api.cc:33491] softmax kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["int"]}
I0603 16:35:34.440979 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.440984 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:34.444416 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.444422 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.444444 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.444485 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:34.444510 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.444515 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:34.444518 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:34.444535 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.444538 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.444571 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.444576 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.444615 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.444626 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:34.445602 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.445607 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.445648 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.445653 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:34.445693 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.445698 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.445732 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.445736 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.445761 76297 api.cc:9228] gelu API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.445767 76297 api.cc:9235] gelu kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool"]}
I0603 16:35:34.445845 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.445849 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.445881 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.445886 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.445917 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.445922 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:34.449636 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.449641 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.449678 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.449683 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:34.449746 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.449751 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.449786 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.449791 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.449837 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.449842 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:34.449846 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:34.449857 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.449860 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:34.449887 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.449920 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.449954 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.449976 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.450006 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.450009 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.450040 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.450045 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.450071 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.450076 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:34.450079 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:34.450088 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.450090 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:34.450110 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.450114 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:34.450116 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:34.450124 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.450126 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:34.450147 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.450150 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:34.450168 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.450176 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.450204 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.450209 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.450237 76297 api.cc:33484] softmax API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.450241 76297 api.cc:33491] softmax kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["int"]}
I0603 16:35:34.450263 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.450268 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:34.453680 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.453685 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.453708 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.453713 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:34.453737 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.453742 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:34.453744 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:34.453763 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.453765 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.453800 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.453814 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.453851 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.453855 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:34.454859 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.454864 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.454900 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.454928 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:34.454969 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.454974 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.455008 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.455013 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.455037 76297 api.cc:9228] gelu API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.455042 76297 api.cc:9235] gelu kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool"]}
I0603 16:35:34.455111 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.455116 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.455147 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.455152 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.455180 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.455185 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:34.458926 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.458932 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.458971 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.458976 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:34.459040 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.459045 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.459081 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.459086 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.459117 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.459122 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:34.459125 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:34.459137 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.459141 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:34.459167 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.459172 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.459205 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.459210 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.459239 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.459244 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.459275 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.459278 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.459304 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.459309 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:34.459312 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:34.459321 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.459323 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:34.459343 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.459348 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:34.459352 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:34.459358 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.459362 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:34.459383 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.459385 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:34.459403 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.459406 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.459432 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.459437 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.459460 76297 api.cc:33484] softmax API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.459465 76297 api.cc:33491] softmax kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["int"]}
I0603 16:35:34.459491 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.459496 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:34.462972 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.462980 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.463003 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.463040 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:34.463065 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.463070 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:34.463073 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:34.463090 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.463093 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.463128 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.463132 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.463169 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.463174 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:34.464160 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.464165 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.464201 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.464207 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:34.464248 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.464253 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.464286 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.464291 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.464315 76297 api.cc:9228] gelu API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.464320 76297 api.cc:9235] gelu kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool"]}
I0603 16:35:34.464388 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.464393 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.464426 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.464430 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.464461 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.464466 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:34.468204 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.468210 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.468250 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.468254 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:34.468317 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.468322 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.468358 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.468362 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.468394 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.468398 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:34.468401 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:34.468412 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.468415 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:34.468441 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.468446 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.468479 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.468484 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.468513 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.468518 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.468550 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.468554 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.468580 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.468585 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:34.468588 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:34.468597 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.468600 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:34.468621 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.468623 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:34.468626 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:34.468633 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.468636 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:34.468655 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.468662 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:34.468681 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.468683 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.468709 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.468713 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.468736 76297 api.cc:33484] softmax API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.468740 76297 api.cc:33491] softmax kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["int"]}
I0603 16:35:34.468765 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.468770 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:34.472246 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.472252 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.472276 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.472281 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:34.472304 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.472309 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:34.472312 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:34.472330 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.472333 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.472369 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.472374 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.472409 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.472414 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:34.473428 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.473433 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.473470 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.473476 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:34.473516 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.473537 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.473572 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.473577 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.473603 76297 api.cc:9228] gelu API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.473608 76297 api.cc:9235] gelu kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool"]}
I0603 16:35:34.473676 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.473680 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.473713 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.473718 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.473747 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.473752 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:34.477470 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.477476 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.477514 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.477547 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:34.477607 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.477628 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.477664 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.477669 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.477699 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.477720 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:34.477722 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:34.477734 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.477736 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:34.477762 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.477766 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.477797 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.477847 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.477877 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.477906 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.477937 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.477954 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.477981 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.477986 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:34.477989 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:34.477998 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.478001 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:34.478026 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.478030 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:34.478034 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:34.478041 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.478044 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:34.478066 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.478070 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:34.478089 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.478092 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.478119 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.478124 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.478145 76297 api.cc:33484] softmax API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.478150 76297 api.cc:33491] softmax kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["int"]}
I0603 16:35:34.478173 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.478176 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:34.481510 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.481515 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.481539 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.481544 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:34.481567 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.481595 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:34.481596 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:34.481612 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.481616 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.481650 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.481655 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.481689 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.481694 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:34.482693 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.482698 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.482735 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.482740 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:34.482781 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.482785 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.482859 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.482867 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.482897 76297 api.cc:9228] gelu API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.482901 76297 api.cc:9235] gelu kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool"]}
I0603 16:35:34.482969 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.482975 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.483007 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.483011 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.483042 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.483047 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:34.486696 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.486701 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.486738 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.486743 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:34.486814 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.486819 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.486855 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.486860 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.486892 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.486897 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:34.486900 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:34.486910 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.486914 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:34.486940 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.486945 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.486979 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.487000 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.487030 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.487035 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.487066 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.487071 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.487097 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.487102 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:34.487103 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:34.487112 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.487115 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:34.487138 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.487139 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:34.487143 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:34.487149 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.487151 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:34.487172 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.487175 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:34.487195 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.487201 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.487228 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.487233 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.487259 76297 api.cc:33484] softmax API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.487264 76297 api.cc:33491] softmax kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["int"]}
I0603 16:35:34.487284 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.487289 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:34.490720 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.490726 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.490748 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.490754 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:34.490778 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.490783 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:34.490787 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:34.490803 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.490814 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.490849 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.490854 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.490890 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.490895 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:34.491902 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.491907 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.491942 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.491947 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:34.491987 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.492012 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.492043 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.492048 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.492074 76297 api.cc:9228] gelu API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.492079 76297 api.cc:9235] gelu kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool"]}
I0603 16:35:34.492147 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.492152 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.492184 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.492188 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.492218 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.492223 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:34.495941 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.495946 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.495983 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.495988 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:34.496049 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.496054 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.496090 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.496094 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.496124 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.496129 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:34.496132 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:34.496143 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.496146 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:34.496174 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.496179 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.496212 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.496217 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.496246 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.496250 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.496282 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.496286 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.496311 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.496316 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:34.496320 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:34.496327 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.496330 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:34.496351 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.496353 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:34.496356 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:34.496363 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.496366 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:34.496385 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.496388 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:34.496407 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.496410 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.496443 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.496448 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.496470 76297 api.cc:33484] softmax API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.496475 76297 api.cc:33491] softmax kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["int"]}
I0603 16:35:34.496502 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.496507 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:34.499948 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.499953 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.499976 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.500011 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:34.500036 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.500041 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:34.500043 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:34.500059 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.500062 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.500097 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.500101 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.500139 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.500144 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:34.501127 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.501132 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.501168 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.501173 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:34.501211 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.501216 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.501250 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.501255 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.501279 76297 api.cc:9228] gelu API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.501283 76297 api.cc:9235] gelu kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool"]}
I0603 16:35:34.501350 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.501355 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.501389 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.501392 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.501421 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.501426 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:34.505177 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.505183 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.505223 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.505227 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:34.505288 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.505295 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.505331 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.505335 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.505367 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.505371 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:34.505374 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:34.505384 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.505388 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:34.505414 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.505419 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.505451 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.505455 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.505482 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.505487 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.505518 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.505523 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.505548 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.505553 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:34.505555 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:34.505563 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.505566 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:34.505587 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.505590 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:34.505592 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:34.505600 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.505604 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:34.505622 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.505628 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:34.505646 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.505649 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.505674 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.505679 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.505702 76297 api.cc:33484] softmax API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.505707 76297 api.cc:33491] softmax kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["int"]}
I0603 16:35:34.505731 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.505735 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:34.509202 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.509209 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.509236 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.509241 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:34.509268 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.509274 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:34.509276 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:34.509294 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.509297 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.509331 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.509335 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.509370 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.509375 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:34.510386 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.510391 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.510428 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.510450 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:34.510488 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.510493 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.510525 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.510529 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.510553 76297 api.cc:9228] gelu API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.510558 76297 api.cc:9235] gelu kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool"]}
I0603 16:35:34.510627 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.510632 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.510665 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.510670 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.510699 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.510704 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:34.514423 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.514432 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.514475 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.514497 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:34.514565 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.514570 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.514611 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.514616 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.514647 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.514652 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:34.514655 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:34.514667 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.514669 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:34.514695 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.514700 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.514732 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.514737 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.514765 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.514770 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.514801 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.514819 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.514847 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.514851 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:34.514854 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:34.514863 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.514865 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:34.514886 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.514892 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:34.514895 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:34.514904 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.514906 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:34.514927 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.514930 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:34.514950 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.514953 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.514982 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.514987 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.515012 76297 api.cc:33484] softmax API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.515017 76297 api.cc:33491] softmax kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["int"]}
I0603 16:35:34.515038 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.515043 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:34.518451 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.518457 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.518481 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.518486 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:34.518512 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.518517 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:34.518519 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:34.518536 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.518539 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.518575 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.518579 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.518616 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.518621 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:34.519644 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.519649 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.519687 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.519692 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:34.519731 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.519737 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.519769 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.519774 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.519799 76297 api.cc:9228] gelu API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.519817 76297 api.cc:9235] gelu kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool"]}
I0603 16:35:34.519887 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.519892 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.519925 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.519929 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.519958 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.519963 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:34.523691 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.523697 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.523739 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.523756 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:34.523831 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.523836 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.523875 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.523880 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.523910 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.523916 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:34.523918 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:34.523928 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.523931 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:34.523958 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.523962 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.523994 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.523999 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.524029 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.524044 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.524075 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.524080 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.524106 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.524109 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:34.524112 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:34.524120 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.524123 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:34.524143 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.524147 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:34.524149 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:34.524155 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.524158 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:34.524179 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.524183 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:34.524201 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.524205 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.524233 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.524238 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.524266 76297 api.cc:33484] softmax API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.524271 76297 api.cc:33491] softmax kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["int"]}
I0603 16:35:34.524292 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.524296 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:34.527726 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.527732 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.527755 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.527760 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:34.527783 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.527864 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:34.527869 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:34.527889 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.527892 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.527930 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.527935 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.527973 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.527978 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:34.528909 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.528914 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.528950 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.528955 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:34.528995 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.528999 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.529034 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.529039 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.529064 76297 api.cc:9228] gelu API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.529068 76297 api.cc:9235] gelu kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool"]}
I0603 16:35:34.529136 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.529140 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.529174 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.529179 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.529208 76297 api.cc:27164] dropout API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.529213 76297 api.cc:27171] dropout kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","bool","string","int","bool"]}
I0603 16:35:34.532938 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.532944 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.532981 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.532986 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:34.533077 76297 api.cc:33407] slice API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.533083 76297 api.cc:33414] slice kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int64_t>","IntArray","IntArray","vector<int64_t>","vector<int64_t>"]}
I0603 16:35:34.533125 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.533128 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.533167 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.533171 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.533206 76297 api.cc:22807] tanh API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.533213 76297 api.cc:22814] tanh kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":[]}
I0603 16:35:34.533257 76297 dygraph_api.cc:1733] reshape API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.533262 76297 dygraph_api.cc:1740] reshape kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["IntArray"]}
I0603 16:35:34.533264 76297 dygraph_api.cc:1757] Perform View between Output and Input Tensor, share allocation and inplace version.
I0603 16:35:34.533278 76297 api.cc:29470] gather API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.533282 76297 api.cc:29477] gather kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar"]}
I0603 16:35:34.533313 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.533317 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.533351 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.533355 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.533378 76297 api.cc:9228] gelu API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.533383 76297 api.cc:9235] gelu kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool"]}
I0603 16:35:34.533411 76297 dygraph_api.cc:699] layer_norm API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.533416 76297 dygraph_api.cc:706] layer_norm kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["float","int"]}
I0603 16:35:34.533473 76297 api.cc:34499] transpose API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.533479 76297 api.cc:34506] transpose kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["vector<int>"]}
I0603 16:35:34.533506 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.533511 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.533551 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.533556 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.533586 76297 api.cc:30593] matmul API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.533591 76297 api.cc:30600] matmul kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["bool","bool"]}
I0603 16:35:34.533625 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.533630 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.533754 76297 api.cc:28638] full API kernel key: [XPU, Undefined(AnyLayout), int64]
I0603 16:35:34.533762 76297 api.cc:28645] full kernel: {"input":[],"output":["XPU, NCHW, int64"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:34.533784 76297 api.cc:31621] not_equal API kernel key: [XPU, NCHW, int64]
I0603 16:35:34.533792 76297 api.cc:31628] not_equal kernel: {"input":["XPU, NCHW, int64","XPU, NCHW, int64"],"output":["XPU, NCHW, bool"],"attribute":[]}
I0603 16:35:34.533834 76297 api.cc:26250] cast API kernel key: [XPU, NCHW, bool]
I0603 16:35:34.533839 76297 api.cc:26257] cast kernel: {"input":["XPU, NCHW, bool"],"output":["XPU, NCHW, Undefined"],"attribute":["DataType"]}
I0603 16:35:34.533864 76297 api.cc:31270] multiply API kernel key: [XPU, NCHW, int64]
I0603 16:35:34.533870 76297 api.cc:31277] multiply kernel: {"input":["XPU, NCHW, int64","XPU, NCHW, int64"],"output":["XPU, NCHW, int64"],"attribute":[]}
I0603 16:35:34.533919 76297 api.cc:5746] cross_entropy_with_softmax API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.533924 76297 api.cc:5753] cross_entropy_with_softmax kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["bool","bool","bool","int","int"]}
I0603 16:35:34.534024 76297 api.cc:27087] divide API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.534030 76297 api.cc:27094] divide kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.534058 76297 api.cc:28638] full API kernel key: [XPU, Undefined(AnyLayout), int64]
I0603 16:35:34.534065 76297 api.cc:28645] full kernel: {"input":[],"output":["XPU, NCHW, int64"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:34.534078 76297 api.cc:31621] not_equal API kernel key: [XPU, NCHW, int64]
I0603 16:35:34.534081 76297 api.cc:31628] not_equal kernel: {"input":["XPU, NCHW, int64","XPU, NCHW, int64"],"output":["XPU, NCHW, bool"],"attribute":[]}
I0603 16:35:34.534101 76297 api.cc:26250] cast API kernel key: [XPU, NCHW, bool]
I0603 16:35:34.534106 76297 api.cc:26257] cast kernel: {"input":["XPU, NCHW, bool"],"output":["XPU, NCHW, Undefined"],"attribute":["DataType"]}
I0603 16:35:34.534121 76297 api.cc:31270] multiply API kernel key: [XPU, NCHW, int64]
I0603 16:35:34.534123 76297 api.cc:31277] multiply kernel: {"input":["XPU, NCHW, int64","XPU, NCHW, int64"],"output":["XPU, NCHW, int64"],"attribute":[]}
I0603 16:35:34.534154 76297 api.cc:5746] cross_entropy_with_softmax API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.534157 76297 api.cc:5753] cross_entropy_with_softmax kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32"],"attribute":["bool","bool","bool","int","int"]}
I0603 16:35:34.534204 76297 api.cc:34100] sum API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.534209 76297 api.cc:34107] sum kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, Undefined"],"attribute":["IntArray","DataType","bool"]}
I0603 16:35:34.534240 76297 api.cc:30971] mean API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.534245 76297 api.cc:30978] mean kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["IntArray","bool"]}
I0603 16:35:34.534266 76297 api.cc:25254] add API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.534271 76297 api.cc:25261] add kernel: {"input":["KPS, NCHW, float32","KPS, NCHW, float32"],"output":["KPS, NCHW, float32"],"attribute":[]}
I0603 16:35:34.534926 76297 api.cc:28638] full API kernel key: [XPU, Undefined(AnyLayout), float32]
I0603 16:35:34.534940 76297 api.cc:28645] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:34.536540 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.536553 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:34.537285 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.537293 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:34.538038 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.538046 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:34.538825 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.538831 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:34.539556 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.539563 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:34.540325 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.540333 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:34.541097 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.541105 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:34.541848 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.541854 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:34.542613 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.542618 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:34.543444 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.543452 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:34.544230 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.544237 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:34.545059 76297 api.cc:19119] scale API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.545066 76297 api.cc:19126] scale kernel: {"input":["XPU, NCHW, float32"],"output":["XPU, NCHW, float32"],"attribute":["Scalar","float","bool"]}
I0603 16:35:34.546185 76297 api.cc:28756] full_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.546200 76297 api.cc:28763] full kernel: {"input":[],"output":["XPU, NCHW, float32"],"attribute":["IntArray","Scalar","DataType"]}
I0603 16:35:34.546339 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.546347 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.546404 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.546409 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.546449 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.546452 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.546490 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.546495 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.546533 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.546538 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.546576 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.546579 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.546618 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.546622 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.546658 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.546662 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.546700 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.546705 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.546741 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.546744 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.546782 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.546785 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.546838 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.546844 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.546882 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.546887 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.546922 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.546926 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.546962 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.546967 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.547005 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.547009 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.547047 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.547051 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.547091 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.547096 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.547134 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.547139 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.547179 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.547183 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.547222 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.547226 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.547267 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.547271 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.547308 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.547313 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.547353 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.547358 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.547396 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.547400 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.547441 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.547444 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.547482 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.547487 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.547526 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.547531 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.547571 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.547575 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.547613 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.547618 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.547654 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.547659 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.547699 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.547703 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.547744 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.547747 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.547786 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.547791 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.547837 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.547842 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.547879 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.547884 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.547921 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.547925 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.547962 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.547967 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.548004 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.548008 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.548048 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.548051 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.548089 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.548094 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.548131 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.548136 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.548177 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.548180 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.548220 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.548224 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.548260 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.548264 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.548300 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.548305 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.548341 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.548346 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.548380 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.548385 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.548420 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.548425 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.548461 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.548466 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.548501 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.548506 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.548542 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.548545 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.548581 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.548586 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.548622 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.548626 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.548668 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.548673 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.548710 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.548714 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.548750 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.548755 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.548790 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.548795 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.548835 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.548837 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.548871 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.548877 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.548913 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.548918 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.548956 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.548960 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.548998 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.549002 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.549039 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.549043 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.549079 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.549084 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.549119 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.549124 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.549160 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.549165 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.549201 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.549206 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.549243 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.549247 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.549285 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.549290 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.549327 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.549332 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.549371 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.549376 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.549412 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.549417 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.549453 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.549458 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.549494 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.549499 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.549536 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.549541 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.549577 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.549582 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.549618 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.549623 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.549662 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.549666 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.549705 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.549710 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.549748 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.549753 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.549793 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.549798 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.549839 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.549842 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.549880 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.549885 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.549924 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.549928 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.549964 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.549969 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.550005 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.550010 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.550046 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.550050 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.550091 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.550096 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.550133 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.550138 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.550174 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.550179 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.550215 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.550220 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.550256 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.550261 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.550298 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.550302 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.550339 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.550344 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.550384 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.550390 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.550427 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.550432 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.550469 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.550473 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.550510 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.550515 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.550551 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.550555 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.550591 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.550596 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.550631 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.550635 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.550670 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.550675 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.550710 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.550714 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.550750 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.550755 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.550789 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.550794 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.550839 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.550844 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.550884 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.550887 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.550927 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.550931 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.550969 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.550973 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.551012 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.551017 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.551056 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.551060 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.551097 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.551102 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.551142 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.551146 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.551184 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.551188 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.551225 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.551230 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.551267 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.551271 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.551311 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.551316 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.551355 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.551359 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.551398 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.551402 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.551440 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.551445 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.551483 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.551487 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.551524 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.551528 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.551563 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.551568 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.551604 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.551609 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.551642 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.551647 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.551685 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.551690 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.551725 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.551729 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.551764 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.551769 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.551806 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.551827 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.551863 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.551868 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.551903 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.551908 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.551944 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.551949 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.551988 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.551993 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.552029 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.552033 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.552070 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.552074 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.552114 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.552119 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.552156 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.552161 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.552196 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.552201 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.552237 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.552240 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.552276 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.552280 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.552321 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.552325 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.552364 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.552369 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.552407 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.552412 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.552450 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.552454 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.552491 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.552495 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.552536 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.552539 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.552575 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.552579 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.552619 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.552623 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.552659 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.552664 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.552701 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.552706 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.552742 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.552747 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.552783 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.552788 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.552832 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.552839 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.552884 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.552889 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.552928 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.552933 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.552969 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.552973 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.553009 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.553014 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.553054 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.553058 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.553098 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.553102 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.553139 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.553144 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.553180 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.553185 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.553221 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.553225 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.553267 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.553270 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.553308 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.553313 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.553351 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.553356 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.553396 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.553400 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.553440 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.553444 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.553481 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.553485 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.553524 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.553527 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.553566 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.553571 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.553609 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.553613 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.553650 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.553654 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.553692 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.553696 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.553732 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.553736 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.553777 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.553781 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.553825 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.553829 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.553870 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.553875 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.553910 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.553915 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.553951 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.553956 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.553992 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.553997 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.554034 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.554039 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.554075 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.554080 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.554116 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.554119 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.554158 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.554163 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.554200 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.554205 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.554244 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.554248 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.554288 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.554292 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.554332 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.554335 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.554370 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.554375 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.554417 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.554421 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.554461 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.554466 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.554503 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.554507 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.554543 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.554548 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.554585 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.554590 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.554627 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.554631 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.554668 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.554673 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.554708 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.554713 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.554750 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.554754 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.554790 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.554795 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.554893 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.554899 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.554940 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.554944 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.554983 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.554987 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.555023 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.555027 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.555063 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.555068 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
I0603 16:35:34.555104 76297 api.cc:1149] adamw_ API kernel key: [XPU, NCHW, float32]
I0603 16:35:34.555109 76297 api.cc:1156] adamw kernel: {"input":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32"],"output":["XPU, NCHW, float32","XPU, NCHW, float32","XPU, NCHW, float32","Undefined, NCHW, float32","Undefined, NCHW, float32","XPU, NCHW, float32"],"attribute":["Scalar","Scalar","Scalar","float","float","bool","bool","int64_t","bool","bool"]}
[32m[2024-06-03 16:35:34,747] [    INFO][0m - global step: 10, epoch: 0, batch: 9, loss: 11.075965, avg_reader_cost: 0.00010 sec, avg_batch_cost: 0.32885 sec, avg_samples: 32.00000, ips: 97.30886 sequences/sec,  [0m
[32m[2024-06-03 16:35:34,751] [    INFO][0m - Configuration saved in ./output/model_10/config.json[0m
[32m[2024-06-03 16:35:36,056] [    INFO][0m - Model weights saved in ./output/model_10/model_state.pdparams[0m
[32m[2024-06-03 16:35:36,057] [    INFO][0m - tokenizer config file saved in ./output/model_10/tokenizer_config.json[0m
[32m[2024-06-03 16:35:36,057] [    INFO][0m - Special tokens file saved in ./output/model_10/special_tokens_map.json[0m
Namespace(model_type='bert', model_name_or_path='bert-base-uncased', input_dir='./data/wikicorpus_en_seqlen128', output_dir='./output', max_predictions_per_seq=20, batch_size=32, learning_rate=0.0001, weight_decay=0.01, adam_epsilon=1e-06, max_grad_norm=1.0, max_steps=10, preprocessing_num_workers=0, warmup_steps=10000, logging_steps=1, save_steps=20000, seed=42, device='xpu', use_amp=False, amp_level='O2', scale_loss=32768, to_static=False, profiler_options=None, fuse_transformer=False, cinn=False)
